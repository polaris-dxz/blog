{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","path":"fancybox/jquery.fancybox.min.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","path":"fancybox/jquery.fancybox.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.6.4.min.js","path":"js/jquery-3.6.4.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1},{"_id":"source/uploads/avatar.jpg","path":"uploads/avatar.jpg","modified":0,"renderable":0},{"_id":"node_modules/hexo-theme-icarus/source/css/default.styl","path":"css/default.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-icarus/source/css/cyberpunk.styl","path":"css/cyberpunk.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-icarus/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-icarus/source/img/logo.svg","path":"img/logo.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-icarus/source/img/avatar.png","path":"img/avatar.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-icarus/source/img/favicon.svg","path":"img/favicon.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-icarus/source/img/og_image.png","path":"img/og_image.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-icarus/source/img/razor-bottom-black.svg","path":"img/razor-bottom-black.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-icarus/source/img/razor-top-black.svg","path":"img/razor-top-black.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-icarus/source/js/animation.js","path":"js/animation.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-icarus/source/js/back_to_top.js","path":"js/back_to_top.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-icarus/source/js/column.js","path":"js/column.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-icarus/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"source/assets/avatar.jpg","path":"assets/avatar.jpg","modified":0,"renderable":0}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1704213913278},{"_id":"node_modules/hexo-theme-landscape/package.json","hash":"4bf95d52f77edf811f23f6d264a7493311a8d078","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/_config.yml","hash":"b608c1f1322760dce9805285a602a95832730a2e","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/README.md","hash":"1a9b279e6dd29fd19245f913f0c4a316ffaa62db","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/languages/de-DE.yml","hash":"d29d1c4256b7ed9df42f511c2ff0a23ad5fd6c1f","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/languages/en-US.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/languages/en-GB.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/languages/es-ES.yml","hash":"7008a8fc91f18d2a735864817b8ebda30c7a2c66","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/languages/en.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/languages/fr-FR.yml","hash":"8d09dbdab00a30a2870b56f7c0a7ca7deafa7b88","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/languages/hu.yml","hash":"284d557130bf54a74e7dcef9d42096130e4d9550","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/languages/it-IT.yml","hash":"2cb6dc2fab9bd2dbe1c8bb869a9e8bf85a564fdd","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/languages/hu-HU.yml","hash":"712d18664898fa21ba38d4973e90ef41a324ea25","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/languages/ja-JP.yml","hash":"08481267e0c112e1f6855620f2837ec4c4a98bbd","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/languages/it.yml","hash":"89b7d91306b2c1a0f3ac023b657bf974f798a1e8","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/languages/ko-KR.yml","hash":"19209ad8f9d4057e8df808937f950eb265e1db69","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/languages/mn.yml","hash":"2e7523951072a9403ead3840ad823edd1084c116","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/languages/pt-PT.yml","hash":"0f852b6b228e6ea59aa3540574bb89b233f2a098","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/languages/mn-MN.yml","hash":"b9e5f3e7c0c2f779cf2cfded6db847b5941637ca","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/languages/nl-NL.yml","hash":"5ebbc30021f05d99938f96dfff280392df7f91f0","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/languages/th-TH.yml","hash":"ebfdba9bc4842c829473c1e6e4544344f182724d","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/languages/tr.yml","hash":"a1cdbfa17682d7a971de8ab8588bf57c74224b5b","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/languages/ru-RU.yml","hash":"360d11a28bb768afb1dd15f63fa7fd3a8cc547ee","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/languages/th.yml","hash":"84a55b00aa01f03982be294e43c33a20e6d32862","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/languages/zh-CN.yml","hash":"1efd95774f401c80193eac6ee3f1794bfe93dc5a","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/layout/layout.ejs","hash":"0d1765036e4874500e68256fedb7470e96eeb6ee","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/scripts/fancybox.js","hash":"c857d7a5e4a5d71c743a009c5932bf84229db428","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/after-footer.ejs","hash":"377d257d5d16e0158a4405c72401517b074fd7ff","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/article.ejs","hash":"56597e951203dd662a6d2c817c7c4f1c920d4a25","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive.ejs","hash":"7cb70a7a54f8c7ae49b10d1f37c0a9b74eab8826","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/footer.ejs","hash":"3656eb692254346671abc03cb3ba1459829e0dce","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/head.ejs","hash":"f05bced793b0314d4f2ef0c993b3a51d0b7d203a","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/gauges-analytics.ejs","hash":"21a1e2a3907d1a3dad1cd0ab855fe6735f233c74","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/header.ejs","hash":"6a5033d189554c9a6d42e2ef7952ae5c9742648e","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/recent_posts.ejs","hash":"60c4b012dcc656438ff59997e60367e5a21ab746","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/google-analytics.ejs","hash":"2ea7442ea1e1a8ab4e41e26c563f58413b59a3d0","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","hash":"e55a1d92954ed20f6887f92dc727bb995a010a43","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/source/css/_variables.styl","hash":"ca28281423ae57d76b6c1eb91cd845fd4e518bd6","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","hash":"49773efcb2221bbdf2d86f3f5c5ff2d841b528cc","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/date.ejs","hash":"f1458584b679545830b75bef2526e2f3eb931045","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/title.ejs","hash":"4d7e62574ddf46de9b41605fe3140d77b5ddb26d","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/header.styl","hash":"268d2989acb06e2ddd06cc36a6918c6cd865476b","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/highlight.styl","hash":"9cc3b2927d814f2f6e8e188f9d3657b94f4c6ef3","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/article.styl","hash":"2d1f6f79ebf9cb55ebdb3865a2474437eb2b37c6","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.6.4.min.js","hash":"eda46747c71d38a880bee44f9a439c3858bb8f99","modified":1704212439868},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1704212439868},{"_id":"public/2024/01/03/hello-world/index.html","hash":"109ef73879f2df88f78067344f698bbee1ef22cb","modified":1704223898100},{"_id":"public/archives/index.html","hash":"e5ba08bb602232fee662516e08cfcb90b8ee5563","modified":1704223898100},{"_id":"public/archives/2024/index.html","hash":"0f98a0543f0930dd6fa2584134ad1cc00425b80e","modified":1704223898100},{"_id":"public/archives/2024/01/index.html","hash":"a0fb9f0dd5ece0c236bc9d70c0a384656aadfaed","modified":1704223898100},{"_id":"public/index.html","hash":"3fb7eb874cc7614455a104c01b5b93ced41a0e38","modified":1704223898100},{"_id":"public/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1704215303510},{"_id":"public/js/script.js","hash":"49773efcb2221bbdf2d86f3f5c5ff2d841b528cc","modified":1704215303510},{"_id":"public/css/style.css","hash":"8717dd0ed1fe2a4237fbfb4f4f6e566cb1ee16b7","modified":1704216758600},{"_id":"public/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1704215303510},{"_id":"public/js/jquery-3.6.4.min.js","hash":"eda46747c71d38a880bee44f9a439c3858bb8f99","modified":1704215303510},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1704215303510},{"_id":"source/_posts/2016/instrument-详解/instrument.png","hash":"74ded96ccc7883a576e55c8c1bf1b3f852329b83","modified":1704211765082},{"_id":"source/_posts/2013/Http报文详解/响应报文首部.png","hash":"2a4c0a9b868def4daed483d1976347ea85be52f0","modified":1704211765078},{"_id":"source/.DS_Store","hash":"7df238a031e4ebf982e9f9877faaa934a76d4c07","modified":1704215935321},{"_id":"source/_data/gallery.yml","hash":"b7663435c7a8eccb9ad385081c23662653af0428","modified":1704211765072},{"_id":"source/_drafts/UITableView详解.md","hash":"0fb8da0c89e3eaf5d4061e7222c615322cc82b99","modified":1704211765072},{"_id":"source/_data/_links.yml","hash":"49d585246485cc86abdd91f23cda9416fb961c10","modified":1704211765071},{"_id":"source/_drafts/centOS修改ssh端口.md","hash":"caf633ac4172d6989b59db68ac50e3945aa09515","modified":1704211765073},{"_id":"source/_data/links.yml","hash":"49d585246485cc86abdd91f23cda9416fb961c10","modified":1704211765072},{"_id":"source/_drafts/gem、rvm使用心得.md","hash":"bbdb0b3144d6a72be74af09317683da2e53aa8fd","modified":1704211765073},{"_id":"source/_drafts/iOS开发笔记.md","hash":"8a864a4125f8f490adf802a207cb7889ebe13f02","modified":1704211765073},{"_id":"source/_drafts/vps-部署-blog-的一些坑.md","hash":"3535fcce7bbb2796708bb5ef61363da0c7726aab","modified":1704211765074},{"_id":"source/_drafts/github-使用手册.md","hash":"56850d7f86451487fb5d017dd50516a32f2f1a62","modified":1704211765073},{"_id":"source/_drafts/一些计算机硬件知识.md","hash":"d8e7b8929988aad7000229542445e948d21dffc9","modified":1704211765074},{"_id":"source/_drafts/关于孩子早教的一点看法.md","hash":"8c14ed6ba47b966371535889de70a910cfe57ff6","modified":1704211765074},{"_id":"source/_drafts/分享几个常用的插件工具.md","hash":"c569ee0dc111eb20ae0eb5900635b78d52176625","modified":1704211765075},{"_id":"source/_drafts/全栈工程师学习路线.md","hash":"e594824ba5563d99cfebdebbfb7c85058b8e19c1","modified":1704211765074},{"_id":"source/_drafts/图解HTTP读书笔记.md","hash":"748fe6516993fd764c47b7dfc0cf906bcaaae4b4","modified":1704211765075},{"_id":"source/_drafts/股票术语.md","hash":"6447fef161e130c993746a9354036cd72d919fa9","modified":1704211765076},{"_id":"source/_drafts/命理研究.md","hash":"6e901412c51333d97397956559b5492e3fd474e4","modified":1704211765075},{"_id":"source/_drafts/如何快速学习一门编程语言.md","hash":"54d67a0f34e7ee9ee1cd94ac67c72306b5352a34","modified":1704211765075},{"_id":"source/_drafts/计算机工具书整理.md","hash":"f2e0a058608c3f9b3a1dc097f8d3cd05521d69fb","modified":1704211765076},{"_id":"source/_drafts/浅谈-iOS-系统下的物理内存与虚拟内存.md","hash":"caf05c75483d24e49a182f8db3e289a3a7f06eb7","modified":1704211765076},{"_id":"source/_drafts/冷笑话288则.md","hash":"861943ae091f6df4fb9015cbe6e08298c37ab998","modified":1704211765075},{"_id":"source/_posts/.DS_Store","hash":"0d6ba03c89e49f1f347383241a96aa331c724f18","modified":1704215344403},{"_id":"source/about/index.md","hash":"96503da2a51ef2deebaf632731b3a0516915baae","modified":1704211765084},{"_id":"source/gallery/index.md","hash":"5fa1bf19732844af5cc1eaf832708c92a9420d58","modified":1704211765084},{"_id":"source/group/index.md","hash":"441eadb0ba84574d92cb0d93f2b510207e87e531","modified":1704211765084},{"_id":"source/categories/index.md","hash":"1ae9bd2f05488ba214983d94a3f90a6be4ff488c","modified":1704211765084},{"_id":"source/tag/index.md","hash":"e86e136e1db84e83d13f91f572292fd75d05c8ef","modified":1704211765085},{"_id":"source/_posts/以太坊开发入门.md","hash":"1aabbb97f3c27e6fe08112f00d77c22d7a1f8780","modified":1704211765083},{"_id":"source/_posts/2013/Http报文详解.md","hash":"1364c0e7d1217a1cb8c4c059af17dd370d0d6bf0","modified":1704211765076},{"_id":"source/_posts/2014/ios-HTTP请求.md","hash":"a1831d41055db5da5f29695e52f0da1b0c7a4de5","modified":1704211765079},{"_id":"source/_posts/2014/weak和-strong.md","hash":"25c11c640c7a02dc11882ac072da9149bf5f3be7","modified":1704211765079},{"_id":"source/_posts/2013/cUrl使用心得.md","hash":"9da7d54cf3383a2ad364fdfec0d70bc12448ca7b","modified":1704211765079},{"_id":"source/_posts/2014/ios知识脉络梳理.md","hash":"600b6039bbf3c034688d6ca7fc06951ef8877d53","modified":1704211765079},{"_id":"source/_posts/2014/闭包、lambda-计算、block.md","hash":"5b5f7d0ec65369a078c279562826170d417becc9","modified":1704211765080},{"_id":"source/_posts/2017/从微信跳一跳学习逆向开发iOS.md","hash":"01cbd84dd2660ca52e2064d8f74f4f5c7ace5b29","modified":1704211765083},{"_id":"source/_posts/2016/instrument-详解.md","hash":"64990cca31fd5ca6d0a2ba12f436868c799f773c","modified":1704211765081},{"_id":"source/_posts/2015/Xcode-环境变量.md","hash":"e579051839681d176c41ae9e23aa9f3a483e91aa","modified":1704211765080},{"_id":"source/uploads/avatar.jpg","hash":"4535f5c3f19d817c558619017c6ad9b912289a40","modified":1704211765086},{"_id":"public/categories/index.html","hash":"0ecc68a6c5487489350b1f7d0d455f4c1f4a99ee","modified":1704223898100},{"_id":"public/about/index.html","hash":"ce8546e86b6985e9011a11314c16cbd5f7310985","modified":1704223898100},{"_id":"public/gallery/index.html","hash":"28b8a14fc97827acad81114714921ffa480e6c49","modified":1704223898100},{"_id":"public/group/index.html","hash":"71d725ce874b5777ebd0b338272be0b50836f482","modified":1704223898100},{"_id":"public/tag/index.html","hash":"99894347f83b678bfbea3765dae4fc637fabc399","modified":1704223898100},{"_id":"public/2017/12/29/2017/从微信跳一跳学习逆向开发iOS/index.html","hash":"7b2cf05da30f68015bb81826817f079afe01ede5","modified":1704223898100},{"_id":"public/2014/05/20/2014/weak和-strong/index.html","hash":"cd031ad149f224d243f5cae472550bb4f64bb8b7","modified":1704223898100},{"_id":"public/2014/05/16/2014/ios-HTTP请求/index.html","hash":"b135f3b9e1332349c2f63a6b5eb2db63249d01d3","modified":1704223898100},{"_id":"public/2018/04/13/以太坊开发入门/index.html","hash":"827c61556fa6bc9326be0675882907f4c662c5be","modified":1704223898100},{"_id":"public/2016/05/15/2016/instrument-详解/index.html","hash":"98e90776ae35515b17bef8e23580f6ea3e3d28d4","modified":1704223898100},{"_id":"public/2015/04/13/2015/Xcode-环境变量/index.html","hash":"b11c4bdd9d58304adca4c3ec7011782dbcf0ede7","modified":1704223898100},{"_id":"public/2014/05/15/2014/闭包、lambda-计算、block/index.html","hash":"e464c095dd24fe22179aef467e9fb30d3d2f9a11","modified":1704223898100},{"_id":"public/2013/05/13/2013/Http报文详解/index.html","hash":"4f3c76cf79e31089f0732535731e1702a7edec96","modified":1704223898100},{"_id":"public/2014/12/19/2014/ios知识脉络梳理/index.html","hash":"ca1fa28161300d80d21f715f68852e97e5136eb7","modified":1704223898100},{"_id":"public/2013/01/13/2013/cUrl使用心得/index.html","hash":"e50e44bc7672bb86f6fa83944b33bad44ed56716","modified":1704223898100},{"_id":"public/archives/2013/01/index.html","hash":"a4f3aa6327e087959b778d64291d72db3274ed58","modified":1704223898100},{"_id":"public/archives/page/2/index.html","hash":"c0c250fb5301d472375e887959cfe73cfd464dd6","modified":1704223898100},{"_id":"public/archives/2013/05/index.html","hash":"e7971a3968a075cf4b643c9083cca29bc89388a9","modified":1704223898100},{"_id":"public/archives/2013/index.html","hash":"861737184d3f4e9d3122fd25430b1fd48fa843ee","modified":1704223898100},{"_id":"public/archives/2014/index.html","hash":"c58e0c9b0916a1eda344083aea8d3d1ad75f7693","modified":1704223898100},{"_id":"public/archives/2014/12/index.html","hash":"ac48eaada9ffc4d6a589ec71af07d89526b2ed56","modified":1704223898100},{"_id":"public/archives/2015/04/index.html","hash":"a2094c14a951d0f0860db1c5e733666fde08ee7b","modified":1704223898100},{"_id":"public/archives/2014/05/index.html","hash":"76123d4fabd30aa4f28154af512e1e96d6bf0c27","modified":1704223898100},{"_id":"public/archives/2016/index.html","hash":"ec7bf6a9162611febcf686cdddb6fc48fb29e338","modified":1704223898100},{"_id":"public/archives/2016/05/index.html","hash":"4dbf635fe887982476fbe395216f3111d4a2f7f2","modified":1704223898100},{"_id":"public/archives/2015/index.html","hash":"ba0ae90a453da00ec8731213f06e26dc33fa2099","modified":1704223898100},{"_id":"public/archives/2018/index.html","hash":"d81203941cc43519efa5e7ad9284be1a6d7b8926","modified":1704223898100},{"_id":"public/archives/2017/index.html","hash":"18db11ba56a6dd9c1c3d2608dff68adf0ed36162","modified":1704223898100},{"_id":"public/archives/2018/04/index.html","hash":"f50b8ea411c3d44b79fb42059db87a9374d38cfb","modified":1704223898100},{"_id":"public/archives/2017/12/index.html","hash":"a5c450c3d965905903f3ae58ad8808055e2b78ca","modified":1704223898100},{"_id":"public/categories/iOS-Dev/index.html","hash":"6aa9ed890e2759cba4f009938d01359632416afb","modified":1704223898100},{"_id":"public/categories/Linux/index.html","hash":"fa08f5adae71704bdbf8bc4b85f6b46caa50e38c","modified":1704223898100},{"_id":"public/categories/Http/index.html","hash":"5438c3beda4f1352c66ea098c150273874ad12ea","modified":1704223898100},{"_id":"public/tags/instrument/index.html","hash":"35c25fde798bdee047df9b33699060c6939a6fa2","modified":1704223898100},{"_id":"public/tags/网络请求/index.html","hash":"5c87cc38165d40ba3faab4ed84121fde685cfbdd","modified":1704223898100},{"_id":"public/tags/libimobiledevice/index.html","hash":"2facfb7f247e0cc4fdfd2d8b9cc8ef32e91304b8","modified":1704223898100},{"_id":"public/tags/cUrl/index.html","hash":"4c88427d2e446f0b71d8a0326fdcd085327cbe84","modified":1704223898100},{"_id":"public/tags/Http-报文/index.html","hash":"0660174ad07bc610379a77b216c77b982a61cf69","modified":1704223898100},{"_id":"public/tags/weak-strong/index.html","hash":"e42212b5ef269ab347b65416842e01951e17c8a0","modified":1704223898100},{"_id":"public/tags/URL/index.html","hash":"0ec0dbdd2929ef5c4ad8ebe55390df5fc03355f3","modified":1704223898100},{"_id":"public/page/2/index.html","hash":"0a9c3fee1fab64b297d87f2b2fae961239d1d19e","modified":1704223898100},{"_id":"public/uploads/avatar.jpg","hash":"4535f5c3f19d817c558619017c6ad9b912289a40","modified":1704216115302},{"_id":"node_modules/hexo-theme-icarus/layout/comment/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1704216734024},{"_id":"node_modules/hexo-theme-icarus/layout/donate/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1704216734034},{"_id":"node_modules/hexo-theme-icarus/layout/misc/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1704216734039},{"_id":"node_modules/hexo-theme-icarus/layout/search/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1704216734045},{"_id":"node_modules/hexo-theme-icarus/layout/share/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1704216734050},{"_id":"node_modules/hexo-theme-icarus/include/schema/comment/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1704216733952},{"_id":"node_modules/hexo-theme-icarus/include/schema/donate/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1704216733979},{"_id":"node_modules/hexo-theme-icarus/include/schema/misc/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1704216733995},{"_id":"node_modules/hexo-theme-icarus/include/schema/share/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1704216734019},{"_id":"node_modules/hexo-theme-icarus/include/schema/search/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1704216734007},{"_id":"node_modules/hexo-theme-icarus/CONTRIBUTING.md","hash":"70254c6778c1e41bb2ff222bbf3a70b2239b9bc1","modified":1704216734171},{"_id":"node_modules/hexo-theme-icarus/package.json","hash":"75db783b805785377db28d4cb844ee65bb7be613","modified":1704216734116},{"_id":"node_modules/hexo-theme-icarus/LICENSE","hash":"86037e5335a49321fa73b7815cab542057fac944","modified":1704216734054},{"_id":"node_modules/hexo-theme-icarus/include/config.js","hash":"1ff0f174e9670074ad2bee890d5b6da486800c9a","modified":1704216734073},{"_id":"node_modules/hexo-theme-icarus/include/dependency.js","hash":"0ca35dec92ccf383f45db905db1a5a0e92d7209e","modified":1704216734078},{"_id":"node_modules/hexo-theme-icarus/README.md","hash":"32f9f4fc8cd7ec60b30544bd2e558b593519ae5d","modified":1704216734172},{"_id":"node_modules/hexo-theme-icarus/include/register.js","hash":"ec6596b63bfb4349ba61792d905abe8e06fea625","modified":1704216734088},{"_id":"node_modules/hexo-theme-icarus/languages/de.yml","hash":"78421f09961ca0b24756a0688fb2cb2e2696e25f","modified":1704216734212},{"_id":"node_modules/hexo-theme-icarus/languages/en.yml","hash":"3d674204d9f723c829226da745afddd180c1131d","modified":1704216734213},{"_id":"node_modules/hexo-theme-icarus/languages/es.yml","hash":"38579b8fad4b6997362acc770615bcd85ff20f68","modified":1704216734214},{"_id":"node_modules/hexo-theme-icarus/languages/fr.yml","hash":"06d5c819d6108a42b28cff7b52e5410d0bed55d1","modified":1704216734215},{"_id":"node_modules/hexo-theme-icarus/languages/id.yml","hash":"5e48b1d62378cadeb64b88349477726a5c1bae47","modified":1704216734215},{"_id":"node_modules/hexo-theme-icarus/languages/ja.yml","hash":"801d9930fef48d6a3f80470d5bed4f3eb78147e6","modified":1704216734215},{"_id":"node_modules/hexo-theme-icarus/languages/ko.yml","hash":"e3374265377809c1518114cf352b595840c0b416","modified":1704216734216},{"_id":"node_modules/hexo-theme-icarus/languages/pl.yml","hash":"2e7debb44cd91096f30efc87bf8d6b1d0d0214c9","modified":1704216734216},{"_id":"node_modules/hexo-theme-icarus/languages/pt-BR.yml","hash":"ee8f73350e4c6e2f63b7fc72b34472a6b1e21244","modified":1704216734217},{"_id":"node_modules/hexo-theme-icarus/languages/ru.yml","hash":"9d91358c2acbe7a0f2a25daf7f65b999ff32d068","modified":1704216734217},{"_id":"node_modules/hexo-theme-icarus/languages/tk.yml","hash":"ca583168bd2025124a1cd0e977da475d7a7496fd","modified":1704216734218},{"_id":"node_modules/hexo-theme-icarus/languages/tr.yml","hash":"dd0a7bfe14848d6e1aa229198fe1db03e08e305e","modified":1704216734218},{"_id":"node_modules/hexo-theme-icarus/languages/zh-CN.yml","hash":"02475ba14afc70dfeaf5678467cee307835e4efa","modified":1704216734219},{"_id":"node_modules/hexo-theme-icarus/languages/vn.yml","hash":"5f2fffa642110c81d8f529949711c9d19ad6bbbe","modified":1704216734218},{"_id":"node_modules/hexo-theme-icarus/layout/archive.jsx","hash":"99bf235042d0c57af15d2f108ba5eda77443fea8","modified":1704216734132},{"_id":"node_modules/hexo-theme-icarus/languages/zh-TW.yml","hash":"a6826e0c8cdb9ad286324b682b466a9e2ad78e6f","modified":1704216734219},{"_id":"node_modules/hexo-theme-icarus/layout/categories.jsx","hash":"b8ad43e28a4990d222bfbb95b032f88555492347","modified":1704216734141},{"_id":"node_modules/hexo-theme-icarus/layout/category.jsx","hash":"fd15e4eac32de9ac8687aeb3dbe179ab61375700","modified":1704216734141},{"_id":"node_modules/hexo-theme-icarus/layout/index.jsx","hash":"0a84a2348394fa9fc5080dd396bd28d357594f47","modified":1704216734149},{"_id":"node_modules/hexo-theme-icarus/layout/page.jsx","hash":"d26c2db57e5a88d6483a03aeb51cda9d191d8cea","modified":1704216734153},{"_id":"node_modules/hexo-theme-icarus/scripts/index.js","hash":"0c666db6fcb4ffc4d300f4e108c00ee42b1cbbe6","modified":1704216734083},{"_id":"node_modules/hexo-theme-icarus/layout/layout.jsx","hash":"ac7c4e3465a116c7f05f8c2e09ee6d6b9467abf1","modified":1704216734151},{"_id":"node_modules/hexo-theme-icarus/layout/post.jsx","hash":"d26c2db57e5a88d6483a03aeb51cda9d191d8cea","modified":1704216734155},{"_id":"node_modules/hexo-theme-icarus/include/migration/head.js","hash":"7189efe33d18927d3790e8afb06642fb293b8603","modified":1704216734081},{"_id":"node_modules/hexo-theme-icarus/include/migration/v5_v5.1.js","hash":"073f22bd16e34b56f016633b1676dab2e7d8843d","modified":1704216734095},{"_id":"node_modules/hexo-theme-icarus/layout/tags.jsx","hash":"2c42cb64778235dd220c563a27a92108ddc50cc4","modified":1704216734167},{"_id":"node_modules/hexo-theme-icarus/layout/tag.jsx","hash":"d2f18cac32ca2725d34ccff3f2051c623be6c892","modified":1704216734166},{"_id":"node_modules/hexo-theme-icarus/include/migration/v2_v3.js","hash":"3ccb2d2ce11018bebd7172da66faecc3983bff00","modified":1704216734090},{"_id":"node_modules/hexo-theme-icarus/include/migration/v3_v4.js","hash":"9faf2184d7fe87debfbe007f3fc9079dcbcafcfe","modified":1704216734092},{"_id":"node_modules/hexo-theme-icarus/include/schema/config.json","hash":"f233678cd656c0e300181ca79dd30cb42fc213b3","modified":1704216734110},{"_id":"node_modules/hexo-theme-icarus/include/migration/v4_v5.js","hash":"6342310892d113763b5544789b45d44c0ccf2854","modified":1704216734094},{"_id":"node_modules/hexo-theme-icarus/include/style/base.styl","hash":"2bca6ad099949d52236c87db8db1002ffb99774c","modified":1704216734196},{"_id":"node_modules/hexo-theme-icarus/include/style/card.styl","hash":"f78674422eb408cd17c17bbdc3ee1ebe4a453e05","modified":1704216734197},{"_id":"node_modules/hexo-theme-icarus/include/style/article.styl","hash":"105c983871b6c9148d97a0f756886e56411572bd","modified":1704216734195},{"_id":"node_modules/hexo-theme-icarus/include/style/button.styl","hash":"0fb35b4786be1b387c751fa2849bc71523fcedd4","modified":1704216734196},{"_id":"node_modules/hexo-theme-icarus/include/style/codeblock.styl","hash":"ec54dc24eb4d9802d8fefc44c210558bc1641109","modified":1704216734197},{"_id":"node_modules/hexo-theme-icarus/include/style/footer.styl","hash":"a4ad715dee38b249538ac6cce94efc9b355a904b","modified":1704216734201},{"_id":"node_modules/hexo-theme-icarus/include/style/helper.styl","hash":"9f3393e6122cc9f351091bfab960674e962da343","modified":1704216734202},{"_id":"node_modules/hexo-theme-icarus/include/style/navbar.styl","hash":"34f09b144cb46a25ec2cc7260a6c207dd34ff1fe","modified":1704216734202},{"_id":"node_modules/hexo-theme-icarus/include/style/donate.styl","hash":"8d0af00628c13134b5f30a558608e7bebf18c2ec","modified":1704216734201},{"_id":"node_modules/hexo-theme-icarus/include/style/plugin.styl","hash":"084843d5a522029e0f84a4fe791fbcb2cabd4c36","modified":1704216734203},{"_id":"node_modules/hexo-theme-icarus/include/style/responsive.styl","hash":"207083fe287612cddee6608b541861b14ac8de81","modified":1704216734204},{"_id":"node_modules/hexo-theme-icarus/include/style/search.styl","hash":"416737e1da4e7e907bd03609b0fee9e2aacfe56c","modified":1704216734205},{"_id":"node_modules/hexo-theme-icarus/include/style/pagination.styl","hash":"b81bcd7ff915b4e9299533addc01bc4575ec35e3","modified":1704216734203},{"_id":"node_modules/hexo-theme-icarus/include/style/timeline.styl","hash":"ea61798a09bffdda07efb93c2ff800b63bddc4c4","modified":1704216734206},{"_id":"node_modules/hexo-theme-icarus/include/util/console.js","hash":"59cf9d277d3ac85a496689bd811b1c316001641d","modified":1704216734076},{"_id":"node_modules/hexo-theme-icarus/include/style/widget.styl","hash":"c746902251136544eb3fe523235b3183f4189460","modified":1704216734207},{"_id":"node_modules/hexo-theme-icarus/layout/common/article.jsx","hash":"1d06eee32ea1fcb3162227eb1d7d19be39b6f5e3","modified":1704216734139},{"_id":"node_modules/hexo-theme-icarus/layout/common/comment.jsx","hash":"427089c33002707b76e2f38709459a6824fd0f9b","modified":1704216734142},{"_id":"node_modules/hexo-theme-icarus/layout/common/donates.jsx","hash":"889fb0a7ccc502f0a43b4a18eb330e351e50493c","modified":1704216734143},{"_id":"node_modules/hexo-theme-icarus/layout/common/footer.jsx","hash":"de966666f1e4ef80e0d15081b2709c3065b246dd","modified":1704216734145},{"_id":"node_modules/hexo-theme-icarus/layout/common/scripts.jsx","hash":"4816c9099a881b5f7b13af3e42caae36edbffccd","modified":1704216734163},{"_id":"node_modules/hexo-theme-icarus/layout/common/head.jsx","hash":"2ec1f511f32e3a9c86d49f1338f57ae5ece18898","modified":1704216734148},{"_id":"node_modules/hexo-theme-icarus/layout/common/navbar.jsx","hash":"d96e501e52861056474659f96ee0206588d8c93a","modified":1704216734152},{"_id":"node_modules/hexo-theme-icarus/layout/common/plugins.jsx","hash":"f6826c1a5f5f59f4a0aa00c63bdb0ad4ff4eab69","modified":1704216734154},{"_id":"node_modules/hexo-theme-icarus/layout/common/search.jsx","hash":"6f244a37293031670a2964fe424ecd062e591d7b","modified":1704216734164},{"_id":"node_modules/hexo-theme-icarus/layout/common/share.jsx","hash":"c9fb0319ad5e5a10ad3636b26a6c2afed14c590f","modified":1704216734165},{"_id":"node_modules/hexo-theme-icarus/layout/common/widgets.jsx","hash":"251263b97de12f2b8d1fce2514e83430f2515b94","modified":1704216734168},{"_id":"node_modules/hexo-theme-icarus/layout/plugin/animejs.jsx","hash":"e2aa27c3501a58ef1e91e511557b77395c2c02aa","modified":1704216734129},{"_id":"node_modules/hexo-theme-icarus/layout/plugin/back_to_top.jsx","hash":"7fc0c5aaabd7d0eaff04cb68ec139442dc3414e8","modified":1704216734140},{"_id":"node_modules/hexo-theme-icarus/layout/widget/profile.jsx","hash":"0d3a7fd922c12cc45d2c8d26a8f4d3a9a6ed0ae0","modified":1704216734161},{"_id":"node_modules/hexo-theme-icarus/source/css/default.styl","hash":"b01da3028e5a1267a40aaae5c86a11187a2259e3","modified":1704216734200},{"_id":"node_modules/hexo-theme-icarus/source/css/cyberpunk.styl","hash":"ae17d3528df0c3f089df14a06b7bd82f1bc5fed9","modified":1704216734200},{"_id":"node_modules/hexo-theme-icarus/source/css/style.styl","hash":"5b9815586e993a6ccbe8cdcfc0c65ea38fc315ac","modified":1704216734206},{"_id":"node_modules/hexo-theme-icarus/source/img/logo.svg","hash":"e9b5c1438ddb576693a15d0713b2a1d9ceda4be9","modified":1704216734209},{"_id":"node_modules/hexo-theme-icarus/source/img/favicon.svg","hash":"16fd847265845063a16596761cddb32926073dd2","modified":1704216734207},{"_id":"node_modules/hexo-theme-icarus/source/img/avatar.png","hash":"0d8236dcca871735500e9d06bbdbe0853ed6775b","modified":1704216734182},{"_id":"node_modules/hexo-theme-icarus/source/img/og_image.png","hash":"b03f163096ca9c350ec962feee9836277b5c2509","modified":1704216734191},{"_id":"node_modules/hexo-theme-icarus/source/js/animation.js","hash":"0a8e361c353daa3194f4de3d646b96025d128e1a","modified":1704216734062},{"_id":"node_modules/hexo-theme-icarus/source/img/razor-bottom-black.svg","hash":"a3eda07b1c605b456da9cdf335a1075db5e5d72c","modified":1704216734210},{"_id":"node_modules/hexo-theme-icarus/include/schema/common/article.json","hash":"e2502c39045c6a26ccd8e880858f93e78c7bda35","modified":1704216734104},{"_id":"node_modules/hexo-theme-icarus/source/img/razor-top-black.svg","hash":"201f1171a43ce667a39091fe47c0f278857f18f0","modified":1704216734210},{"_id":"node_modules/hexo-theme-icarus/include/schema/common/donates.json","hash":"ae86e6f177bedf4afbe638502c12635027539305","modified":1704216734111},{"_id":"node_modules/hexo-theme-icarus/source/js/back_to_top.js","hash":"d91f10c08c726135a13dfa1f422c49d8764ef03f","modified":1704216734065},{"_id":"node_modules/hexo-theme-icarus/include/schema/common/comment.json","hash":"f49270b619f5d2c3decde6b0b5a0c3bbab4b54a5","modified":1704216734107},{"_id":"node_modules/hexo-theme-icarus/include/schema/common/footer.json","hash":"e85c9d7f2579805beb252a1b6345d5a668a13baa","modified":1704216734113},{"_id":"node_modules/hexo-theme-icarus/include/schema/common/head.json","hash":"98889f059c635e6bdbd51effd04cf1cf44968a66","modified":1704216734114},{"_id":"node_modules/hexo-theme-icarus/source/js/column.js","hash":"0baee024ab67474c073a4c41b495f3e7f0df4505","modified":1704216734069},{"_id":"node_modules/hexo-theme-icarus/source/js/main.js","hash":"08a2641765eeaf712157ad134dd675e3f7708ae2","modified":1704216734086},{"_id":"node_modules/hexo-theme-icarus/include/schema/common/navbar.json","hash":"6691e587284c4cf450e0288680d5ff0f3565f090","modified":1704216734114},{"_id":"node_modules/hexo-theme-icarus/include/schema/common/plugins.json","hash":"6036a805749816416850d944f7d64aaae62e5e75","modified":1704216734118},{"_id":"node_modules/hexo-theme-icarus/include/schema/common/share.json","hash":"cf4f9ff4fb27c3541b35f57db355c228fa6873e4","modified":1704216734124},{"_id":"node_modules/hexo-theme-icarus/include/schema/common/providers.json","hash":"97ec953d497fb53594227ae98acaef8a8baa91da","modified":1704216734122},{"_id":"node_modules/hexo-theme-icarus/include/schema/common/search.json","hash":"985fbcbf47054af714ead1a124869d54f2a8b607","modified":1704216734123},{"_id":"node_modules/hexo-theme-icarus/include/schema/common/sidebar.json","hash":"eb241beaec4c73e3085dfb3139ce72e827e20549","modified":1704216734125},{"_id":"node_modules/hexo-theme-icarus/include/schema/common/widgets.json","hash":"cadd9dc942740ecd5037d3943e72f8b6a8399bbe","modified":1704216734126},{"_id":"node_modules/hexo-theme-icarus/include/schema/plugin/animejs.json","hash":"e62ab6e20bd8862efa1ed32e7c0db0f8acbcfdec","modified":1704216734099},{"_id":"node_modules/hexo-theme-icarus/include/schema/plugin/back_to_top.json","hash":"dc0febab7e7b67075d0ad3f80f5ec8b798b68dea","modified":1704216734106},{"_id":"node_modules/hexo-theme-icarus/include/schema/widget/profile.json","hash":"690ee1b0791cab47ea03cf42b5b4932ed2aa5675","modified":1704216734120},{"_id":"public/js/algolia.js","hash":"a8df0c0abeeb4ee1d2d720161f3aea7339380704","modified":1704216758600},{"_id":"public/js/google_cse.js","hash":"1a9881669dfdeb2b3214074eee0d3e01e52db2c4","modified":1704216758600},{"_id":"public/js/insight.js","hash":"86bbdb7305d9bf19ad62d2ca2cf169fc8d9f9d31","modified":1704216758600},{"_id":"public/content.json","hash":"ff9883c0898eb7a2770416bc4394033aee2df736","modified":1704216758600},{"_id":"public/manifest.json","hash":"8ce55171847d34a0dea17bfd48cf6bc8a112200e","modified":1704218215660},{"_id":"public/js/toc.js","hash":"da6fb757a1b083b8ed138bf29aad3a7bf8ec4f11","modified":1704216758600},{"_id":"public/tags/index.html","hash":"01c41272ebad6814cedbef77d4956cfb3d5b6d27","modified":1704223898100},{"_id":"public/img/favicon.svg","hash":"16fd847265845063a16596761cddb32926073dd2","modified":1704216758600},{"_id":"public/img/avatar.png","hash":"0d8236dcca871735500e9d06bbdbe0853ed6775b","modified":1704216758600},{"_id":"public/img/og_image.png","hash":"b03f163096ca9c350ec962feee9836277b5c2509","modified":1704216758600},{"_id":"public/img/razor-bottom-black.svg","hash":"a3eda07b1c605b456da9cdf335a1075db5e5d72c","modified":1704216758600},{"_id":"public/img/logo.svg","hash":"e9b5c1438ddb576693a15d0713b2a1d9ceda4be9","modified":1704216758600},{"_id":"public/img/razor-top-black.svg","hash":"201f1171a43ce667a39091fe47c0f278857f18f0","modified":1704216758600},{"_id":"public/js/back_to_top.js","hash":"d91f10c08c726135a13dfa1f422c49d8764ef03f","modified":1704216758600},{"_id":"public/js/column.js","hash":"0baee024ab67474c073a4c41b495f3e7f0df4505","modified":1704216758600},{"_id":"public/js/main.js","hash":"08a2641765eeaf712157ad134dd675e3f7708ae2","modified":1704216758600},{"_id":"public/js/animation.js","hash":"0a8e361c353daa3194f4de3d646b96025d128e1a","modified":1704216758600},{"_id":"public/css/default.css","hash":"8717dd0ed1fe2a4237fbfb4f4f6e566cb1ee16b7","modified":1704216758600},{"_id":"public/css/cyberpunk.css","hash":"b462177bee11f76e84e649f8192d5a68cb4b1402","modified":1704216758600},{"_id":"source/assets/avatar.jpg","hash":"c3e846f0110d8131ffbbf89d116dfb0e916c5e7c","modified":1647576896000},{"_id":"public/assets/avatar.jpg","hash":"c3e846f0110d8131ffbbf89d116dfb0e916c5e7c","modified":1704219349615},{"_id":"public/atom.xml","hash":"337bac6e26af3b134df457c16b196a98fea92543","modified":1704220193212}],"Category":[{"name":"iOS-Dev","_id":"clqwlt7sv0003uc7t42nmgqjx"},{"name":"Http","_id":"clqwlt7wo000huc7t7jp0hakx"},{"name":"Linux","_id":"clqwlt7wq000kuc7tg7rp6yt2"},{"name":"iOS开发","_id":"clqwm2cdm0012uc7tdv8o39e4"},{"name":"git&svn","_id":"clqwm2cgq001iuc7t9pp062ij"},{"name":"股票投资","_id":"clqwm2cgu001quc7th0yh6e5c"}],"Data":[{"_id":"gallery","data":{"图片名称":{"full_link":"http://miccall.tech/img/twx.jpg","thumb_link":"http://miccall.tech/img/twx.jpg","descr":"图片描述"}}},{"_id":"links","data":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}}},{"_id":"_links","data":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}}}],"Page":[{"title":"关于我","date":"2013-01-09T08:25:51.000Z","thumbnail":"http://acg.bakayun.cn/randbg.php?t=dfproject","_content":"\n## 关于本站\n\n从 wordpress 到 jekyll，从 jekyll 到 hexo，折腾了有好几年了。最初建站的时候是在高中毕业那会，因为后来没有精力维护就搁浅了。前前后后写过新浪博客、LOFTER、轻博客、简书，最终还是选择 hexo + github 托管的形式。可惜好多文章都没备份(ಥ_ಥ)\n\n喜欢折腾，光 hexo 主题就换了五六个了，不过一直没有满意的。最近还是想把更多的心思放在写文章上，所以就选择这套 next 主题了。~~不过有时间一定要自己写一套 theme！ щ(ﾟДﾟщ)~~\n\n至于本站嘛。。本站只是单纯的记录一些自己关于技术方面的看法和生活中的一些琐事，咳咳，其实并没有对外公布的打算。如果你偶然发现本站的话，请多多鼓励我哈！\n\n## 关于站长\n\n嗯，本人是一枚兴趣爱好有点多的伪文艺男青年！\n\n喜欢咖啡、调酒！（过程就像在做化学实验，不过总的来说很享受！）\n\n喜欢天文，喜欢晚上一个人看星星！（从初中开始就一直喜欢干这件事，我的征途是星辰大海！ ）\n\n喜欢国学、易学、命理学（因为一直不是很喜欢自己的名字，所以从大学开始就一直在自学这些东西，颇有心得。不过国学水平真的很渣，，）\n\n喜欢数学（从小的梦想就是当一名数学家~）\n\n喜欢折腾~（真的是太喜欢折腾了，玩 psv 自己破解不过瘾，还研究着写一个好用的插件）\n\n……...\n\n23333，喜欢的东西有些多，力争做一个有趣的人！\n\n","source":"about/index.md","raw":"---\ntitle: 关于我\ndate: 2013-01-09 16:25:51\nthumbnail: \"http://acg.bakayun.cn/randbg.php?t=dfproject\"\n---\n\n## 关于本站\n\n从 wordpress 到 jekyll，从 jekyll 到 hexo，折腾了有好几年了。最初建站的时候是在高中毕业那会，因为后来没有精力维护就搁浅了。前前后后写过新浪博客、LOFTER、轻博客、简书，最终还是选择 hexo + github 托管的形式。可惜好多文章都没备份(ಥ_ಥ)\n\n喜欢折腾，光 hexo 主题就换了五六个了，不过一直没有满意的。最近还是想把更多的心思放在写文章上，所以就选择这套 next 主题了。~~不过有时间一定要自己写一套 theme！ щ(ﾟДﾟщ)~~\n\n至于本站嘛。。本站只是单纯的记录一些自己关于技术方面的看法和生活中的一些琐事，咳咳，其实并没有对外公布的打算。如果你偶然发现本站的话，请多多鼓励我哈！\n\n## 关于站长\n\n嗯，本人是一枚兴趣爱好有点多的伪文艺男青年！\n\n喜欢咖啡、调酒！（过程就像在做化学实验，不过总的来说很享受！）\n\n喜欢天文，喜欢晚上一个人看星星！（从初中开始就一直喜欢干这件事，我的征途是星辰大海！ ）\n\n喜欢国学、易学、命理学（因为一直不是很喜欢自己的名字，所以从大学开始就一直在自学这些东西，颇有心得。不过国学水平真的很渣，，）\n\n喜欢数学（从小的梦想就是当一名数学家~）\n\n喜欢折腾~（真的是太喜欢折腾了，玩 psv 自己破解不过瘾，还研究着写一个好用的插件）\n\n……...\n\n23333，喜欢的东西有些多，力争做一个有趣的人！\n\n","updated":"2024-01-02T16:09:25.084Z","path":"about/index.html","_id":"clqwm2cgd0014uc7t7hre6tp2","comments":1,"layout":"page","content":"<h2 id=\"关于本站\"><a href=\"#关于本站\" class=\"headerlink\" title=\"关于本站\"></a>关于本站</h2><p>从 wordpress 到 jekyll，从 jekyll 到 hexo，折腾了有好几年了。最初建站的时候是在高中毕业那会，因为后来没有精力维护就搁浅了。前前后后写过新浪博客、LOFTER、轻博客、简书，最终还是选择 hexo + github 托管的形式。可惜好多文章都没备份(ಥ_ಥ)</p>\n<p>喜欢折腾，光 hexo 主题就换了五六个了，不过一直没有满意的。最近还是想把更多的心思放在写文章上，所以就选择这套 next 主题了。<del>不过有时间一定要自己写一套 theme！ щ(ﾟДﾟщ)</del></p>\n<p>至于本站嘛。。本站只是单纯的记录一些自己关于技术方面的看法和生活中的一些琐事，咳咳，其实并没有对外公布的打算。如果你偶然发现本站的话，请多多鼓励我哈！</p>\n<h2 id=\"关于站长\"><a href=\"#关于站长\" class=\"headerlink\" title=\"关于站长\"></a>关于站长</h2><p>嗯，本人是一枚兴趣爱好有点多的伪文艺男青年！</p>\n<p>喜欢咖啡、调酒！（过程就像在做化学实验，不过总的来说很享受！）</p>\n<p>喜欢天文，喜欢晚上一个人看星星！（从初中开始就一直喜欢干这件事，我的征途是星辰大海！ ）</p>\n<p>喜欢国学、易学、命理学（因为一直不是很喜欢自己的名字，所以从大学开始就一直在自学这些东西，颇有心得。不过国学水平真的很渣，，）</p>\n<p>喜欢数学（从小的梦想就是当一名数学家~）</p>\n<p>喜欢折腾~（真的是太喜欢折腾了，玩 psv 自己破解不过瘾，还研究着写一个好用的插件）</p>\n<p>………</p>\n<p>23333，喜欢的东西有些多，力争做一个有趣的人！</p>\n","site":{"data":{"gallery":{"图片名称":{"full_link":"http://miccall.tech/img/twx.jpg","thumb_link":"http://miccall.tech/img/twx.jpg","descr":"图片描述"}},"links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}},"_links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}}}},"excerpt":"","more":"<h2 id=\"关于本站\"><a href=\"#关于本站\" class=\"headerlink\" title=\"关于本站\"></a>关于本站</h2><p>从 wordpress 到 jekyll，从 jekyll 到 hexo，折腾了有好几年了。最初建站的时候是在高中毕业那会，因为后来没有精力维护就搁浅了。前前后后写过新浪博客、LOFTER、轻博客、简书，最终还是选择 hexo + github 托管的形式。可惜好多文章都没备份(ಥ_ಥ)</p>\n<p>喜欢折腾，光 hexo 主题就换了五六个了，不过一直没有满意的。最近还是想把更多的心思放在写文章上，所以就选择这套 next 主题了。<del>不过有时间一定要自己写一套 theme！ щ(ﾟДﾟщ)</del></p>\n<p>至于本站嘛。。本站只是单纯的记录一些自己关于技术方面的看法和生活中的一些琐事，咳咳，其实并没有对外公布的打算。如果你偶然发现本站的话，请多多鼓励我哈！</p>\n<h2 id=\"关于站长\"><a href=\"#关于站长\" class=\"headerlink\" title=\"关于站长\"></a>关于站长</h2><p>嗯，本人是一枚兴趣爱好有点多的伪文艺男青年！</p>\n<p>喜欢咖啡、调酒！（过程就像在做化学实验，不过总的来说很享受！）</p>\n<p>喜欢天文，喜欢晚上一个人看星星！（从初中开始就一直喜欢干这件事，我的征途是星辰大海！ ）</p>\n<p>喜欢国学、易学、命理学（因为一直不是很喜欢自己的名字，所以从大学开始就一直在自学这些东西，颇有心得。不过国学水平真的很渣，，）</p>\n<p>喜欢数学（从小的梦想就是当一名数学家~）</p>\n<p>喜欢折腾~（真的是太喜欢折腾了，玩 psv 自己破解不过瘾，还研究着写一个好用的插件）</p>\n<p>………</p>\n<p>23333，喜欢的东西有些多，力争做一个有趣的人！</p>\n"},{"title":"All categories","date":"2013-01-11T04:39:04.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\n  title: All categories\n  date: 2013-1-11 12:39:04\n  type: \"categories\"\n---\n","updated":"2024-01-02T16:09:25.084Z","path":"categories/index.html","_id":"clqwm2cj40024uc7t40137xez","comments":1,"layout":"page","content":"","site":{"data":{"gallery":{"图片名称":{"full_link":"http://miccall.tech/img/twx.jpg","thumb_link":"http://miccall.tech/img/twx.jpg","descr":"图片描述"}},"links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}},"_links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}}}},"excerpt":"","more":""},{"title":"gallery","date":"2018-01-11T06:24:43.000Z","layout":"gallery","_content":"","source":"gallery/index.md","raw":"---\ntitle: gallery\ndate: 2018-01-11 14:24:43\nlayout: gallery\n---\n","updated":"2024-01-02T16:09:25.084Z","path":"gallery/index.html","_id":"clqwm2cpm0025uc7t5i74ge0m","comments":1,"content":"","site":{"data":{"gallery":{"图片名称":{"full_link":"http://miccall.tech/img/twx.jpg","thumb_link":"http://miccall.tech/img/twx.jpg","descr":"图片描述"}},"links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}},"_links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}}}},"excerpt":"","more":""},{"title":"group","date":"2018-01-11T06:25:18.000Z","layout":"links","_content":"","source":"group/index.md","raw":"---\ntitle: group\ndate: 2018-01-11 14:25:18\nlayout: links\n---\n","updated":"2024-01-02T16:09:25.084Z","path":"group/index.html","_id":"clqwm2cpm0026uc7taeadhva3","comments":1,"content":"","site":{"data":{"gallery":{"图片名称":{"full_link":"http://miccall.tech/img/twx.jpg","thumb_link":"http://miccall.tech/img/twx.jpg","descr":"图片描述"}},"links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}},"_links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}}}},"excerpt":"","more":""},{"title":"tag","date":"2013-01-11T06:11:49.000Z","layout":"tags","type":"tags","_content":"","source":"tag/index.md","raw":"---\ntitle: tag\ndate: 2013-01-11 14:11:49\nlayout: tags\ntype: \"tags\"\n---\n","updated":"2024-01-02T16:09:25.085Z","path":"tag/index.html","_id":"clqwm2cpn0027uc7thff3corx","comments":1,"content":"","site":{"data":{"gallery":{"图片名称":{"full_link":"http://miccall.tech/img/twx.jpg","thumb_link":"http://miccall.tech/img/twx.jpg","descr":"图片描述"}},"links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}},"_links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}}}},"excerpt":"","more":""}],"Post":[{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2024-01-02T16:45:13.278Z","updated":"2024-01-02T16:45:13.278Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clqwlr3k70000q67t9vmz6x86","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"以太坊开发入门","date":"2018-04-13T10:59:55.000Z","_content":"预备知识：\n\n你需要知道区块链的概念及实现一个无需信任的电子货币的运作原理。可以先看看长版，如果你觉得太长，可以看看短版。但我还是建议，看那个长的视频。\n如果你是一名软件工程师，拥有软件开发的经验。能知道从系统、架构角度学一个东西，其实能倍增学习效果。\n如果有一周的空闲时间。好了，下面开始就不再是废话了。\n你需要了解merkle tree的基本概念，看他是如何做到防止信息篡改，以及信息自校验的（译者注：可以看我曾经翻译的以太坊官方的关于merkle tree的文章，http://me.tryblockchain.org/Ethereum-MerklePatriciaTree.html ）。\n不用必须读白皮书，只需要了解一些基本概念。但说实话，如果不读，不会相信这些概念，从而不能真正明白这些概念，所以读白皮书也许仍然是最快的方式。\n\n我建议你完整的读一下本文，从一个较高的层面了解一下，然后再挑感兴趣的，一一钻研，也许要花几天时间哦。\n\n你最后会发现，区块链就是建立在朴实无华的基本技术之上，一点也不神奇。虽然最近各种ICO把它炒得非常热。每个人都是站在巨人的肩膀上，如果你是程序员，你能对这些项目和技术，理解得更深。所以不要因为其它一些糟粕，而失去了一个提升自己的机会。\n\n以太坊\n以太坊，Ethereum是一个分布式的计算机，有许多的节点，其中的每一个节点，都会执行字节码（其实就是智能合约），然后把结果存在区块链上。由于整个网络是分布式的，且应用就是一个个的状态组成，存储了状态就有了服务；所以它就能永不停机，没有一个中心化的结点（没有任何一个节点说了算，去中心化的），任何第三方不能干预。\n\n显然上面这一段话，直接解释了以太坊是什么。但你可能有非常多的问题。可以先读一下以太坊的白皮书。或者看下这个视频，25分钟理解以太坊。（译者注：以太坊入门，确实没有什么好的办法，就是看白皮书最好，最快）\n\n智能合约\n智能合约与平时的代码其实没有什么区别，只是运行于一个以太坊这样的分布式平台上而已。这个运行的平台，赋予了这些代码不可变，确定性，分布式和可自校验状态等特点。代码运行过程中状态的存储，是不可变的。每一个人，都可以开一个自己的节点，重放整个区块链，将会获得同样的结果（译者注：能控制所有节点都达到一致状态，就是所谓的共识）。\n\n在以太坊中，每个合约都有一个唯一的地址来标识它自己（由创建者的哈希地址和曾经发送过的交易的数量推算出来）。客户端可以与这个地址进行交互，可以发送ether，调用函数，查询当前的状态等。\n\n智能合约，本质上来说就是代码，以及代码运行后存储到区块链上的状态两个元素组成。比如，你用来收发ETH的钱包，本质上就是一个智能合约，只是外面套了一个界面。\n\n概念非常强大，而我相信你已经看完了。而你在看相关的新闻，经常听到这个非常有潜力，经常听到资产/权利管理，分权自治组织（DAO），身份，社交网络等炫酷。但他本质就是这些。\n\nGas\n智能合约，就是一些代码，运行整个分布式网络中。由于网络中的每一个节点都是一个全节点。这样的好处是容错性强，坏处是效率低，消耗资源与时间（译者注：原来只在一个节点执行一次就行，现在所有节点中每一个，都要执行一模一样的运算）。因为执行计算要花钱，而要执行的运算量与代码直接相关。所以，每个在网络运行的底层操作都需要一定量的gas。gas只是一个名字，它代表的是执行所需要花费的成本（译者注：由于以太坊是图灵完备的，随便一个死循环就将导致网络不可用，所以引入了gas的概念）。整个分布式网络引入了强制限制，来避免停机问题。因此如果你写一个死循环，当gas耗尽后，网络就会拒绝执行接下来的操作，并且回滚你之前的所有操作。\n\ngas的价格由市场决定，类似于比特币的交易费机制。如果你的gas价格高，节点则将优先因为利益问题打包你的交易。\n\n一般来说，在Ethereum中计算和存储东西比在传统环境中做的更为昂贵，但是，Ethereum为您的代码提供了上述我们讨论过的那些好的属性，这可能是一样有价值的。\n\n一般来说，在以太坊网上读取状态是免费的，只有写入状态是收费的。下面这个文章是gas概念的一些深度解析。\n\n分布式APP（ĐApp / Dapp / dapp/ dApp）\n一个分布式App是指，服务端运行于以太坊网络上一个或多个智能合约。\n\n一个分布式的App不用将所有状态都存储在区块链上，或者在链上进行所有计算（译者注：比如图形渲染），这样就太花gas了。所以一个分布式App把需要大家共同信任的状态存在区块链上就好了。许多的分布式应用使用后面提到的技术，如IPFS和Gelem，在链下进行分布式存储和计算。虽然没在以太坊上，但仍使用的是区块链技术。\n\n我不知道谁开始在D上使用这个小小的缺点，是看起来酷，但会影响搜索。 你可以自由使用，但尽量方便别人的搜索。\n\n以太坊的github上，有一个dapp-bin的目录，有一些文档和示例。使用前，你需要看看文件最近的状态，因为他们将很可能已经被淘汰。\n\nDApp客户端\n大多数的分布式应用都通过一些用户友好的前端提供服务，因为不是所有人都愿意通过命令行，通过自己手动组装哈希串和操作指令码进行交易。\n\n一个DApp与传统的开发中的，客户端或前端是类似，区别仅在于它们与以太坊的区块链进行交互（也可以同时与其它服务交互）。这些客户端往往用JS编写，因为当前还暂时没有完成全部的向NodeJS的转换。\n\n另外，大多数的Dapp客户端使用JS的原因，是因为它可以在浏览器中运行，因为大家都有浏览器，这样每个人都可以运行了。由于有更多的go语言的开发工具，使用go语言来写客户端的也不少。在现在这个激烈的发展期，这意味着，除非你有自己的偏好，否则可能要从go和JS（也许还有，Rust）来选择一种语言，来与以太坊区块链，以及基于以太坊开发的协议进行交互了。\n\n以太坊的一个核心开发者，写了一篇关于使用Meteor工具来创建Dapp的文章，这意味着Meteor已经成为Dapp客户端开发的新标准。这绝对是基于JS建立全栈应用时的一个首选方法。但需要注意的是Meteor只是提供了一个开发工具，与DApp客户端并不等同，DApp客户端也完全可以由其它方式开发。（译者注：还有一些其它的开发工具，如Truffle，也是非常不错的哦）。\n\n因为围绕Meteor和DApp开发的活跃，有非常多的包在Atmophere（Meteor的包管理工具），它提供了许多常见的操作，如帐户管理，从区块链中获得最新的50个区块等等。\n\nDApp浏览器\n一个DApp浏览器，正如它字面所表达的，用来让DApp客户端（常常使用JS与以太坊的智能合约进行交互）的使用更加容易。\n\nDApp浏览器的主要目的是：\n\n提供到一个以太坊节点的连接（或者连接到一个本地节点或者远程节点），和一个方便的切换不同节点（甚至是不同的网络）。\n提供一个帐户（或者一个钱包）来方便用户与DApp交互。\nMist是以太坊官方的DApp浏览器。一个漂亮的界面来与以太坊节点交互，与智能合约发、收交易。\n\nStatus是一个手机上可以使用的DApp浏览器。\n\nMetaMask是一个Google浏览器扩展，把Chrome变成了一个DApp浏览器。它的核心特性是注入以太坊提供的js客户端库web3，到每一个界面，来让DApp连接到MetaMask提供的以太坊节点服务。不过这个Chrome扩展，可以允许你管理你的钱包，以及连接到不同的以太坊网络（译者注：包括本地的开发网络）。\n\nParity是一个以太坊客户端（也是一个全节点的实现），集成到了Web浏览器，并使之成为一个DApp浏览器。\n\n以太坊节点\n与比特币的节点类似。每个节点都存储了整个区块链的数据，并重放所有的交易以验证结果的状态。你可以通过geth来运行一个全节点（官方的节点，go语言），或者parity来运行一个轻节点，它是第三方的，Rust语言写的。\n\n你的节点需要知道从哪个区块链下载数据，以及与哪些节点交互，后面会说明一些常见的网络。\n\n你也许可以运行下所有这些节点客户端。如果你不想自己运行一个这样的节点，有第三方的网关服务，比如Infura可以选择。另外还有专门用于测试和开发的，本地版本的节点，后面会提到。\n\n如果你正在开发一个DApp的客户端，你并不总是需要主动提供连接到以太坊的节点。因为DApp的浏览器一般会提供对应的连接（译者注：话说这样，那使用这个，还得额外安装一个DApp浏览器呀）。\n\n以太坊代币\n现在你应该知道我们可以通过写智能合约，并将状态存到区块链上了？那如果，在状态这块，我们存的是一个Map类型，键是地址，值是整数。然后我们将这些整数值叫做余额，谁的余额呢？它就是我们要说的代币（译者注：代币的数据结构就是这样简单，存的就是某个用户，它当前的余额）。\n\n是的，所有你刚才听到的代币，只是一些数据，存储在一个哈希表里，通过api或者所谓的协议，来进行增删改查。这是一个简单的基本合约。\n\n你可以看看ethereum的创建一个众筹合约的官方教程。你将会发现它仅仅是一个合约（Crowdsale）与另一个合约（MyToken）交互，和前面的基本合约类似。并没有什么神奇的地方。\n\n人们使用代币来做各种各样的事情，阻拦大家如何使用的只有想像力。代币常常用来激励用户与某个协议进行交互，或者证明对某个资产的所有权，投票权等等。Coinbase的Fred有一个很好的关于代币，为什么存在，如何使用的文章。\n\nEthereum的创始人Vitalik最近有一个关于代币发售模型，也是一篇不错的文章。\n\nERC20代币与ERC23代币\n每个人都开始定义自己与代币的交互协议，但这些很快显得陈旧，所以一些人开始集结起来，创建了ERC20代币接口标准。大概意思是说，我们定义这些接口，这样大家可以相互统一调用，比如转帐定义为transfer，第一个参数为要转去的帐户地址address _to，第二个参数为要发送的ether的uint _value数量。\n\n有些人觉得ERC20协议过于复杂了，所以他们提议了ERC197，稍微简单一点。\n\n由于在ERC20中存在的一个小问题，有人提议了一个新的ERC23。ERC23是向后兼容ERC20的。如果你已经创建了一个代币合约，可以尝试来支持ERC23。\n\n看起来ERC223和ERC23是相同的概念；ERC的值是223，但是当引用时，作者和所有的其它人误写成了ERC23非常多次，它现在也还是这样引用的。如果一句话说清楚的话，ERC223是规范号，代币说明时称为ERC23代币就好了。\n\n协议代币与App币\n协议代币为用来激励对某个协议的使用。比如，REP，Augur的声誉代币，用来鼓励对Augur去中心化预测协议的使用。大多数的以太坊的ERC20/ERC23代币都是协议代币，比如Golem的GNT，ICONOMI，BAT等等。\n\nApp币则是用来激励对某个特定DApp或客户端的使用，而不是因为其使用的协议提供的价值。其中一个例子是Status的SNT代币，可以用来在应用内获得价值（比如，进行消息推送，投票权，获得用户名等等）。\n\n这种范式的转变是，我们可以开始投资协议代币而不是应用程序代币，因为我们可以建立在它们之上（任何人都可以在协议之上构建一个dapp，或为实现该协议的Dapp构建一个Dapp客户端）。\n\n之前，这并不可能，因为加密代币，以及接下来的协议创新的时代，为了实现货币化，你自己可以在协议之上创建一个应用，并实现赢利。因为你自己可以实现协议的货币化，大家可以在未来更好的协作。\n\n你也许可以阅读一下，关于0xProject的下面这篇文章，关于这两者区别的详细说明。\n\n与智能合约交互\n你与智能合约的交互（也称做调用函数和读取状态）通过连接到某个以太坊节点，并执行操作码。当前有各种各样的以太坊客户端，可以方便进行开发。Geth和parity都提供了控制台或浏览器的方式来更好的与智能合约交互。\n\n如果你想要一个程序的库用来与智能合约交互的接口，也有这样的客户端实现。对于JS语言，可以使用web3.js。以于go语言，可以使用在go-ethereum中的abigen的程序，提供了go包，用来与智能合约交互。\n\n如果只是用来测试和开发，可以使用ethereumjs-testrpc来运行一个本地节点（译者注：这个节点压短区块时间等，可以方便打整的开发与测试）。\n\n当你部署了一个智能合约，你实际进行的操作是向地址0x0发送了一个交易，使用当前合约内容作为参数，一个以太坊交易详解。\n\nTruffle和Embark\n一旦你开始写智能合约，你会重复做大量的操作，比如编译源码为字节码和abi，部署到网络，测试然后部署合约等等。你也许希望更关注于你想要实现的东西。\n\nTruffle和Embark框架，标准化和自动化了这些琐碎的工作。它们提供了一个好的开发，部署，以及更为重要的，测试智能合约的体验。\n\n你可以查看这个文章来开启使用Truffle的旅程。\n\n这篇文章，提供了使用Truffle来部署以及与智能合约交互的文章。\n\nEmbark提供了类似的，帮助开发者组织工程的稍有些不同的工具。\n\n当你一开始接触智能合约这块时，应该尽量不要使用框架。直到你明白了使用框架能带来的价值时，才应该开始使用，正如你不应该通过rails new来学习HTML语言一样。\n\nETHPM\n分享是关心，所以ETHPM是一个去中心化的智能合约包管理资源库。使用ETHPM，你可以关联或连接到某个著名的合约或库，减少代码重复，尽可能理想的为未来的开发提供好的基础。\n\n这里的这个规范，详细的说明了相关的信息以及背景。Truffle和Embark均可与之集成，并创造一个愉快的开发体验。\n\n网络\nMainnet-以太坊主网，通常是所有客户端的默认网络。\n\nRopsten - 以太坊使用工作量证明的主测试网络。这个网络，因为低的计算量，容易遭到DDOS攻击，分片，或者其它问题。垃圾邮件攻击后被暂时放弃，最近才恢复使用。\n\nKovan-parity客户端组成的测试网络，使用授权证明来提升对垃圾邮件攻击的抗扰度，并且持续4秒的阻塞时间。\n\nRinkeby-geth客户端组成的测试网络，使用集团共识，尽管计算量低，但是对恶意行为者更有弹性。\n\n你可以自己搭建你自己的测试网络，也许使用kubernetes或者docker-compose，但也许你将很快就可以不需要花什么时间。\n\n帐户与钱包\n一个以太坊帐户就是一个私钥和公钥地址对。它们可以用来存储ether，创建时不需要花费gas。\n\n钱包则是用来管理ether的智能合约（一些代码）。这里是使用solidity写的一个钱包，运行于Mist浏览器。他们可以有许多的特性，比如多用户签名，纸？等等。\n\n这样，我们就正确的定义了两个名词，前面看到其它人对这两个术语的困惑，并把所有能存ether的都叫作Wallet。\n\nEVM以及智能合约创建的状态\n在每个全节点网络上运行的智能合约代码在EVM内执行。这是您的标准虚拟机，执行一些字节码，除了这个vm与网络，文件系统，进程等隔离。没有人想要编写字节码，所以我们有一些更高级别的语言编译为EVM字节码。\n\nSolidity\nSolidity是第一批的描述智能合约的语言。当前是最流行的语言，因此也有最多的例子，文档，和教程。你应该学习这个，除非你有要学习其它的理由。\n\n你可以使用基于浏览器的Remix IDE来进行快速验证。\n\n下面是一个Solidity的合约：\n\npragma solidity ^0.4.11;\ncontract BasicToken {\nmapping(address => uint256) balances;\nfunction transfer(address _to, uint256 _value) returns () {\n    balances[msg.sender] = balances[msg.sender] - _value;\n    balances[_to] = balances[_to] + _value;\n  }\nfunction balanceOf(address _owner) constant returns (uint256 balance) {\n    return balances[_owner];\n  }\n}\nLLL\nLLL，是一门Lisp风格的底层编程语言，就像语言名称看到的这样。虽然以太坊官方并没有将它作为主要需要支持的语言，但它仍旧持续进行着更新，且与solidity在同一个资源库。\n\n这是一个使用LLL语言写的一个ERC20代币的合约\n\nLLL示例如下：\n\n(seq\n  (def 'node-bytes  0x00)\n  (def 'owner    0x20) ; address\n  (def 'set-node-owner    0x5b0fc9c3) ; setOwner(bytes32,address)\n  (def 'get-owner (node)\n      (sload (+ node owner)))\n\n//只是用来示例，不能编译通过\n如果你正在学习，也许不是那么的容易习惯LLL语言的写法。\n\nSerpent\nSerpent是一个类Python的高级语言，最终也会被编译为EVM字节码。它主要被Augur团队使用。\n\n但最近Zeppelin Solution团队发现其编译器有一个严重的bug，在这个问题被修复之前都不建议继续使用。\n\n如果你对Augur如何解决这些漏洞感兴趣，你可以阅读Zeppelin Solution的这篇文章。\n\nSerpent的合约看起来如下：\n\ndef register(key, value):\n    # Key not yet claimed\n    if not self.storage[key]:\n        self.storage[key] = value\n        return(1)\n    else:\n        return(0)  # Key already claimed\n\ndef ask(key):\n    return(self.storage[key])\n其它\n在各种可用性和发展状态中还有一堆其他的高级语言，而且无疑将会被开发出来。 为了广泛采用，语言和编译器必须经过彻底的审查和测试，这当然需要时间。\n\n智能合约反编译/Disassembly\n可以通过prosity来反编译以太坊智能合约的字节码，可以使用evmdis来Disassembly。\n\n智能合约的安全\n一旦一个智能合约部署到了以太坊的网络上，它将是永不可变的，且将永久存在。如果你写了一个bug，你将不能下架这个有问题的版本，你只能在后续的版本中修复。\n\n由于许多工程师开发的Ethereum和其他智能合同平台来自于Web开发，所以这个概念实在是太新，而且是疯狂的。\n\nConsenSys有一个非常棒的资源叫智能合约的最佳实践，你应该深入的理解一下。\n\n一个Parity的钱包被黑的解释。\n\n在你部署你的智能合约的时候，由于你管理的是真正的资金，你应该先开一个赏金计划，并尽量保证它完整的测试过。\n\nWhisper\nWhisper是一个集成进以太坊的消息系统。它允许DApp发布小量的信息来进行非实时的消息通信。\n\n它使用shh协议。\n\n尽管它已经有段时间没有更新了，这是一个使用Whisper协议实现一个聊天客户端的例子。\n\n去中心自动化组织（DAOs）\n这是一个组织（就像，一群人），其中，使用代码来保证最终的强制执行，而不是使用传统的法律文件。这群人使用智能合约来做常见组织做的所有的事情，比如在某件事上进行投票，比如决定是否对什么进行投资等等。\n\n副作用是决策，管理，以及对什么进行投资的结果将会不可改变的存储在区块链上。\n\n之前slock.it创建了标准的DAO框架来说明这个理念。在这里有对DAO概念的总览，以及如何使用框架来实现一个自己的DAO（译者注：这个项目由于bug被黑客攻击了）。\n\nAragon\nAragon也正在应对挑战，设计一个根据智能合约逻辑运作的公司，重点是创建一个可以接受投资，处理会计，支付雇员，分配股权，正如我们现在知道的完成每天的公司的业务。他们也实现了漂亮的DApp客户端来让他们的协议使用起来更为简单。\n\n查看这里Aragon核心合约来更多的理解它是如何做的。\n\nIPFS&FileCoin\nIPFS（星际文件系统）是一个协议，用来分发文件。你可以认为它是一个基于bittorrent和git这样概念的一个文件系统，文件可以定位，且是不可变的。IPFS以IPLD数据模型存储信息，它非常有趣，提供了一些特别的特性，你可以通过下面的说明了解一些。\n\n这是一个新的协议，它有一个http的网关和文件系统适配器，这让你可以通过http，挂载整个互联网文件系统到你本地的盘/ipfs。IPFS还提供了一个寻址服务IPNS（星际命名空间），它允许可变的状态（需要注意的是在IPFS里的所有东西都是不可变的）。你甚至可以使用DNS TXT记录来定位到你的IPNS客户端，允许你生成用户友好的链接来指向到对应的数据。\n\nFileCoin是Protocol Lab为创建一个去中心化的基于IPFS的存储市场的努力结果，也就是向整个网络提供存储资源的激励层。FileCoin的共识协议没有使用浪费资源的工作量证明，而是使用了Proff of Replication和Proof of SpaceTime来保证每片数据被复制某个特定的拷贝数量且存储某个特定的时间。\n\n你应该读一下IPFS的白皮书，FileCoin的白皮书，以及IPLD的规范。\n\n由于当前FileCoin还没有上线，你可以使用当前的IPFS存储网络来运行html/css/js，并把作为一个类似orbit-db的数据库。\n\nSwarm\nSwarm是一个去中心化的存储网络，集成于以太坊生态系统，作为第一阵营的项目，看看这里关于IPFS与这个项目的比较和优劣。但本质上，基本上是一样的，除了它们有不同的哲学，并在底层使用稍微不同的协议。\n\n项目\nAugur\nAugur是一个去中心化的预测市场，让大家对于某个现实世界的事件进行对赌。一方面，用户在某个具体可以发生的事件上投注，一旦结果成真，它们赢得的代币有真正的价值。为了实现这个，你需要实现一个去中心化的先知协议，来输入现实世界中的信息，它使用REP协议代币来进行经济激励。\n\n你可以看看Augur项目的合约代码，以及了解下Augur Master Plan。\n\nGnosis\nGnosis与Augur有类似的理念，也是一个去中心化的预测市场。这是项目的白皮书，以及与Augur项目的对比。\n\nGolem\nGolem是一个分布式的算力市场，以与IPFS一样的方式构建了一整套的提供算力市场。\n\n你可以看看FAQ来更好的理解。\n\n0xProject\n0xProject创建了一个交换代币的协议，以及一个DApp来实现这个协议。开发者可以创建一个基于它们自己的分布式应用创建交易所（技术上叫中继层），而用户也不用信任这些app就可完成交易，结算在区块链上完成。0x协议旨在使用离线的第三方来广播交易和管理订单（可以创建/更新/删除订单，而不用直接向Ethereum发送缓慢/昂贵的交易），但最终会使用Ethereum进行结算。\n\n它们实现了场外交易，一个DApp使用这个协议来在用户之间直接交换代币。你可以在github上查看他们的合约。\n\n你还可以跳过这些酷炫的概念，直接阅读FAQ。\n\nSwap\nConsenSys的Swap协议也是非常类似的，但更专注于p2p的直接交易（而不是基于订单表），这里有一个白皮书，可以看看，这里有一个关于Swap协议的介绍。\n\nBancor\n代币的流动性是相对来说在加密币的生态中是一个非常大的问题。在用户间的交易需要满足买方和卖方两边的想法。\n\nBancor是一个协议，可以让你的代币1）可以根据订单自动给予价格2）可以通过持有其它的代币作为抵押器来即时创造流动性。\n\n查看这里的白皮书\n\nMakerdao & Dai\n以太坊区块链管理的代币价值往往会有巨大的波动。这个特性在现实生活中则非常不好，比如你的目标是用来保值。\n\nMaker DAO是一个DAO来管理Dai稳定币。Dai现在还不存在，但他们已经发布了一个alpha的版本叫Sai来展示这门技术。\n\n这里是DAI的白皮书。\n\nOraclize\n如果我们要向智能合约中输入一些信息，比如纽约今天的天气，我也许需要实现一个去中心化的先知协议询问一批人（花费高且慢），但如果写一个服务以中心化的方式来提供信息，又违背了去中心化应用的理念。\n\nOraclize尝试用以下方式来解决问题1）从一个外部数据源向你的智能合约发送数据。2）提供一个证明，数据来自某个数据源，且没有被修改过。由此如果你信任random.org，你可以使用Oraclize来提供一个随机数生成合约。\n\n他们的集成非常强大; 您可以获取URL，解析JSON和XPATH，查询Wolfram Alpha等。\n\nBTCRelay\nBTCRelay作为比特币区块链交易的先知机制，这意味着你可以在以太坊上编写智能合约来响应比特币区块链上的某个交易，进行触发后续的操作。比如，你可以让人通过BTC为你的服务付费，使用BTCRelay在以太坊上校验付款成功后，继而在以太坊上提供对应的服务。\n\nOpen Zeppelin & zeppelinOS\nZeppelin Solutions是一个科技公司，在这个领域内正完成一些伟大，而且专业的事。它们实在做了太多事，太难一一说清了。\n\n他们管理了Open Zeppelin，一系列经过审查的，最佳的智能合约实践，你可以继承并应用于你自己的DApp中。你可以查看他们的github资源来学习更多。你应该读一下里面的每一个合约。\n\n他们坚持代码复用的理念，然后进一步创建了Zeppelin OS。你可以忽略OS，它不是传统意义上的操作系统的概念。zeppelinOS特性，工具和服务的集合，旨在提供稳固的开发人员体验，同时最大限度地提高智能合同安全性。\n\nzeppelinOS中的其中一部分是“zeppelinOS Kernel”。其实他们不是传统意义上的核心，而且是一组库。它们是通过库模型实现的可升级的智能合约，可以在出现安全问题时独立的进行更新。因为你在合约内包含的代码更少，部署也将花费更少的gas，而开发者也减少了代码的重复。\n\nzeppelinOS还有一些其他整齐的规划，比如调度程序（智能合约的异步执行，因为默认合同一般不会主动触发某个行为），市场级的协议和链下开发者体验工具。\n\nENS - 以太坊的命名服务\nENS是一个去中心化的名称注册服务。并有一个描述性的项目名称。\n\nBAT 基础注意力代币 & Brave浏览器\nBAT尝试去中心化广告系统，通过监控大家的注意力，并在内容提供商，广告商和用户之间分发收益，切掉中间人。\n\nBrave和BAT由JS创始人Brendan Eich创建，同时他也是Mozilla的联合创始人。\n\nuPort\nuPort在解决去中心化的身份识别问题。\n\ndistrict0x\ndistrict0x是一个更高层级的去中心化的市场和社区。核心是通过一系列的智能合约来管理用户发布信息，搜索，过滤信息，在社区内维护信誉，管理支付等等。它可以用来建议如Ethlance和NameBazaar这样的市场。\n\n他们有非常棒的视觉设计。\n\nSteem\nSteem是区块链上的reddit，它使用协议代币（STEEM）来激励这个社交社区的参与度。\n\n在这里查看白皮书。\n\n有一些关于Steemit块链如何启动以及支持组织如何运作的反应。\n\n参与者与领域内的玩家\nConsenSys\nConsenSys（有点像共识Consensus，但作为一个公司名称;它很聪明，巧妙的把u改成了s，但我一般念为“con-SEn-SIS”，避免读错）是一个“风险投资和产品工作室”。他们是一个（其实非常大）伞形组织，它赞助了一大堆项目和核心组件的开发。值得一提的是，它们资助了Truffle，Infura，MetaMask，Gnosis和uPort。\n\nZeppelin Solutions\nZeppelin Solutions在上面我们有提到过，他也审查智能合约代码，提供咨询服务。他们的博客质量相当高。\n\nProtocol Labs\nProtocol Labs是一群让人印象深刻的人，致力于IPFS，FileCoin，lip2p以及IPLD等其它项目的开发。\n\n区块链资本概况\nEtienne Brunet有一篇关于代币，ICO和VC的概况文章。\n\n社区\n你可以加入以太坊的社区。\n\n未来\n未来展望。\n\n","source":"_posts/以太坊开发入门.md","raw":"---\ntitle: 以太坊开发入门\ndate: 2018-04-13 18:59:55\ntags:\n---\n预备知识：\n\n你需要知道区块链的概念及实现一个无需信任的电子货币的运作原理。可以先看看长版，如果你觉得太长，可以看看短版。但我还是建议，看那个长的视频。\n如果你是一名软件工程师，拥有软件开发的经验。能知道从系统、架构角度学一个东西，其实能倍增学习效果。\n如果有一周的空闲时间。好了，下面开始就不再是废话了。\n你需要了解merkle tree的基本概念，看他是如何做到防止信息篡改，以及信息自校验的（译者注：可以看我曾经翻译的以太坊官方的关于merkle tree的文章，http://me.tryblockchain.org/Ethereum-MerklePatriciaTree.html ）。\n不用必须读白皮书，只需要了解一些基本概念。但说实话，如果不读，不会相信这些概念，从而不能真正明白这些概念，所以读白皮书也许仍然是最快的方式。\n\n我建议你完整的读一下本文，从一个较高的层面了解一下，然后再挑感兴趣的，一一钻研，也许要花几天时间哦。\n\n你最后会发现，区块链就是建立在朴实无华的基本技术之上，一点也不神奇。虽然最近各种ICO把它炒得非常热。每个人都是站在巨人的肩膀上，如果你是程序员，你能对这些项目和技术，理解得更深。所以不要因为其它一些糟粕，而失去了一个提升自己的机会。\n\n以太坊\n以太坊，Ethereum是一个分布式的计算机，有许多的节点，其中的每一个节点，都会执行字节码（其实就是智能合约），然后把结果存在区块链上。由于整个网络是分布式的，且应用就是一个个的状态组成，存储了状态就有了服务；所以它就能永不停机，没有一个中心化的结点（没有任何一个节点说了算，去中心化的），任何第三方不能干预。\n\n显然上面这一段话，直接解释了以太坊是什么。但你可能有非常多的问题。可以先读一下以太坊的白皮书。或者看下这个视频，25分钟理解以太坊。（译者注：以太坊入门，确实没有什么好的办法，就是看白皮书最好，最快）\n\n智能合约\n智能合约与平时的代码其实没有什么区别，只是运行于一个以太坊这样的分布式平台上而已。这个运行的平台，赋予了这些代码不可变，确定性，分布式和可自校验状态等特点。代码运行过程中状态的存储，是不可变的。每一个人，都可以开一个自己的节点，重放整个区块链，将会获得同样的结果（译者注：能控制所有节点都达到一致状态，就是所谓的共识）。\n\n在以太坊中，每个合约都有一个唯一的地址来标识它自己（由创建者的哈希地址和曾经发送过的交易的数量推算出来）。客户端可以与这个地址进行交互，可以发送ether，调用函数，查询当前的状态等。\n\n智能合约，本质上来说就是代码，以及代码运行后存储到区块链上的状态两个元素组成。比如，你用来收发ETH的钱包，本质上就是一个智能合约，只是外面套了一个界面。\n\n概念非常强大，而我相信你已经看完了。而你在看相关的新闻，经常听到这个非常有潜力，经常听到资产/权利管理，分权自治组织（DAO），身份，社交网络等炫酷。但他本质就是这些。\n\nGas\n智能合约，就是一些代码，运行整个分布式网络中。由于网络中的每一个节点都是一个全节点。这样的好处是容错性强，坏处是效率低，消耗资源与时间（译者注：原来只在一个节点执行一次就行，现在所有节点中每一个，都要执行一模一样的运算）。因为执行计算要花钱，而要执行的运算量与代码直接相关。所以，每个在网络运行的底层操作都需要一定量的gas。gas只是一个名字，它代表的是执行所需要花费的成本（译者注：由于以太坊是图灵完备的，随便一个死循环就将导致网络不可用，所以引入了gas的概念）。整个分布式网络引入了强制限制，来避免停机问题。因此如果你写一个死循环，当gas耗尽后，网络就会拒绝执行接下来的操作，并且回滚你之前的所有操作。\n\ngas的价格由市场决定，类似于比特币的交易费机制。如果你的gas价格高，节点则将优先因为利益问题打包你的交易。\n\n一般来说，在Ethereum中计算和存储东西比在传统环境中做的更为昂贵，但是，Ethereum为您的代码提供了上述我们讨论过的那些好的属性，这可能是一样有价值的。\n\n一般来说，在以太坊网上读取状态是免费的，只有写入状态是收费的。下面这个文章是gas概念的一些深度解析。\n\n分布式APP（ĐApp / Dapp / dapp/ dApp）\n一个分布式App是指，服务端运行于以太坊网络上一个或多个智能合约。\n\n一个分布式的App不用将所有状态都存储在区块链上，或者在链上进行所有计算（译者注：比如图形渲染），这样就太花gas了。所以一个分布式App把需要大家共同信任的状态存在区块链上就好了。许多的分布式应用使用后面提到的技术，如IPFS和Gelem，在链下进行分布式存储和计算。虽然没在以太坊上，但仍使用的是区块链技术。\n\n我不知道谁开始在D上使用这个小小的缺点，是看起来酷，但会影响搜索。 你可以自由使用，但尽量方便别人的搜索。\n\n以太坊的github上，有一个dapp-bin的目录，有一些文档和示例。使用前，你需要看看文件最近的状态，因为他们将很可能已经被淘汰。\n\nDApp客户端\n大多数的分布式应用都通过一些用户友好的前端提供服务，因为不是所有人都愿意通过命令行，通过自己手动组装哈希串和操作指令码进行交易。\n\n一个DApp与传统的开发中的，客户端或前端是类似，区别仅在于它们与以太坊的区块链进行交互（也可以同时与其它服务交互）。这些客户端往往用JS编写，因为当前还暂时没有完成全部的向NodeJS的转换。\n\n另外，大多数的Dapp客户端使用JS的原因，是因为它可以在浏览器中运行，因为大家都有浏览器，这样每个人都可以运行了。由于有更多的go语言的开发工具，使用go语言来写客户端的也不少。在现在这个激烈的发展期，这意味着，除非你有自己的偏好，否则可能要从go和JS（也许还有，Rust）来选择一种语言，来与以太坊区块链，以及基于以太坊开发的协议进行交互了。\n\n以太坊的一个核心开发者，写了一篇关于使用Meteor工具来创建Dapp的文章，这意味着Meteor已经成为Dapp客户端开发的新标准。这绝对是基于JS建立全栈应用时的一个首选方法。但需要注意的是Meteor只是提供了一个开发工具，与DApp客户端并不等同，DApp客户端也完全可以由其它方式开发。（译者注：还有一些其它的开发工具，如Truffle，也是非常不错的哦）。\n\n因为围绕Meteor和DApp开发的活跃，有非常多的包在Atmophere（Meteor的包管理工具），它提供了许多常见的操作，如帐户管理，从区块链中获得最新的50个区块等等。\n\nDApp浏览器\n一个DApp浏览器，正如它字面所表达的，用来让DApp客户端（常常使用JS与以太坊的智能合约进行交互）的使用更加容易。\n\nDApp浏览器的主要目的是：\n\n提供到一个以太坊节点的连接（或者连接到一个本地节点或者远程节点），和一个方便的切换不同节点（甚至是不同的网络）。\n提供一个帐户（或者一个钱包）来方便用户与DApp交互。\nMist是以太坊官方的DApp浏览器。一个漂亮的界面来与以太坊节点交互，与智能合约发、收交易。\n\nStatus是一个手机上可以使用的DApp浏览器。\n\nMetaMask是一个Google浏览器扩展，把Chrome变成了一个DApp浏览器。它的核心特性是注入以太坊提供的js客户端库web3，到每一个界面，来让DApp连接到MetaMask提供的以太坊节点服务。不过这个Chrome扩展，可以允许你管理你的钱包，以及连接到不同的以太坊网络（译者注：包括本地的开发网络）。\n\nParity是一个以太坊客户端（也是一个全节点的实现），集成到了Web浏览器，并使之成为一个DApp浏览器。\n\n以太坊节点\n与比特币的节点类似。每个节点都存储了整个区块链的数据，并重放所有的交易以验证结果的状态。你可以通过geth来运行一个全节点（官方的节点，go语言），或者parity来运行一个轻节点，它是第三方的，Rust语言写的。\n\n你的节点需要知道从哪个区块链下载数据，以及与哪些节点交互，后面会说明一些常见的网络。\n\n你也许可以运行下所有这些节点客户端。如果你不想自己运行一个这样的节点，有第三方的网关服务，比如Infura可以选择。另外还有专门用于测试和开发的，本地版本的节点，后面会提到。\n\n如果你正在开发一个DApp的客户端，你并不总是需要主动提供连接到以太坊的节点。因为DApp的浏览器一般会提供对应的连接（译者注：话说这样，那使用这个，还得额外安装一个DApp浏览器呀）。\n\n以太坊代币\n现在你应该知道我们可以通过写智能合约，并将状态存到区块链上了？那如果，在状态这块，我们存的是一个Map类型，键是地址，值是整数。然后我们将这些整数值叫做余额，谁的余额呢？它就是我们要说的代币（译者注：代币的数据结构就是这样简单，存的就是某个用户，它当前的余额）。\n\n是的，所有你刚才听到的代币，只是一些数据，存储在一个哈希表里，通过api或者所谓的协议，来进行增删改查。这是一个简单的基本合约。\n\n你可以看看ethereum的创建一个众筹合约的官方教程。你将会发现它仅仅是一个合约（Crowdsale）与另一个合约（MyToken）交互，和前面的基本合约类似。并没有什么神奇的地方。\n\n人们使用代币来做各种各样的事情，阻拦大家如何使用的只有想像力。代币常常用来激励用户与某个协议进行交互，或者证明对某个资产的所有权，投票权等等。Coinbase的Fred有一个很好的关于代币，为什么存在，如何使用的文章。\n\nEthereum的创始人Vitalik最近有一个关于代币发售模型，也是一篇不错的文章。\n\nERC20代币与ERC23代币\n每个人都开始定义自己与代币的交互协议，但这些很快显得陈旧，所以一些人开始集结起来，创建了ERC20代币接口标准。大概意思是说，我们定义这些接口，这样大家可以相互统一调用，比如转帐定义为transfer，第一个参数为要转去的帐户地址address _to，第二个参数为要发送的ether的uint _value数量。\n\n有些人觉得ERC20协议过于复杂了，所以他们提议了ERC197，稍微简单一点。\n\n由于在ERC20中存在的一个小问题，有人提议了一个新的ERC23。ERC23是向后兼容ERC20的。如果你已经创建了一个代币合约，可以尝试来支持ERC23。\n\n看起来ERC223和ERC23是相同的概念；ERC的值是223，但是当引用时，作者和所有的其它人误写成了ERC23非常多次，它现在也还是这样引用的。如果一句话说清楚的话，ERC223是规范号，代币说明时称为ERC23代币就好了。\n\n协议代币与App币\n协议代币为用来激励对某个协议的使用。比如，REP，Augur的声誉代币，用来鼓励对Augur去中心化预测协议的使用。大多数的以太坊的ERC20/ERC23代币都是协议代币，比如Golem的GNT，ICONOMI，BAT等等。\n\nApp币则是用来激励对某个特定DApp或客户端的使用，而不是因为其使用的协议提供的价值。其中一个例子是Status的SNT代币，可以用来在应用内获得价值（比如，进行消息推送，投票权，获得用户名等等）。\n\n这种范式的转变是，我们可以开始投资协议代币而不是应用程序代币，因为我们可以建立在它们之上（任何人都可以在协议之上构建一个dapp，或为实现该协议的Dapp构建一个Dapp客户端）。\n\n之前，这并不可能，因为加密代币，以及接下来的协议创新的时代，为了实现货币化，你自己可以在协议之上创建一个应用，并实现赢利。因为你自己可以实现协议的货币化，大家可以在未来更好的协作。\n\n你也许可以阅读一下，关于0xProject的下面这篇文章，关于这两者区别的详细说明。\n\n与智能合约交互\n你与智能合约的交互（也称做调用函数和读取状态）通过连接到某个以太坊节点，并执行操作码。当前有各种各样的以太坊客户端，可以方便进行开发。Geth和parity都提供了控制台或浏览器的方式来更好的与智能合约交互。\n\n如果你想要一个程序的库用来与智能合约交互的接口，也有这样的客户端实现。对于JS语言，可以使用web3.js。以于go语言，可以使用在go-ethereum中的abigen的程序，提供了go包，用来与智能合约交互。\n\n如果只是用来测试和开发，可以使用ethereumjs-testrpc来运行一个本地节点（译者注：这个节点压短区块时间等，可以方便打整的开发与测试）。\n\n当你部署了一个智能合约，你实际进行的操作是向地址0x0发送了一个交易，使用当前合约内容作为参数，一个以太坊交易详解。\n\nTruffle和Embark\n一旦你开始写智能合约，你会重复做大量的操作，比如编译源码为字节码和abi，部署到网络，测试然后部署合约等等。你也许希望更关注于你想要实现的东西。\n\nTruffle和Embark框架，标准化和自动化了这些琐碎的工作。它们提供了一个好的开发，部署，以及更为重要的，测试智能合约的体验。\n\n你可以查看这个文章来开启使用Truffle的旅程。\n\n这篇文章，提供了使用Truffle来部署以及与智能合约交互的文章。\n\nEmbark提供了类似的，帮助开发者组织工程的稍有些不同的工具。\n\n当你一开始接触智能合约这块时，应该尽量不要使用框架。直到你明白了使用框架能带来的价值时，才应该开始使用，正如你不应该通过rails new来学习HTML语言一样。\n\nETHPM\n分享是关心，所以ETHPM是一个去中心化的智能合约包管理资源库。使用ETHPM，你可以关联或连接到某个著名的合约或库，减少代码重复，尽可能理想的为未来的开发提供好的基础。\n\n这里的这个规范，详细的说明了相关的信息以及背景。Truffle和Embark均可与之集成，并创造一个愉快的开发体验。\n\n网络\nMainnet-以太坊主网，通常是所有客户端的默认网络。\n\nRopsten - 以太坊使用工作量证明的主测试网络。这个网络，因为低的计算量，容易遭到DDOS攻击，分片，或者其它问题。垃圾邮件攻击后被暂时放弃，最近才恢复使用。\n\nKovan-parity客户端组成的测试网络，使用授权证明来提升对垃圾邮件攻击的抗扰度，并且持续4秒的阻塞时间。\n\nRinkeby-geth客户端组成的测试网络，使用集团共识，尽管计算量低，但是对恶意行为者更有弹性。\n\n你可以自己搭建你自己的测试网络，也许使用kubernetes或者docker-compose，但也许你将很快就可以不需要花什么时间。\n\n帐户与钱包\n一个以太坊帐户就是一个私钥和公钥地址对。它们可以用来存储ether，创建时不需要花费gas。\n\n钱包则是用来管理ether的智能合约（一些代码）。这里是使用solidity写的一个钱包，运行于Mist浏览器。他们可以有许多的特性，比如多用户签名，纸？等等。\n\n这样，我们就正确的定义了两个名词，前面看到其它人对这两个术语的困惑，并把所有能存ether的都叫作Wallet。\n\nEVM以及智能合约创建的状态\n在每个全节点网络上运行的智能合约代码在EVM内执行。这是您的标准虚拟机，执行一些字节码，除了这个vm与网络，文件系统，进程等隔离。没有人想要编写字节码，所以我们有一些更高级别的语言编译为EVM字节码。\n\nSolidity\nSolidity是第一批的描述智能合约的语言。当前是最流行的语言，因此也有最多的例子，文档，和教程。你应该学习这个，除非你有要学习其它的理由。\n\n你可以使用基于浏览器的Remix IDE来进行快速验证。\n\n下面是一个Solidity的合约：\n\npragma solidity ^0.4.11;\ncontract BasicToken {\nmapping(address => uint256) balances;\nfunction transfer(address _to, uint256 _value) returns () {\n    balances[msg.sender] = balances[msg.sender] - _value;\n    balances[_to] = balances[_to] + _value;\n  }\nfunction balanceOf(address _owner) constant returns (uint256 balance) {\n    return balances[_owner];\n  }\n}\nLLL\nLLL，是一门Lisp风格的底层编程语言，就像语言名称看到的这样。虽然以太坊官方并没有将它作为主要需要支持的语言，但它仍旧持续进行着更新，且与solidity在同一个资源库。\n\n这是一个使用LLL语言写的一个ERC20代币的合约\n\nLLL示例如下：\n\n(seq\n  (def 'node-bytes  0x00)\n  (def 'owner    0x20) ; address\n  (def 'set-node-owner    0x5b0fc9c3) ; setOwner(bytes32,address)\n  (def 'get-owner (node)\n      (sload (+ node owner)))\n\n//只是用来示例，不能编译通过\n如果你正在学习，也许不是那么的容易习惯LLL语言的写法。\n\nSerpent\nSerpent是一个类Python的高级语言，最终也会被编译为EVM字节码。它主要被Augur团队使用。\n\n但最近Zeppelin Solution团队发现其编译器有一个严重的bug，在这个问题被修复之前都不建议继续使用。\n\n如果你对Augur如何解决这些漏洞感兴趣，你可以阅读Zeppelin Solution的这篇文章。\n\nSerpent的合约看起来如下：\n\ndef register(key, value):\n    # Key not yet claimed\n    if not self.storage[key]:\n        self.storage[key] = value\n        return(1)\n    else:\n        return(0)  # Key already claimed\n\ndef ask(key):\n    return(self.storage[key])\n其它\n在各种可用性和发展状态中还有一堆其他的高级语言，而且无疑将会被开发出来。 为了广泛采用，语言和编译器必须经过彻底的审查和测试，这当然需要时间。\n\n智能合约反编译/Disassembly\n可以通过prosity来反编译以太坊智能合约的字节码，可以使用evmdis来Disassembly。\n\n智能合约的安全\n一旦一个智能合约部署到了以太坊的网络上，它将是永不可变的，且将永久存在。如果你写了一个bug，你将不能下架这个有问题的版本，你只能在后续的版本中修复。\n\n由于许多工程师开发的Ethereum和其他智能合同平台来自于Web开发，所以这个概念实在是太新，而且是疯狂的。\n\nConsenSys有一个非常棒的资源叫智能合约的最佳实践，你应该深入的理解一下。\n\n一个Parity的钱包被黑的解释。\n\n在你部署你的智能合约的时候，由于你管理的是真正的资金，你应该先开一个赏金计划，并尽量保证它完整的测试过。\n\nWhisper\nWhisper是一个集成进以太坊的消息系统。它允许DApp发布小量的信息来进行非实时的消息通信。\n\n它使用shh协议。\n\n尽管它已经有段时间没有更新了，这是一个使用Whisper协议实现一个聊天客户端的例子。\n\n去中心自动化组织（DAOs）\n这是一个组织（就像，一群人），其中，使用代码来保证最终的强制执行，而不是使用传统的法律文件。这群人使用智能合约来做常见组织做的所有的事情，比如在某件事上进行投票，比如决定是否对什么进行投资等等。\n\n副作用是决策，管理，以及对什么进行投资的结果将会不可改变的存储在区块链上。\n\n之前slock.it创建了标准的DAO框架来说明这个理念。在这里有对DAO概念的总览，以及如何使用框架来实现一个自己的DAO（译者注：这个项目由于bug被黑客攻击了）。\n\nAragon\nAragon也正在应对挑战，设计一个根据智能合约逻辑运作的公司，重点是创建一个可以接受投资，处理会计，支付雇员，分配股权，正如我们现在知道的完成每天的公司的业务。他们也实现了漂亮的DApp客户端来让他们的协议使用起来更为简单。\n\n查看这里Aragon核心合约来更多的理解它是如何做的。\n\nIPFS&FileCoin\nIPFS（星际文件系统）是一个协议，用来分发文件。你可以认为它是一个基于bittorrent和git这样概念的一个文件系统，文件可以定位，且是不可变的。IPFS以IPLD数据模型存储信息，它非常有趣，提供了一些特别的特性，你可以通过下面的说明了解一些。\n\n这是一个新的协议，它有一个http的网关和文件系统适配器，这让你可以通过http，挂载整个互联网文件系统到你本地的盘/ipfs。IPFS还提供了一个寻址服务IPNS（星际命名空间），它允许可变的状态（需要注意的是在IPFS里的所有东西都是不可变的）。你甚至可以使用DNS TXT记录来定位到你的IPNS客户端，允许你生成用户友好的链接来指向到对应的数据。\n\nFileCoin是Protocol Lab为创建一个去中心化的基于IPFS的存储市场的努力结果，也就是向整个网络提供存储资源的激励层。FileCoin的共识协议没有使用浪费资源的工作量证明，而是使用了Proff of Replication和Proof of SpaceTime来保证每片数据被复制某个特定的拷贝数量且存储某个特定的时间。\n\n你应该读一下IPFS的白皮书，FileCoin的白皮书，以及IPLD的规范。\n\n由于当前FileCoin还没有上线，你可以使用当前的IPFS存储网络来运行html/css/js，并把作为一个类似orbit-db的数据库。\n\nSwarm\nSwarm是一个去中心化的存储网络，集成于以太坊生态系统，作为第一阵营的项目，看看这里关于IPFS与这个项目的比较和优劣。但本质上，基本上是一样的，除了它们有不同的哲学，并在底层使用稍微不同的协议。\n\n项目\nAugur\nAugur是一个去中心化的预测市场，让大家对于某个现实世界的事件进行对赌。一方面，用户在某个具体可以发生的事件上投注，一旦结果成真，它们赢得的代币有真正的价值。为了实现这个，你需要实现一个去中心化的先知协议，来输入现实世界中的信息，它使用REP协议代币来进行经济激励。\n\n你可以看看Augur项目的合约代码，以及了解下Augur Master Plan。\n\nGnosis\nGnosis与Augur有类似的理念，也是一个去中心化的预测市场。这是项目的白皮书，以及与Augur项目的对比。\n\nGolem\nGolem是一个分布式的算力市场，以与IPFS一样的方式构建了一整套的提供算力市场。\n\n你可以看看FAQ来更好的理解。\n\n0xProject\n0xProject创建了一个交换代币的协议，以及一个DApp来实现这个协议。开发者可以创建一个基于它们自己的分布式应用创建交易所（技术上叫中继层），而用户也不用信任这些app就可完成交易，结算在区块链上完成。0x协议旨在使用离线的第三方来广播交易和管理订单（可以创建/更新/删除订单，而不用直接向Ethereum发送缓慢/昂贵的交易），但最终会使用Ethereum进行结算。\n\n它们实现了场外交易，一个DApp使用这个协议来在用户之间直接交换代币。你可以在github上查看他们的合约。\n\n你还可以跳过这些酷炫的概念，直接阅读FAQ。\n\nSwap\nConsenSys的Swap协议也是非常类似的，但更专注于p2p的直接交易（而不是基于订单表），这里有一个白皮书，可以看看，这里有一个关于Swap协议的介绍。\n\nBancor\n代币的流动性是相对来说在加密币的生态中是一个非常大的问题。在用户间的交易需要满足买方和卖方两边的想法。\n\nBancor是一个协议，可以让你的代币1）可以根据订单自动给予价格2）可以通过持有其它的代币作为抵押器来即时创造流动性。\n\n查看这里的白皮书\n\nMakerdao & Dai\n以太坊区块链管理的代币价值往往会有巨大的波动。这个特性在现实生活中则非常不好，比如你的目标是用来保值。\n\nMaker DAO是一个DAO来管理Dai稳定币。Dai现在还不存在，但他们已经发布了一个alpha的版本叫Sai来展示这门技术。\n\n这里是DAI的白皮书。\n\nOraclize\n如果我们要向智能合约中输入一些信息，比如纽约今天的天气，我也许需要实现一个去中心化的先知协议询问一批人（花费高且慢），但如果写一个服务以中心化的方式来提供信息，又违背了去中心化应用的理念。\n\nOraclize尝试用以下方式来解决问题1）从一个外部数据源向你的智能合约发送数据。2）提供一个证明，数据来自某个数据源，且没有被修改过。由此如果你信任random.org，你可以使用Oraclize来提供一个随机数生成合约。\n\n他们的集成非常强大; 您可以获取URL，解析JSON和XPATH，查询Wolfram Alpha等。\n\nBTCRelay\nBTCRelay作为比特币区块链交易的先知机制，这意味着你可以在以太坊上编写智能合约来响应比特币区块链上的某个交易，进行触发后续的操作。比如，你可以让人通过BTC为你的服务付费，使用BTCRelay在以太坊上校验付款成功后，继而在以太坊上提供对应的服务。\n\nOpen Zeppelin & zeppelinOS\nZeppelin Solutions是一个科技公司，在这个领域内正完成一些伟大，而且专业的事。它们实在做了太多事，太难一一说清了。\n\n他们管理了Open Zeppelin，一系列经过审查的，最佳的智能合约实践，你可以继承并应用于你自己的DApp中。你可以查看他们的github资源来学习更多。你应该读一下里面的每一个合约。\n\n他们坚持代码复用的理念，然后进一步创建了Zeppelin OS。你可以忽略OS，它不是传统意义上的操作系统的概念。zeppelinOS特性，工具和服务的集合，旨在提供稳固的开发人员体验，同时最大限度地提高智能合同安全性。\n\nzeppelinOS中的其中一部分是“zeppelinOS Kernel”。其实他们不是传统意义上的核心，而且是一组库。它们是通过库模型实现的可升级的智能合约，可以在出现安全问题时独立的进行更新。因为你在合约内包含的代码更少，部署也将花费更少的gas，而开发者也减少了代码的重复。\n\nzeppelinOS还有一些其他整齐的规划，比如调度程序（智能合约的异步执行，因为默认合同一般不会主动触发某个行为），市场级的协议和链下开发者体验工具。\n\nENS - 以太坊的命名服务\nENS是一个去中心化的名称注册服务。并有一个描述性的项目名称。\n\nBAT 基础注意力代币 & Brave浏览器\nBAT尝试去中心化广告系统，通过监控大家的注意力，并在内容提供商，广告商和用户之间分发收益，切掉中间人。\n\nBrave和BAT由JS创始人Brendan Eich创建，同时他也是Mozilla的联合创始人。\n\nuPort\nuPort在解决去中心化的身份识别问题。\n\ndistrict0x\ndistrict0x是一个更高层级的去中心化的市场和社区。核心是通过一系列的智能合约来管理用户发布信息，搜索，过滤信息，在社区内维护信誉，管理支付等等。它可以用来建议如Ethlance和NameBazaar这样的市场。\n\n他们有非常棒的视觉设计。\n\nSteem\nSteem是区块链上的reddit，它使用协议代币（STEEM）来激励这个社交社区的参与度。\n\n在这里查看白皮书。\n\n有一些关于Steemit块链如何启动以及支持组织如何运作的反应。\n\n参与者与领域内的玩家\nConsenSys\nConsenSys（有点像共识Consensus，但作为一个公司名称;它很聪明，巧妙的把u改成了s，但我一般念为“con-SEn-SIS”，避免读错）是一个“风险投资和产品工作室”。他们是一个（其实非常大）伞形组织，它赞助了一大堆项目和核心组件的开发。值得一提的是，它们资助了Truffle，Infura，MetaMask，Gnosis和uPort。\n\nZeppelin Solutions\nZeppelin Solutions在上面我们有提到过，他也审查智能合约代码，提供咨询服务。他们的博客质量相当高。\n\nProtocol Labs\nProtocol Labs是一群让人印象深刻的人，致力于IPFS，FileCoin，lip2p以及IPLD等其它项目的开发。\n\n区块链资本概况\nEtienne Brunet有一篇关于代币，ICO和VC的概况文章。\n\n社区\n你可以加入以太坊的社区。\n\n未来\n未来展望。\n\n","slug":"以太坊开发入门","published":1,"updated":"2024-01-02T16:09:25.083Z","_id":"clqwlt7kh0000uc7tfri9fgh3","comments":1,"layout":"post","photos":[],"link":"","content":"<p>预备知识：</p>\n<p>你需要知道区块链的概念及实现一个无需信任的电子货币的运作原理。可以先看看长版，如果你觉得太长，可以看看短版。但我还是建议，看那个长的视频。<br>如果你是一名软件工程师，拥有软件开发的经验。能知道从系统、架构角度学一个东西，其实能倍增学习效果。<br>如果有一周的空闲时间。好了，下面开始就不再是废话了。<br>你需要了解merkle tree的基本概念，看他是如何做到防止信息篡改，以及信息自校验的（译者注：可以看我曾经翻译的以太坊官方的关于merkle tree的文章，<a href=\"http://me.tryblockchain.org/Ethereum-MerklePatriciaTree.html\">http://me.tryblockchain.org/Ethereum-MerklePatriciaTree.html</a> ）。<br>不用必须读白皮书，只需要了解一些基本概念。但说实话，如果不读，不会相信这些概念，从而不能真正明白这些概念，所以读白皮书也许仍然是最快的方式。</p>\n<p>我建议你完整的读一下本文，从一个较高的层面了解一下，然后再挑感兴趣的，一一钻研，也许要花几天时间哦。</p>\n<p>你最后会发现，区块链就是建立在朴实无华的基本技术之上，一点也不神奇。虽然最近各种ICO把它炒得非常热。每个人都是站在巨人的肩膀上，如果你是程序员，你能对这些项目和技术，理解得更深。所以不要因为其它一些糟粕，而失去了一个提升自己的机会。</p>\n<p>以太坊<br>以太坊，Ethereum是一个分布式的计算机，有许多的节点，其中的每一个节点，都会执行字节码（其实就是智能合约），然后把结果存在区块链上。由于整个网络是分布式的，且应用就是一个个的状态组成，存储了状态就有了服务；所以它就能永不停机，没有一个中心化的结点（没有任何一个节点说了算，去中心化的），任何第三方不能干预。</p>\n<p>显然上面这一段话，直接解释了以太坊是什么。但你可能有非常多的问题。可以先读一下以太坊的白皮书。或者看下这个视频，25分钟理解以太坊。（译者注：以太坊入门，确实没有什么好的办法，就是看白皮书最好，最快）</p>\n<p>智能合约<br>智能合约与平时的代码其实没有什么区别，只是运行于一个以太坊这样的分布式平台上而已。这个运行的平台，赋予了这些代码不可变，确定性，分布式和可自校验状态等特点。代码运行过程中状态的存储，是不可变的。每一个人，都可以开一个自己的节点，重放整个区块链，将会获得同样的结果（译者注：能控制所有节点都达到一致状态，就是所谓的共识）。</p>\n<p>在以太坊中，每个合约都有一个唯一的地址来标识它自己（由创建者的哈希地址和曾经发送过的交易的数量推算出来）。客户端可以与这个地址进行交互，可以发送ether，调用函数，查询当前的状态等。</p>\n<p>智能合约，本质上来说就是代码，以及代码运行后存储到区块链上的状态两个元素组成。比如，你用来收发ETH的钱包，本质上就是一个智能合约，只是外面套了一个界面。</p>\n<p>概念非常强大，而我相信你已经看完了。而你在看相关的新闻，经常听到这个非常有潜力，经常听到资产&#x2F;权利管理，分权自治组织（DAO），身份，社交网络等炫酷。但他本质就是这些。</p>\n<p>Gas<br>智能合约，就是一些代码，运行整个分布式网络中。由于网络中的每一个节点都是一个全节点。这样的好处是容错性强，坏处是效率低，消耗资源与时间（译者注：原来只在一个节点执行一次就行，现在所有节点中每一个，都要执行一模一样的运算）。因为执行计算要花钱，而要执行的运算量与代码直接相关。所以，每个在网络运行的底层操作都需要一定量的gas。gas只是一个名字，它代表的是执行所需要花费的成本（译者注：由于以太坊是图灵完备的，随便一个死循环就将导致网络不可用，所以引入了gas的概念）。整个分布式网络引入了强制限制，来避免停机问题。因此如果你写一个死循环，当gas耗尽后，网络就会拒绝执行接下来的操作，并且回滚你之前的所有操作。</p>\n<p>gas的价格由市场决定，类似于比特币的交易费机制。如果你的gas价格高，节点则将优先因为利益问题打包你的交易。</p>\n<p>一般来说，在Ethereum中计算和存储东西比在传统环境中做的更为昂贵，但是，Ethereum为您的代码提供了上述我们讨论过的那些好的属性，这可能是一样有价值的。</p>\n<p>一般来说，在以太坊网上读取状态是免费的，只有写入状态是收费的。下面这个文章是gas概念的一些深度解析。</p>\n<p>分布式APP（ĐApp &#x2F; Dapp &#x2F; dapp&#x2F; dApp）<br>一个分布式App是指，服务端运行于以太坊网络上一个或多个智能合约。</p>\n<p>一个分布式的App不用将所有状态都存储在区块链上，或者在链上进行所有计算（译者注：比如图形渲染），这样就太花gas了。所以一个分布式App把需要大家共同信任的状态存在区块链上就好了。许多的分布式应用使用后面提到的技术，如IPFS和Gelem，在链下进行分布式存储和计算。虽然没在以太坊上，但仍使用的是区块链技术。</p>\n<p>我不知道谁开始在D上使用这个小小的缺点，是看起来酷，但会影响搜索。 你可以自由使用，但尽量方便别人的搜索。</p>\n<p>以太坊的github上，有一个dapp-bin的目录，有一些文档和示例。使用前，你需要看看文件最近的状态，因为他们将很可能已经被淘汰。</p>\n<p>DApp客户端<br>大多数的分布式应用都通过一些用户友好的前端提供服务，因为不是所有人都愿意通过命令行，通过自己手动组装哈希串和操作指令码进行交易。</p>\n<p>一个DApp与传统的开发中的，客户端或前端是类似，区别仅在于它们与以太坊的区块链进行交互（也可以同时与其它服务交互）。这些客户端往往用JS编写，因为当前还暂时没有完成全部的向NodeJS的转换。</p>\n<p>另外，大多数的Dapp客户端使用JS的原因，是因为它可以在浏览器中运行，因为大家都有浏览器，这样每个人都可以运行了。由于有更多的go语言的开发工具，使用go语言来写客户端的也不少。在现在这个激烈的发展期，这意味着，除非你有自己的偏好，否则可能要从go和JS（也许还有，Rust）来选择一种语言，来与以太坊区块链，以及基于以太坊开发的协议进行交互了。</p>\n<p>以太坊的一个核心开发者，写了一篇关于使用Meteor工具来创建Dapp的文章，这意味着Meteor已经成为Dapp客户端开发的新标准。这绝对是基于JS建立全栈应用时的一个首选方法。但需要注意的是Meteor只是提供了一个开发工具，与DApp客户端并不等同，DApp客户端也完全可以由其它方式开发。（译者注：还有一些其它的开发工具，如Truffle，也是非常不错的哦）。</p>\n<p>因为围绕Meteor和DApp开发的活跃，有非常多的包在Atmophere（Meteor的包管理工具），它提供了许多常见的操作，如帐户管理，从区块链中获得最新的50个区块等等。</p>\n<p>DApp浏览器<br>一个DApp浏览器，正如它字面所表达的，用来让DApp客户端（常常使用JS与以太坊的智能合约进行交互）的使用更加容易。</p>\n<p>DApp浏览器的主要目的是：</p>\n<p>提供到一个以太坊节点的连接（或者连接到一个本地节点或者远程节点），和一个方便的切换不同节点（甚至是不同的网络）。<br>提供一个帐户（或者一个钱包）来方便用户与DApp交互。<br>Mist是以太坊官方的DApp浏览器。一个漂亮的界面来与以太坊节点交互，与智能合约发、收交易。</p>\n<p>Status是一个手机上可以使用的DApp浏览器。</p>\n<p>MetaMask是一个Google浏览器扩展，把Chrome变成了一个DApp浏览器。它的核心特性是注入以太坊提供的js客户端库web3，到每一个界面，来让DApp连接到MetaMask提供的以太坊节点服务。不过这个Chrome扩展，可以允许你管理你的钱包，以及连接到不同的以太坊网络（译者注：包括本地的开发网络）。</p>\n<p>Parity是一个以太坊客户端（也是一个全节点的实现），集成到了Web浏览器，并使之成为一个DApp浏览器。</p>\n<p>以太坊节点<br>与比特币的节点类似。每个节点都存储了整个区块链的数据，并重放所有的交易以验证结果的状态。你可以通过geth来运行一个全节点（官方的节点，go语言），或者parity来运行一个轻节点，它是第三方的，Rust语言写的。</p>\n<p>你的节点需要知道从哪个区块链下载数据，以及与哪些节点交互，后面会说明一些常见的网络。</p>\n<p>你也许可以运行下所有这些节点客户端。如果你不想自己运行一个这样的节点，有第三方的网关服务，比如Infura可以选择。另外还有专门用于测试和开发的，本地版本的节点，后面会提到。</p>\n<p>如果你正在开发一个DApp的客户端，你并不总是需要主动提供连接到以太坊的节点。因为DApp的浏览器一般会提供对应的连接（译者注：话说这样，那使用这个，还得额外安装一个DApp浏览器呀）。</p>\n<p>以太坊代币<br>现在你应该知道我们可以通过写智能合约，并将状态存到区块链上了？那如果，在状态这块，我们存的是一个Map类型，键是地址，值是整数。然后我们将这些整数值叫做余额，谁的余额呢？它就是我们要说的代币（译者注：代币的数据结构就是这样简单，存的就是某个用户，它当前的余额）。</p>\n<p>是的，所有你刚才听到的代币，只是一些数据，存储在一个哈希表里，通过api或者所谓的协议，来进行增删改查。这是一个简单的基本合约。</p>\n<p>你可以看看ethereum的创建一个众筹合约的官方教程。你将会发现它仅仅是一个合约（Crowdsale）与另一个合约（MyToken）交互，和前面的基本合约类似。并没有什么神奇的地方。</p>\n<p>人们使用代币来做各种各样的事情，阻拦大家如何使用的只有想像力。代币常常用来激励用户与某个协议进行交互，或者证明对某个资产的所有权，投票权等等。Coinbase的Fred有一个很好的关于代币，为什么存在，如何使用的文章。</p>\n<p>Ethereum的创始人Vitalik最近有一个关于代币发售模型，也是一篇不错的文章。</p>\n<p>ERC20代币与ERC23代币<br>每个人都开始定义自己与代币的交互协议，但这些很快显得陈旧，所以一些人开始集结起来，创建了ERC20代币接口标准。大概意思是说，我们定义这些接口，这样大家可以相互统一调用，比如转帐定义为transfer，第一个参数为要转去的帐户地址address _to，第二个参数为要发送的ether的uint _value数量。</p>\n<p>有些人觉得ERC20协议过于复杂了，所以他们提议了ERC197，稍微简单一点。</p>\n<p>由于在ERC20中存在的一个小问题，有人提议了一个新的ERC23。ERC23是向后兼容ERC20的。如果你已经创建了一个代币合约，可以尝试来支持ERC23。</p>\n<p>看起来ERC223和ERC23是相同的概念；ERC的值是223，但是当引用时，作者和所有的其它人误写成了ERC23非常多次，它现在也还是这样引用的。如果一句话说清楚的话，ERC223是规范号，代币说明时称为ERC23代币就好了。</p>\n<p>协议代币与App币<br>协议代币为用来激励对某个协议的使用。比如，REP，Augur的声誉代币，用来鼓励对Augur去中心化预测协议的使用。大多数的以太坊的ERC20&#x2F;ERC23代币都是协议代币，比如Golem的GNT，ICONOMI，BAT等等。</p>\n<p>App币则是用来激励对某个特定DApp或客户端的使用，而不是因为其使用的协议提供的价值。其中一个例子是Status的SNT代币，可以用来在应用内获得价值（比如，进行消息推送，投票权，获得用户名等等）。</p>\n<p>这种范式的转变是，我们可以开始投资协议代币而不是应用程序代币，因为我们可以建立在它们之上（任何人都可以在协议之上构建一个dapp，或为实现该协议的Dapp构建一个Dapp客户端）。</p>\n<p>之前，这并不可能，因为加密代币，以及接下来的协议创新的时代，为了实现货币化，你自己可以在协议之上创建一个应用，并实现赢利。因为你自己可以实现协议的货币化，大家可以在未来更好的协作。</p>\n<p>你也许可以阅读一下，关于0xProject的下面这篇文章，关于这两者区别的详细说明。</p>\n<p>与智能合约交互<br>你与智能合约的交互（也称做调用函数和读取状态）通过连接到某个以太坊节点，并执行操作码。当前有各种各样的以太坊客户端，可以方便进行开发。Geth和parity都提供了控制台或浏览器的方式来更好的与智能合约交互。</p>\n<p>如果你想要一个程序的库用来与智能合约交互的接口，也有这样的客户端实现。对于JS语言，可以使用web3.js。以于go语言，可以使用在go-ethereum中的abigen的程序，提供了go包，用来与智能合约交互。</p>\n<p>如果只是用来测试和开发，可以使用ethereumjs-testrpc来运行一个本地节点（译者注：这个节点压短区块时间等，可以方便打整的开发与测试）。</p>\n<p>当你部署了一个智能合约，你实际进行的操作是向地址0x0发送了一个交易，使用当前合约内容作为参数，一个以太坊交易详解。</p>\n<p>Truffle和Embark<br>一旦你开始写智能合约，你会重复做大量的操作，比如编译源码为字节码和abi，部署到网络，测试然后部署合约等等。你也许希望更关注于你想要实现的东西。</p>\n<p>Truffle和Embark框架，标准化和自动化了这些琐碎的工作。它们提供了一个好的开发，部署，以及更为重要的，测试智能合约的体验。</p>\n<p>你可以查看这个文章来开启使用Truffle的旅程。</p>\n<p>这篇文章，提供了使用Truffle来部署以及与智能合约交互的文章。</p>\n<p>Embark提供了类似的，帮助开发者组织工程的稍有些不同的工具。</p>\n<p>当你一开始接触智能合约这块时，应该尽量不要使用框架。直到你明白了使用框架能带来的价值时，才应该开始使用，正如你不应该通过rails new来学习HTML语言一样。</p>\n<p>ETHPM<br>分享是关心，所以ETHPM是一个去中心化的智能合约包管理资源库。使用ETHPM，你可以关联或连接到某个著名的合约或库，减少代码重复，尽可能理想的为未来的开发提供好的基础。</p>\n<p>这里的这个规范，详细的说明了相关的信息以及背景。Truffle和Embark均可与之集成，并创造一个愉快的开发体验。</p>\n<p>网络<br>Mainnet-以太坊主网，通常是所有客户端的默认网络。</p>\n<p>Ropsten - 以太坊使用工作量证明的主测试网络。这个网络，因为低的计算量，容易遭到DDOS攻击，分片，或者其它问题。垃圾邮件攻击后被暂时放弃，最近才恢复使用。</p>\n<p>Kovan-parity客户端组成的测试网络，使用授权证明来提升对垃圾邮件攻击的抗扰度，并且持续4秒的阻塞时间。</p>\n<p>Rinkeby-geth客户端组成的测试网络，使用集团共识，尽管计算量低，但是对恶意行为者更有弹性。</p>\n<p>你可以自己搭建你自己的测试网络，也许使用kubernetes或者docker-compose，但也许你将很快就可以不需要花什么时间。</p>\n<p>帐户与钱包<br>一个以太坊帐户就是一个私钥和公钥地址对。它们可以用来存储ether，创建时不需要花费gas。</p>\n<p>钱包则是用来管理ether的智能合约（一些代码）。这里是使用solidity写的一个钱包，运行于Mist浏览器。他们可以有许多的特性，比如多用户签名，纸？等等。</p>\n<p>这样，我们就正确的定义了两个名词，前面看到其它人对这两个术语的困惑，并把所有能存ether的都叫作Wallet。</p>\n<p>EVM以及智能合约创建的状态<br>在每个全节点网络上运行的智能合约代码在EVM内执行。这是您的标准虚拟机，执行一些字节码，除了这个vm与网络，文件系统，进程等隔离。没有人想要编写字节码，所以我们有一些更高级别的语言编译为EVM字节码。</p>\n<p>Solidity<br>Solidity是第一批的描述智能合约的语言。当前是最流行的语言，因此也有最多的例子，文档，和教程。你应该学习这个，除非你有要学习其它的理由。</p>\n<p>你可以使用基于浏览器的Remix IDE来进行快速验证。</p>\n<p>下面是一个Solidity的合约：</p>\n<p>pragma solidity ^0.4.11;<br>contract BasicToken {<br>mapping(address &#x3D;&gt; uint256) balances;<br>function transfer(address _to, uint256 _value) returns () {<br>    balances[msg.sender] &#x3D; balances[msg.sender] - _value;<br>    balances[_to] &#x3D; balances[_to] + _value;<br>  }<br>function balanceOf(address _owner) constant returns (uint256 balance) {<br>    return balances[_owner];<br>  }<br>}<br>LLL<br>LLL，是一门Lisp风格的底层编程语言，就像语言名称看到的这样。虽然以太坊官方并没有将它作为主要需要支持的语言，但它仍旧持续进行着更新，且与solidity在同一个资源库。</p>\n<p>这是一个使用LLL语言写的一个ERC20代币的合约</p>\n<p>LLL示例如下：</p>\n<p>(seq<br>  (def ‘node-bytes  0x00)<br>  (def ‘owner    0x20) ; address<br>  (def ‘set-node-owner    0x5b0fc9c3) ; setOwner(bytes32,address)<br>  (def ‘get-owner (node)<br>      (sload (+ node owner)))</p>\n<p>&#x2F;&#x2F;只是用来示例，不能编译通过<br>如果你正在学习，也许不是那么的容易习惯LLL语言的写法。</p>\n<p>Serpent<br>Serpent是一个类Python的高级语言，最终也会被编译为EVM字节码。它主要被Augur团队使用。</p>\n<p>但最近Zeppelin Solution团队发现其编译器有一个严重的bug，在这个问题被修复之前都不建议继续使用。</p>\n<p>如果你对Augur如何解决这些漏洞感兴趣，你可以阅读Zeppelin Solution的这篇文章。</p>\n<p>Serpent的合约看起来如下：</p>\n<p>def register(key, value):<br>    # Key not yet claimed<br>    if not self.storage[key]:<br>        self.storage[key] &#x3D; value<br>        return(1)<br>    else:<br>        return(0)  # Key already claimed</p>\n<p>def ask(key):<br>    return(self.storage[key])<br>其它<br>在各种可用性和发展状态中还有一堆其他的高级语言，而且无疑将会被开发出来。 为了广泛采用，语言和编译器必须经过彻底的审查和测试，这当然需要时间。</p>\n<p>智能合约反编译&#x2F;Disassembly<br>可以通过prosity来反编译以太坊智能合约的字节码，可以使用evmdis来Disassembly。</p>\n<p>智能合约的安全<br>一旦一个智能合约部署到了以太坊的网络上，它将是永不可变的，且将永久存在。如果你写了一个bug，你将不能下架这个有问题的版本，你只能在后续的版本中修复。</p>\n<p>由于许多工程师开发的Ethereum和其他智能合同平台来自于Web开发，所以这个概念实在是太新，而且是疯狂的。</p>\n<p>ConsenSys有一个非常棒的资源叫智能合约的最佳实践，你应该深入的理解一下。</p>\n<p>一个Parity的钱包被黑的解释。</p>\n<p>在你部署你的智能合约的时候，由于你管理的是真正的资金，你应该先开一个赏金计划，并尽量保证它完整的测试过。</p>\n<p>Whisper<br>Whisper是一个集成进以太坊的消息系统。它允许DApp发布小量的信息来进行非实时的消息通信。</p>\n<p>它使用shh协议。</p>\n<p>尽管它已经有段时间没有更新了，这是一个使用Whisper协议实现一个聊天客户端的例子。</p>\n<p>去中心自动化组织（DAOs）<br>这是一个组织（就像，一群人），其中，使用代码来保证最终的强制执行，而不是使用传统的法律文件。这群人使用智能合约来做常见组织做的所有的事情，比如在某件事上进行投票，比如决定是否对什么进行投资等等。</p>\n<p>副作用是决策，管理，以及对什么进行投资的结果将会不可改变的存储在区块链上。</p>\n<p>之前slock.it创建了标准的DAO框架来说明这个理念。在这里有对DAO概念的总览，以及如何使用框架来实现一个自己的DAO（译者注：这个项目由于bug被黑客攻击了）。</p>\n<p>Aragon<br>Aragon也正在应对挑战，设计一个根据智能合约逻辑运作的公司，重点是创建一个可以接受投资，处理会计，支付雇员，分配股权，正如我们现在知道的完成每天的公司的业务。他们也实现了漂亮的DApp客户端来让他们的协议使用起来更为简单。</p>\n<p>查看这里Aragon核心合约来更多的理解它是如何做的。</p>\n<p>IPFS&amp;FileCoin<br>IPFS（星际文件系统）是一个协议，用来分发文件。你可以认为它是一个基于bittorrent和git这样概念的一个文件系统，文件可以定位，且是不可变的。IPFS以IPLD数据模型存储信息，它非常有趣，提供了一些特别的特性，你可以通过下面的说明了解一些。</p>\n<p>这是一个新的协议，它有一个http的网关和文件系统适配器，这让你可以通过http，挂载整个互联网文件系统到你本地的盘&#x2F;ipfs。IPFS还提供了一个寻址服务IPNS（星际命名空间），它允许可变的状态（需要注意的是在IPFS里的所有东西都是不可变的）。你甚至可以使用DNS TXT记录来定位到你的IPNS客户端，允许你生成用户友好的链接来指向到对应的数据。</p>\n<p>FileCoin是Protocol Lab为创建一个去中心化的基于IPFS的存储市场的努力结果，也就是向整个网络提供存储资源的激励层。FileCoin的共识协议没有使用浪费资源的工作量证明，而是使用了Proff of Replication和Proof of SpaceTime来保证每片数据被复制某个特定的拷贝数量且存储某个特定的时间。</p>\n<p>你应该读一下IPFS的白皮书，FileCoin的白皮书，以及IPLD的规范。</p>\n<p>由于当前FileCoin还没有上线，你可以使用当前的IPFS存储网络来运行html&#x2F;css&#x2F;js，并把作为一个类似orbit-db的数据库。</p>\n<p>Swarm<br>Swarm是一个去中心化的存储网络，集成于以太坊生态系统，作为第一阵营的项目，看看这里关于IPFS与这个项目的比较和优劣。但本质上，基本上是一样的，除了它们有不同的哲学，并在底层使用稍微不同的协议。</p>\n<p>项目<br>Augur<br>Augur是一个去中心化的预测市场，让大家对于某个现实世界的事件进行对赌。一方面，用户在某个具体可以发生的事件上投注，一旦结果成真，它们赢得的代币有真正的价值。为了实现这个，你需要实现一个去中心化的先知协议，来输入现实世界中的信息，它使用REP协议代币来进行经济激励。</p>\n<p>你可以看看Augur项目的合约代码，以及了解下Augur Master Plan。</p>\n<p>Gnosis<br>Gnosis与Augur有类似的理念，也是一个去中心化的预测市场。这是项目的白皮书，以及与Augur项目的对比。</p>\n<p>Golem<br>Golem是一个分布式的算力市场，以与IPFS一样的方式构建了一整套的提供算力市场。</p>\n<p>你可以看看FAQ来更好的理解。</p>\n<p>0xProject<br>0xProject创建了一个交换代币的协议，以及一个DApp来实现这个协议。开发者可以创建一个基于它们自己的分布式应用创建交易所（技术上叫中继层），而用户也不用信任这些app就可完成交易，结算在区块链上完成。0x协议旨在使用离线的第三方来广播交易和管理订单（可以创建&#x2F;更新&#x2F;删除订单，而不用直接向Ethereum发送缓慢&#x2F;昂贵的交易），但最终会使用Ethereum进行结算。</p>\n<p>它们实现了场外交易，一个DApp使用这个协议来在用户之间直接交换代币。你可以在github上查看他们的合约。</p>\n<p>你还可以跳过这些酷炫的概念，直接阅读FAQ。</p>\n<p>Swap<br>ConsenSys的Swap协议也是非常类似的，但更专注于p2p的直接交易（而不是基于订单表），这里有一个白皮书，可以看看，这里有一个关于Swap协议的介绍。</p>\n<p>Bancor<br>代币的流动性是相对来说在加密币的生态中是一个非常大的问题。在用户间的交易需要满足买方和卖方两边的想法。</p>\n<p>Bancor是一个协议，可以让你的代币1）可以根据订单自动给予价格2）可以通过持有其它的代币作为抵押器来即时创造流动性。</p>\n<p>查看这里的白皮书</p>\n<p>Makerdao &amp; Dai<br>以太坊区块链管理的代币价值往往会有巨大的波动。这个特性在现实生活中则非常不好，比如你的目标是用来保值。</p>\n<p>Maker DAO是一个DAO来管理Dai稳定币。Dai现在还不存在，但他们已经发布了一个alpha的版本叫Sai来展示这门技术。</p>\n<p>这里是DAI的白皮书。</p>\n<p>Oraclize<br>如果我们要向智能合约中输入一些信息，比如纽约今天的天气，我也许需要实现一个去中心化的先知协议询问一批人（花费高且慢），但如果写一个服务以中心化的方式来提供信息，又违背了去中心化应用的理念。</p>\n<p>Oraclize尝试用以下方式来解决问题1）从一个外部数据源向你的智能合约发送数据。2）提供一个证明，数据来自某个数据源，且没有被修改过。由此如果你信任random.org，你可以使用Oraclize来提供一个随机数生成合约。</p>\n<p>他们的集成非常强大; 您可以获取URL，解析JSON和XPATH，查询Wolfram Alpha等。</p>\n<p>BTCRelay<br>BTCRelay作为比特币区块链交易的先知机制，这意味着你可以在以太坊上编写智能合约来响应比特币区块链上的某个交易，进行触发后续的操作。比如，你可以让人通过BTC为你的服务付费，使用BTCRelay在以太坊上校验付款成功后，继而在以太坊上提供对应的服务。</p>\n<p>Open Zeppelin &amp; zeppelinOS<br>Zeppelin Solutions是一个科技公司，在这个领域内正完成一些伟大，而且专业的事。它们实在做了太多事，太难一一说清了。</p>\n<p>他们管理了Open Zeppelin，一系列经过审查的，最佳的智能合约实践，你可以继承并应用于你自己的DApp中。你可以查看他们的github资源来学习更多。你应该读一下里面的每一个合约。</p>\n<p>他们坚持代码复用的理念，然后进一步创建了Zeppelin OS。你可以忽略OS，它不是传统意义上的操作系统的概念。zeppelinOS特性，工具和服务的集合，旨在提供稳固的开发人员体验，同时最大限度地提高智能合同安全性。</p>\n<p>zeppelinOS中的其中一部分是“zeppelinOS Kernel”。其实他们不是传统意义上的核心，而且是一组库。它们是通过库模型实现的可升级的智能合约，可以在出现安全问题时独立的进行更新。因为你在合约内包含的代码更少，部署也将花费更少的gas，而开发者也减少了代码的重复。</p>\n<p>zeppelinOS还有一些其他整齐的规划，比如调度程序（智能合约的异步执行，因为默认合同一般不会主动触发某个行为），市场级的协议和链下开发者体验工具。</p>\n<p>ENS - 以太坊的命名服务<br>ENS是一个去中心化的名称注册服务。并有一个描述性的项目名称。</p>\n<p>BAT 基础注意力代币 &amp; Brave浏览器<br>BAT尝试去中心化广告系统，通过监控大家的注意力，并在内容提供商，广告商和用户之间分发收益，切掉中间人。</p>\n<p>Brave和BAT由JS创始人Brendan Eich创建，同时他也是Mozilla的联合创始人。</p>\n<p>uPort<br>uPort在解决去中心化的身份识别问题。</p>\n<p>district0x<br>district0x是一个更高层级的去中心化的市场和社区。核心是通过一系列的智能合约来管理用户发布信息，搜索，过滤信息，在社区内维护信誉，管理支付等等。它可以用来建议如Ethlance和NameBazaar这样的市场。</p>\n<p>他们有非常棒的视觉设计。</p>\n<p>Steem<br>Steem是区块链上的reddit，它使用协议代币（STEEM）来激励这个社交社区的参与度。</p>\n<p>在这里查看白皮书。</p>\n<p>有一些关于Steemit块链如何启动以及支持组织如何运作的反应。</p>\n<p>参与者与领域内的玩家<br>ConsenSys<br>ConsenSys（有点像共识Consensus，但作为一个公司名称;它很聪明，巧妙的把u改成了s，但我一般念为“con-SEn-SIS”，避免读错）是一个“风险投资和产品工作室”。他们是一个（其实非常大）伞形组织，它赞助了一大堆项目和核心组件的开发。值得一提的是，它们资助了Truffle，Infura，MetaMask，Gnosis和uPort。</p>\n<p>Zeppelin Solutions<br>Zeppelin Solutions在上面我们有提到过，他也审查智能合约代码，提供咨询服务。他们的博客质量相当高。</p>\n<p>Protocol Labs<br>Protocol Labs是一群让人印象深刻的人，致力于IPFS，FileCoin，lip2p以及IPLD等其它项目的开发。</p>\n<p>区块链资本概况<br>Etienne Brunet有一篇关于代币，ICO和VC的概况文章。</p>\n<p>社区<br>你可以加入以太坊的社区。</p>\n<p>未来<br>未来展望。</p>\n","site":{"data":{"gallery":{"图片名称":{"full_link":"http://miccall.tech/img/twx.jpg","thumb_link":"http://miccall.tech/img/twx.jpg","descr":"图片描述"}},"links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}},"_links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}}}},"excerpt":"","more":"<p>预备知识：</p>\n<p>你需要知道区块链的概念及实现一个无需信任的电子货币的运作原理。可以先看看长版，如果你觉得太长，可以看看短版。但我还是建议，看那个长的视频。<br>如果你是一名软件工程师，拥有软件开发的经验。能知道从系统、架构角度学一个东西，其实能倍增学习效果。<br>如果有一周的空闲时间。好了，下面开始就不再是废话了。<br>你需要了解merkle tree的基本概念，看他是如何做到防止信息篡改，以及信息自校验的（译者注：可以看我曾经翻译的以太坊官方的关于merkle tree的文章，<a href=\"http://me.tryblockchain.org/Ethereum-MerklePatriciaTree.html\">http://me.tryblockchain.org/Ethereum-MerklePatriciaTree.html</a> ）。<br>不用必须读白皮书，只需要了解一些基本概念。但说实话，如果不读，不会相信这些概念，从而不能真正明白这些概念，所以读白皮书也许仍然是最快的方式。</p>\n<p>我建议你完整的读一下本文，从一个较高的层面了解一下，然后再挑感兴趣的，一一钻研，也许要花几天时间哦。</p>\n<p>你最后会发现，区块链就是建立在朴实无华的基本技术之上，一点也不神奇。虽然最近各种ICO把它炒得非常热。每个人都是站在巨人的肩膀上，如果你是程序员，你能对这些项目和技术，理解得更深。所以不要因为其它一些糟粕，而失去了一个提升自己的机会。</p>\n<p>以太坊<br>以太坊，Ethereum是一个分布式的计算机，有许多的节点，其中的每一个节点，都会执行字节码（其实就是智能合约），然后把结果存在区块链上。由于整个网络是分布式的，且应用就是一个个的状态组成，存储了状态就有了服务；所以它就能永不停机，没有一个中心化的结点（没有任何一个节点说了算，去中心化的），任何第三方不能干预。</p>\n<p>显然上面这一段话，直接解释了以太坊是什么。但你可能有非常多的问题。可以先读一下以太坊的白皮书。或者看下这个视频，25分钟理解以太坊。（译者注：以太坊入门，确实没有什么好的办法，就是看白皮书最好，最快）</p>\n<p>智能合约<br>智能合约与平时的代码其实没有什么区别，只是运行于一个以太坊这样的分布式平台上而已。这个运行的平台，赋予了这些代码不可变，确定性，分布式和可自校验状态等特点。代码运行过程中状态的存储，是不可变的。每一个人，都可以开一个自己的节点，重放整个区块链，将会获得同样的结果（译者注：能控制所有节点都达到一致状态，就是所谓的共识）。</p>\n<p>在以太坊中，每个合约都有一个唯一的地址来标识它自己（由创建者的哈希地址和曾经发送过的交易的数量推算出来）。客户端可以与这个地址进行交互，可以发送ether，调用函数，查询当前的状态等。</p>\n<p>智能合约，本质上来说就是代码，以及代码运行后存储到区块链上的状态两个元素组成。比如，你用来收发ETH的钱包，本质上就是一个智能合约，只是外面套了一个界面。</p>\n<p>概念非常强大，而我相信你已经看完了。而你在看相关的新闻，经常听到这个非常有潜力，经常听到资产&#x2F;权利管理，分权自治组织（DAO），身份，社交网络等炫酷。但他本质就是这些。</p>\n<p>Gas<br>智能合约，就是一些代码，运行整个分布式网络中。由于网络中的每一个节点都是一个全节点。这样的好处是容错性强，坏处是效率低，消耗资源与时间（译者注：原来只在一个节点执行一次就行，现在所有节点中每一个，都要执行一模一样的运算）。因为执行计算要花钱，而要执行的运算量与代码直接相关。所以，每个在网络运行的底层操作都需要一定量的gas。gas只是一个名字，它代表的是执行所需要花费的成本（译者注：由于以太坊是图灵完备的，随便一个死循环就将导致网络不可用，所以引入了gas的概念）。整个分布式网络引入了强制限制，来避免停机问题。因此如果你写一个死循环，当gas耗尽后，网络就会拒绝执行接下来的操作，并且回滚你之前的所有操作。</p>\n<p>gas的价格由市场决定，类似于比特币的交易费机制。如果你的gas价格高，节点则将优先因为利益问题打包你的交易。</p>\n<p>一般来说，在Ethereum中计算和存储东西比在传统环境中做的更为昂贵，但是，Ethereum为您的代码提供了上述我们讨论过的那些好的属性，这可能是一样有价值的。</p>\n<p>一般来说，在以太坊网上读取状态是免费的，只有写入状态是收费的。下面这个文章是gas概念的一些深度解析。</p>\n<p>分布式APP（ĐApp &#x2F; Dapp &#x2F; dapp&#x2F; dApp）<br>一个分布式App是指，服务端运行于以太坊网络上一个或多个智能合约。</p>\n<p>一个分布式的App不用将所有状态都存储在区块链上，或者在链上进行所有计算（译者注：比如图形渲染），这样就太花gas了。所以一个分布式App把需要大家共同信任的状态存在区块链上就好了。许多的分布式应用使用后面提到的技术，如IPFS和Gelem，在链下进行分布式存储和计算。虽然没在以太坊上，但仍使用的是区块链技术。</p>\n<p>我不知道谁开始在D上使用这个小小的缺点，是看起来酷，但会影响搜索。 你可以自由使用，但尽量方便别人的搜索。</p>\n<p>以太坊的github上，有一个dapp-bin的目录，有一些文档和示例。使用前，你需要看看文件最近的状态，因为他们将很可能已经被淘汰。</p>\n<p>DApp客户端<br>大多数的分布式应用都通过一些用户友好的前端提供服务，因为不是所有人都愿意通过命令行，通过自己手动组装哈希串和操作指令码进行交易。</p>\n<p>一个DApp与传统的开发中的，客户端或前端是类似，区别仅在于它们与以太坊的区块链进行交互（也可以同时与其它服务交互）。这些客户端往往用JS编写，因为当前还暂时没有完成全部的向NodeJS的转换。</p>\n<p>另外，大多数的Dapp客户端使用JS的原因，是因为它可以在浏览器中运行，因为大家都有浏览器，这样每个人都可以运行了。由于有更多的go语言的开发工具，使用go语言来写客户端的也不少。在现在这个激烈的发展期，这意味着，除非你有自己的偏好，否则可能要从go和JS（也许还有，Rust）来选择一种语言，来与以太坊区块链，以及基于以太坊开发的协议进行交互了。</p>\n<p>以太坊的一个核心开发者，写了一篇关于使用Meteor工具来创建Dapp的文章，这意味着Meteor已经成为Dapp客户端开发的新标准。这绝对是基于JS建立全栈应用时的一个首选方法。但需要注意的是Meteor只是提供了一个开发工具，与DApp客户端并不等同，DApp客户端也完全可以由其它方式开发。（译者注：还有一些其它的开发工具，如Truffle，也是非常不错的哦）。</p>\n<p>因为围绕Meteor和DApp开发的活跃，有非常多的包在Atmophere（Meteor的包管理工具），它提供了许多常见的操作，如帐户管理，从区块链中获得最新的50个区块等等。</p>\n<p>DApp浏览器<br>一个DApp浏览器，正如它字面所表达的，用来让DApp客户端（常常使用JS与以太坊的智能合约进行交互）的使用更加容易。</p>\n<p>DApp浏览器的主要目的是：</p>\n<p>提供到一个以太坊节点的连接（或者连接到一个本地节点或者远程节点），和一个方便的切换不同节点（甚至是不同的网络）。<br>提供一个帐户（或者一个钱包）来方便用户与DApp交互。<br>Mist是以太坊官方的DApp浏览器。一个漂亮的界面来与以太坊节点交互，与智能合约发、收交易。</p>\n<p>Status是一个手机上可以使用的DApp浏览器。</p>\n<p>MetaMask是一个Google浏览器扩展，把Chrome变成了一个DApp浏览器。它的核心特性是注入以太坊提供的js客户端库web3，到每一个界面，来让DApp连接到MetaMask提供的以太坊节点服务。不过这个Chrome扩展，可以允许你管理你的钱包，以及连接到不同的以太坊网络（译者注：包括本地的开发网络）。</p>\n<p>Parity是一个以太坊客户端（也是一个全节点的实现），集成到了Web浏览器，并使之成为一个DApp浏览器。</p>\n<p>以太坊节点<br>与比特币的节点类似。每个节点都存储了整个区块链的数据，并重放所有的交易以验证结果的状态。你可以通过geth来运行一个全节点（官方的节点，go语言），或者parity来运行一个轻节点，它是第三方的，Rust语言写的。</p>\n<p>你的节点需要知道从哪个区块链下载数据，以及与哪些节点交互，后面会说明一些常见的网络。</p>\n<p>你也许可以运行下所有这些节点客户端。如果你不想自己运行一个这样的节点，有第三方的网关服务，比如Infura可以选择。另外还有专门用于测试和开发的，本地版本的节点，后面会提到。</p>\n<p>如果你正在开发一个DApp的客户端，你并不总是需要主动提供连接到以太坊的节点。因为DApp的浏览器一般会提供对应的连接（译者注：话说这样，那使用这个，还得额外安装一个DApp浏览器呀）。</p>\n<p>以太坊代币<br>现在你应该知道我们可以通过写智能合约，并将状态存到区块链上了？那如果，在状态这块，我们存的是一个Map类型，键是地址，值是整数。然后我们将这些整数值叫做余额，谁的余额呢？它就是我们要说的代币（译者注：代币的数据结构就是这样简单，存的就是某个用户，它当前的余额）。</p>\n<p>是的，所有你刚才听到的代币，只是一些数据，存储在一个哈希表里，通过api或者所谓的协议，来进行增删改查。这是一个简单的基本合约。</p>\n<p>你可以看看ethereum的创建一个众筹合约的官方教程。你将会发现它仅仅是一个合约（Crowdsale）与另一个合约（MyToken）交互，和前面的基本合约类似。并没有什么神奇的地方。</p>\n<p>人们使用代币来做各种各样的事情，阻拦大家如何使用的只有想像力。代币常常用来激励用户与某个协议进行交互，或者证明对某个资产的所有权，投票权等等。Coinbase的Fred有一个很好的关于代币，为什么存在，如何使用的文章。</p>\n<p>Ethereum的创始人Vitalik最近有一个关于代币发售模型，也是一篇不错的文章。</p>\n<p>ERC20代币与ERC23代币<br>每个人都开始定义自己与代币的交互协议，但这些很快显得陈旧，所以一些人开始集结起来，创建了ERC20代币接口标准。大概意思是说，我们定义这些接口，这样大家可以相互统一调用，比如转帐定义为transfer，第一个参数为要转去的帐户地址address _to，第二个参数为要发送的ether的uint _value数量。</p>\n<p>有些人觉得ERC20协议过于复杂了，所以他们提议了ERC197，稍微简单一点。</p>\n<p>由于在ERC20中存在的一个小问题，有人提议了一个新的ERC23。ERC23是向后兼容ERC20的。如果你已经创建了一个代币合约，可以尝试来支持ERC23。</p>\n<p>看起来ERC223和ERC23是相同的概念；ERC的值是223，但是当引用时，作者和所有的其它人误写成了ERC23非常多次，它现在也还是这样引用的。如果一句话说清楚的话，ERC223是规范号，代币说明时称为ERC23代币就好了。</p>\n<p>协议代币与App币<br>协议代币为用来激励对某个协议的使用。比如，REP，Augur的声誉代币，用来鼓励对Augur去中心化预测协议的使用。大多数的以太坊的ERC20&#x2F;ERC23代币都是协议代币，比如Golem的GNT，ICONOMI，BAT等等。</p>\n<p>App币则是用来激励对某个特定DApp或客户端的使用，而不是因为其使用的协议提供的价值。其中一个例子是Status的SNT代币，可以用来在应用内获得价值（比如，进行消息推送，投票权，获得用户名等等）。</p>\n<p>这种范式的转变是，我们可以开始投资协议代币而不是应用程序代币，因为我们可以建立在它们之上（任何人都可以在协议之上构建一个dapp，或为实现该协议的Dapp构建一个Dapp客户端）。</p>\n<p>之前，这并不可能，因为加密代币，以及接下来的协议创新的时代，为了实现货币化，你自己可以在协议之上创建一个应用，并实现赢利。因为你自己可以实现协议的货币化，大家可以在未来更好的协作。</p>\n<p>你也许可以阅读一下，关于0xProject的下面这篇文章，关于这两者区别的详细说明。</p>\n<p>与智能合约交互<br>你与智能合约的交互（也称做调用函数和读取状态）通过连接到某个以太坊节点，并执行操作码。当前有各种各样的以太坊客户端，可以方便进行开发。Geth和parity都提供了控制台或浏览器的方式来更好的与智能合约交互。</p>\n<p>如果你想要一个程序的库用来与智能合约交互的接口，也有这样的客户端实现。对于JS语言，可以使用web3.js。以于go语言，可以使用在go-ethereum中的abigen的程序，提供了go包，用来与智能合约交互。</p>\n<p>如果只是用来测试和开发，可以使用ethereumjs-testrpc来运行一个本地节点（译者注：这个节点压短区块时间等，可以方便打整的开发与测试）。</p>\n<p>当你部署了一个智能合约，你实际进行的操作是向地址0x0发送了一个交易，使用当前合约内容作为参数，一个以太坊交易详解。</p>\n<p>Truffle和Embark<br>一旦你开始写智能合约，你会重复做大量的操作，比如编译源码为字节码和abi，部署到网络，测试然后部署合约等等。你也许希望更关注于你想要实现的东西。</p>\n<p>Truffle和Embark框架，标准化和自动化了这些琐碎的工作。它们提供了一个好的开发，部署，以及更为重要的，测试智能合约的体验。</p>\n<p>你可以查看这个文章来开启使用Truffle的旅程。</p>\n<p>这篇文章，提供了使用Truffle来部署以及与智能合约交互的文章。</p>\n<p>Embark提供了类似的，帮助开发者组织工程的稍有些不同的工具。</p>\n<p>当你一开始接触智能合约这块时，应该尽量不要使用框架。直到你明白了使用框架能带来的价值时，才应该开始使用，正如你不应该通过rails new来学习HTML语言一样。</p>\n<p>ETHPM<br>分享是关心，所以ETHPM是一个去中心化的智能合约包管理资源库。使用ETHPM，你可以关联或连接到某个著名的合约或库，减少代码重复，尽可能理想的为未来的开发提供好的基础。</p>\n<p>这里的这个规范，详细的说明了相关的信息以及背景。Truffle和Embark均可与之集成，并创造一个愉快的开发体验。</p>\n<p>网络<br>Mainnet-以太坊主网，通常是所有客户端的默认网络。</p>\n<p>Ropsten - 以太坊使用工作量证明的主测试网络。这个网络，因为低的计算量，容易遭到DDOS攻击，分片，或者其它问题。垃圾邮件攻击后被暂时放弃，最近才恢复使用。</p>\n<p>Kovan-parity客户端组成的测试网络，使用授权证明来提升对垃圾邮件攻击的抗扰度，并且持续4秒的阻塞时间。</p>\n<p>Rinkeby-geth客户端组成的测试网络，使用集团共识，尽管计算量低，但是对恶意行为者更有弹性。</p>\n<p>你可以自己搭建你自己的测试网络，也许使用kubernetes或者docker-compose，但也许你将很快就可以不需要花什么时间。</p>\n<p>帐户与钱包<br>一个以太坊帐户就是一个私钥和公钥地址对。它们可以用来存储ether，创建时不需要花费gas。</p>\n<p>钱包则是用来管理ether的智能合约（一些代码）。这里是使用solidity写的一个钱包，运行于Mist浏览器。他们可以有许多的特性，比如多用户签名，纸？等等。</p>\n<p>这样，我们就正确的定义了两个名词，前面看到其它人对这两个术语的困惑，并把所有能存ether的都叫作Wallet。</p>\n<p>EVM以及智能合约创建的状态<br>在每个全节点网络上运行的智能合约代码在EVM内执行。这是您的标准虚拟机，执行一些字节码，除了这个vm与网络，文件系统，进程等隔离。没有人想要编写字节码，所以我们有一些更高级别的语言编译为EVM字节码。</p>\n<p>Solidity<br>Solidity是第一批的描述智能合约的语言。当前是最流行的语言，因此也有最多的例子，文档，和教程。你应该学习这个，除非你有要学习其它的理由。</p>\n<p>你可以使用基于浏览器的Remix IDE来进行快速验证。</p>\n<p>下面是一个Solidity的合约：</p>\n<p>pragma solidity ^0.4.11;<br>contract BasicToken {<br>mapping(address &#x3D;&gt; uint256) balances;<br>function transfer(address _to, uint256 _value) returns () {<br>    balances[msg.sender] &#x3D; balances[msg.sender] - _value;<br>    balances[_to] &#x3D; balances[_to] + _value;<br>  }<br>function balanceOf(address _owner) constant returns (uint256 balance) {<br>    return balances[_owner];<br>  }<br>}<br>LLL<br>LLL，是一门Lisp风格的底层编程语言，就像语言名称看到的这样。虽然以太坊官方并没有将它作为主要需要支持的语言，但它仍旧持续进行着更新，且与solidity在同一个资源库。</p>\n<p>这是一个使用LLL语言写的一个ERC20代币的合约</p>\n<p>LLL示例如下：</p>\n<p>(seq<br>  (def ‘node-bytes  0x00)<br>  (def ‘owner    0x20) ; address<br>  (def ‘set-node-owner    0x5b0fc9c3) ; setOwner(bytes32,address)<br>  (def ‘get-owner (node)<br>      (sload (+ node owner)))</p>\n<p>&#x2F;&#x2F;只是用来示例，不能编译通过<br>如果你正在学习，也许不是那么的容易习惯LLL语言的写法。</p>\n<p>Serpent<br>Serpent是一个类Python的高级语言，最终也会被编译为EVM字节码。它主要被Augur团队使用。</p>\n<p>但最近Zeppelin Solution团队发现其编译器有一个严重的bug，在这个问题被修复之前都不建议继续使用。</p>\n<p>如果你对Augur如何解决这些漏洞感兴趣，你可以阅读Zeppelin Solution的这篇文章。</p>\n<p>Serpent的合约看起来如下：</p>\n<p>def register(key, value):<br>    # Key not yet claimed<br>    if not self.storage[key]:<br>        self.storage[key] &#x3D; value<br>        return(1)<br>    else:<br>        return(0)  # Key already claimed</p>\n<p>def ask(key):<br>    return(self.storage[key])<br>其它<br>在各种可用性和发展状态中还有一堆其他的高级语言，而且无疑将会被开发出来。 为了广泛采用，语言和编译器必须经过彻底的审查和测试，这当然需要时间。</p>\n<p>智能合约反编译&#x2F;Disassembly<br>可以通过prosity来反编译以太坊智能合约的字节码，可以使用evmdis来Disassembly。</p>\n<p>智能合约的安全<br>一旦一个智能合约部署到了以太坊的网络上，它将是永不可变的，且将永久存在。如果你写了一个bug，你将不能下架这个有问题的版本，你只能在后续的版本中修复。</p>\n<p>由于许多工程师开发的Ethereum和其他智能合同平台来自于Web开发，所以这个概念实在是太新，而且是疯狂的。</p>\n<p>ConsenSys有一个非常棒的资源叫智能合约的最佳实践，你应该深入的理解一下。</p>\n<p>一个Parity的钱包被黑的解释。</p>\n<p>在你部署你的智能合约的时候，由于你管理的是真正的资金，你应该先开一个赏金计划，并尽量保证它完整的测试过。</p>\n<p>Whisper<br>Whisper是一个集成进以太坊的消息系统。它允许DApp发布小量的信息来进行非实时的消息通信。</p>\n<p>它使用shh协议。</p>\n<p>尽管它已经有段时间没有更新了，这是一个使用Whisper协议实现一个聊天客户端的例子。</p>\n<p>去中心自动化组织（DAOs）<br>这是一个组织（就像，一群人），其中，使用代码来保证最终的强制执行，而不是使用传统的法律文件。这群人使用智能合约来做常见组织做的所有的事情，比如在某件事上进行投票，比如决定是否对什么进行投资等等。</p>\n<p>副作用是决策，管理，以及对什么进行投资的结果将会不可改变的存储在区块链上。</p>\n<p>之前slock.it创建了标准的DAO框架来说明这个理念。在这里有对DAO概念的总览，以及如何使用框架来实现一个自己的DAO（译者注：这个项目由于bug被黑客攻击了）。</p>\n<p>Aragon<br>Aragon也正在应对挑战，设计一个根据智能合约逻辑运作的公司，重点是创建一个可以接受投资，处理会计，支付雇员，分配股权，正如我们现在知道的完成每天的公司的业务。他们也实现了漂亮的DApp客户端来让他们的协议使用起来更为简单。</p>\n<p>查看这里Aragon核心合约来更多的理解它是如何做的。</p>\n<p>IPFS&amp;FileCoin<br>IPFS（星际文件系统）是一个协议，用来分发文件。你可以认为它是一个基于bittorrent和git这样概念的一个文件系统，文件可以定位，且是不可变的。IPFS以IPLD数据模型存储信息，它非常有趣，提供了一些特别的特性，你可以通过下面的说明了解一些。</p>\n<p>这是一个新的协议，它有一个http的网关和文件系统适配器，这让你可以通过http，挂载整个互联网文件系统到你本地的盘&#x2F;ipfs。IPFS还提供了一个寻址服务IPNS（星际命名空间），它允许可变的状态（需要注意的是在IPFS里的所有东西都是不可变的）。你甚至可以使用DNS TXT记录来定位到你的IPNS客户端，允许你生成用户友好的链接来指向到对应的数据。</p>\n<p>FileCoin是Protocol Lab为创建一个去中心化的基于IPFS的存储市场的努力结果，也就是向整个网络提供存储资源的激励层。FileCoin的共识协议没有使用浪费资源的工作量证明，而是使用了Proff of Replication和Proof of SpaceTime来保证每片数据被复制某个特定的拷贝数量且存储某个特定的时间。</p>\n<p>你应该读一下IPFS的白皮书，FileCoin的白皮书，以及IPLD的规范。</p>\n<p>由于当前FileCoin还没有上线，你可以使用当前的IPFS存储网络来运行html&#x2F;css&#x2F;js，并把作为一个类似orbit-db的数据库。</p>\n<p>Swarm<br>Swarm是一个去中心化的存储网络，集成于以太坊生态系统，作为第一阵营的项目，看看这里关于IPFS与这个项目的比较和优劣。但本质上，基本上是一样的，除了它们有不同的哲学，并在底层使用稍微不同的协议。</p>\n<p>项目<br>Augur<br>Augur是一个去中心化的预测市场，让大家对于某个现实世界的事件进行对赌。一方面，用户在某个具体可以发生的事件上投注，一旦结果成真，它们赢得的代币有真正的价值。为了实现这个，你需要实现一个去中心化的先知协议，来输入现实世界中的信息，它使用REP协议代币来进行经济激励。</p>\n<p>你可以看看Augur项目的合约代码，以及了解下Augur Master Plan。</p>\n<p>Gnosis<br>Gnosis与Augur有类似的理念，也是一个去中心化的预测市场。这是项目的白皮书，以及与Augur项目的对比。</p>\n<p>Golem<br>Golem是一个分布式的算力市场，以与IPFS一样的方式构建了一整套的提供算力市场。</p>\n<p>你可以看看FAQ来更好的理解。</p>\n<p>0xProject<br>0xProject创建了一个交换代币的协议，以及一个DApp来实现这个协议。开发者可以创建一个基于它们自己的分布式应用创建交易所（技术上叫中继层），而用户也不用信任这些app就可完成交易，结算在区块链上完成。0x协议旨在使用离线的第三方来广播交易和管理订单（可以创建&#x2F;更新&#x2F;删除订单，而不用直接向Ethereum发送缓慢&#x2F;昂贵的交易），但最终会使用Ethereum进行结算。</p>\n<p>它们实现了场外交易，一个DApp使用这个协议来在用户之间直接交换代币。你可以在github上查看他们的合约。</p>\n<p>你还可以跳过这些酷炫的概念，直接阅读FAQ。</p>\n<p>Swap<br>ConsenSys的Swap协议也是非常类似的，但更专注于p2p的直接交易（而不是基于订单表），这里有一个白皮书，可以看看，这里有一个关于Swap协议的介绍。</p>\n<p>Bancor<br>代币的流动性是相对来说在加密币的生态中是一个非常大的问题。在用户间的交易需要满足买方和卖方两边的想法。</p>\n<p>Bancor是一个协议，可以让你的代币1）可以根据订单自动给予价格2）可以通过持有其它的代币作为抵押器来即时创造流动性。</p>\n<p>查看这里的白皮书</p>\n<p>Makerdao &amp; Dai<br>以太坊区块链管理的代币价值往往会有巨大的波动。这个特性在现实生活中则非常不好，比如你的目标是用来保值。</p>\n<p>Maker DAO是一个DAO来管理Dai稳定币。Dai现在还不存在，但他们已经发布了一个alpha的版本叫Sai来展示这门技术。</p>\n<p>这里是DAI的白皮书。</p>\n<p>Oraclize<br>如果我们要向智能合约中输入一些信息，比如纽约今天的天气，我也许需要实现一个去中心化的先知协议询问一批人（花费高且慢），但如果写一个服务以中心化的方式来提供信息，又违背了去中心化应用的理念。</p>\n<p>Oraclize尝试用以下方式来解决问题1）从一个外部数据源向你的智能合约发送数据。2）提供一个证明，数据来自某个数据源，且没有被修改过。由此如果你信任random.org，你可以使用Oraclize来提供一个随机数生成合约。</p>\n<p>他们的集成非常强大; 您可以获取URL，解析JSON和XPATH，查询Wolfram Alpha等。</p>\n<p>BTCRelay<br>BTCRelay作为比特币区块链交易的先知机制，这意味着你可以在以太坊上编写智能合约来响应比特币区块链上的某个交易，进行触发后续的操作。比如，你可以让人通过BTC为你的服务付费，使用BTCRelay在以太坊上校验付款成功后，继而在以太坊上提供对应的服务。</p>\n<p>Open Zeppelin &amp; zeppelinOS<br>Zeppelin Solutions是一个科技公司，在这个领域内正完成一些伟大，而且专业的事。它们实在做了太多事，太难一一说清了。</p>\n<p>他们管理了Open Zeppelin，一系列经过审查的，最佳的智能合约实践，你可以继承并应用于你自己的DApp中。你可以查看他们的github资源来学习更多。你应该读一下里面的每一个合约。</p>\n<p>他们坚持代码复用的理念，然后进一步创建了Zeppelin OS。你可以忽略OS，它不是传统意义上的操作系统的概念。zeppelinOS特性，工具和服务的集合，旨在提供稳固的开发人员体验，同时最大限度地提高智能合同安全性。</p>\n<p>zeppelinOS中的其中一部分是“zeppelinOS Kernel”。其实他们不是传统意义上的核心，而且是一组库。它们是通过库模型实现的可升级的智能合约，可以在出现安全问题时独立的进行更新。因为你在合约内包含的代码更少，部署也将花费更少的gas，而开发者也减少了代码的重复。</p>\n<p>zeppelinOS还有一些其他整齐的规划，比如调度程序（智能合约的异步执行，因为默认合同一般不会主动触发某个行为），市场级的协议和链下开发者体验工具。</p>\n<p>ENS - 以太坊的命名服务<br>ENS是一个去中心化的名称注册服务。并有一个描述性的项目名称。</p>\n<p>BAT 基础注意力代币 &amp; Brave浏览器<br>BAT尝试去中心化广告系统，通过监控大家的注意力，并在内容提供商，广告商和用户之间分发收益，切掉中间人。</p>\n<p>Brave和BAT由JS创始人Brendan Eich创建，同时他也是Mozilla的联合创始人。</p>\n<p>uPort<br>uPort在解决去中心化的身份识别问题。</p>\n<p>district0x<br>district0x是一个更高层级的去中心化的市场和社区。核心是通过一系列的智能合约来管理用户发布信息，搜索，过滤信息，在社区内维护信誉，管理支付等等。它可以用来建议如Ethlance和NameBazaar这样的市场。</p>\n<p>他们有非常棒的视觉设计。</p>\n<p>Steem<br>Steem是区块链上的reddit，它使用协议代币（STEEM）来激励这个社交社区的参与度。</p>\n<p>在这里查看白皮书。</p>\n<p>有一些关于Steemit块链如何启动以及支持组织如何运作的反应。</p>\n<p>参与者与领域内的玩家<br>ConsenSys<br>ConsenSys（有点像共识Consensus，但作为一个公司名称;它很聪明，巧妙的把u改成了s，但我一般念为“con-SEn-SIS”，避免读错）是一个“风险投资和产品工作室”。他们是一个（其实非常大）伞形组织，它赞助了一大堆项目和核心组件的开发。值得一提的是，它们资助了Truffle，Infura，MetaMask，Gnosis和uPort。</p>\n<p>Zeppelin Solutions<br>Zeppelin Solutions在上面我们有提到过，他也审查智能合约代码，提供咨询服务。他们的博客质量相当高。</p>\n<p>Protocol Labs<br>Protocol Labs是一群让人印象深刻的人，致力于IPFS，FileCoin，lip2p以及IPLD等其它项目的开发。</p>\n<p>区块链资本概况<br>Etienne Brunet有一篇关于代币，ICO和VC的概况文章。</p>\n<p>社区<br>你可以加入以太坊的社区。</p>\n<p>未来<br>未来展望。</p>\n"},{"title":"instrument 详解","date":"2016-05-15T15:26:11.000Z","thumbnail":"https://i0.hdslb.com/bfs/drawyoo/08a8f9111655a8a0c2f1dd05ea4f5291692fb08c.jpg","_content":"\n整理一些常用 instrument 工具。\n<!-- more -->\n\n[TOC]\n\n![](instrument.png)\n\n## 一、Blank\n\n\n\n## 二、Activity Monitor（活动监视器）\n\n\n\n## 三、Allocations（内存分配）\n\n![](https://upload-images.jianshu.io/upload_images/325854-060ac29a8dbf6c9c.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/700)\n\n\n### 1、程序员对内存关注的点\n\n* 正确使用\n\n  * 避免非法访问\n\n    > 即避免访问被释放掉的内存。release 后不能再 retain。\n\n  * 避免内存泄漏\n\n* 高效使用\n\n  * 降低内存峰值\n  * 处理内存警告\n  * Cache\n\n### 2、Regions（区域）\n\n以下内容参考自 [Stack Overflow](https://stackoverflow.com/questions/13437365/what-is-resident-and-dirty-memory-of-ios!)\n\n视频链接：[iOS内存管理及优化](https://www.imooc.com/video/11075)\n\n* Clean Memory：在闪存中有备份，能够再次读取。主要包括`system framework`、`binary executable of your app`、`memory mapped files`\n* Dirty Memory：所有非`Clean Memory`，**系统无法回收**。包括`Heap allocation`、`caches`、`decompressed images`（解压的图片）\n\n### 3、虚拟内存之间的关系\n\n* 虚拟内存层面：（逻辑内存）\n\n  >  virtual memory = clean memory + dirty memory.\n\n* 物理内存层面：\n\n  > resident memory= dirty memory+clean memory that loaded in physical memory\n\n* 总结：\n\n  > virtual memory == (clean memory + dirty memory) > resident memory >dirty memory\n\n```objective-c\n// clean memory\n- (IBAction)clickAction1{\n  char *buf = malloc(100*1024*1024); //100M 虚拟内存\n  NSLog(@\"%p\",buf);\n}\n\n// dirty memory\n- (IBAction)clickAction2{\n  char *buf = malloc(100*1024*1024); //100M 虚拟内存\n  NSLog(@\"%p\",buf);\n  for(int i=0; i < 3*1024*1024; ++i){ //分配3M 物理内存，剩余97M 虚拟内存\n    buf[i] = rand();\n  }\n}\n\n- (void)cleanOrDirtyMemory{\n  \n  \tNSString* str1 = [NSString stringWithString:@\"dirty\"];//dirty memory(堆上分配的内存都是 dirty的，不回收的话系统都会占用这个内存)\n    NSString* str2 = @\"w\";//存在只读数据段里面 \n    char *buf = malloc(100*1024*1024); //100M 虚拟内存 (clean，因为我们没有访问到)\n    for(int i=0; i < 3*1024*1024; ++i){ //分配3M 物理内存（dirty），剩余97M 虚拟内存(clean)\n    buf[i] = rand();//dirty\n  }\n}\n```\n\n\n\n### 4、VMTracker：\n\n> ```\n> 官方解释：Adds the Allocations and VM Tracker instruments toyour document. Use this template to monitor memory and object-allocationpatterns in your program \n> ```\n\n* Dirty Size：\n* Swapped Size：\n* Resident Size：\n\n### 5、参数：\n\n* 图形列（Graph）：\n\n  > 当指定类别的复选框被勾选时,instrument工具在跟踪面板里面显示特定类别的图形。 Instruments 应用通常给每个图形类别赋一个颜色。\n\n* 类别(Category)：\n\n  > 通常是一个 Core Foundation 对象、Objective-C 类、或者 malloc 出来的内存空间。\n\n* 净分配字节数(Persistent Bytes)：\n\n  > 当前已经分配内存但是仍然没有被释放的字节的总数。\n\n* 净分配数(#Persistent)：\n\n  > 当前已经分配内存但仍然没有被释放的对象或内存块的数量。\n\n* 临时分配数(#Transient)：\n\n  > 当前已经分配内存但仍然没有被释放的对象或内存块的数量。\n\n* 总分配字节数(Total Bytes)：\n\n  > 所有已经分配内存,而且包括已经被释放了的字节的总数。\n\n* 总分配数(#Total)：\n\n  > 所有当前已经分配内存,包括已经被释放了的对象或内存 块的总数。\n\n* 临时分配/全部内存分配(Transient/Total Bytes)：\n\n  > 当前和全部分配数的直方图。如上图所示当比例变化时,直方条会变颜色，Instruments 应用通常给它们标示不同的颜色来指出分配模式以便进行进一步的研究。\n\n## 四、Cocoa Layout\n\n## 五、Core Animation\n\n## 六、Core Data\n\n## 七、Counters（计数器）\n\n## 八、Energy Log\n\n## 九、File Activity\n\n## 十、Leaks（内存泄漏）\n\n## 十一、Metal System Trace\n\n## 十二、Network\n\n## 十三、SceneKit\n\n## 十四、System Trace（系统跟踪）\n\n## 十五、System Usage\n\n ios 模拟器暂不支持\n\n## 十六、Time profiler\n\n## 十七、Zombies（僵尸）\n\n\n\n","source":"_posts/2016/instrument-详解.md","raw":"---\ntitle: instrument 详解\ndate: 2016-05-15 23:26:11\ntags: instrument\ncategories: iOS-Dev\nthumbnail: https://i0.hdslb.com/bfs/drawyoo/08a8f9111655a8a0c2f1dd05ea4f5291692fb08c.jpg\n---\n\n整理一些常用 instrument 工具。\n<!-- more -->\n\n[TOC]\n\n![](instrument.png)\n\n## 一、Blank\n\n\n\n## 二、Activity Monitor（活动监视器）\n\n\n\n## 三、Allocations（内存分配）\n\n![](https://upload-images.jianshu.io/upload_images/325854-060ac29a8dbf6c9c.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/700)\n\n\n### 1、程序员对内存关注的点\n\n* 正确使用\n\n  * 避免非法访问\n\n    > 即避免访问被释放掉的内存。release 后不能再 retain。\n\n  * 避免内存泄漏\n\n* 高效使用\n\n  * 降低内存峰值\n  * 处理内存警告\n  * Cache\n\n### 2、Regions（区域）\n\n以下内容参考自 [Stack Overflow](https://stackoverflow.com/questions/13437365/what-is-resident-and-dirty-memory-of-ios!)\n\n视频链接：[iOS内存管理及优化](https://www.imooc.com/video/11075)\n\n* Clean Memory：在闪存中有备份，能够再次读取。主要包括`system framework`、`binary executable of your app`、`memory mapped files`\n* Dirty Memory：所有非`Clean Memory`，**系统无法回收**。包括`Heap allocation`、`caches`、`decompressed images`（解压的图片）\n\n### 3、虚拟内存之间的关系\n\n* 虚拟内存层面：（逻辑内存）\n\n  >  virtual memory = clean memory + dirty memory.\n\n* 物理内存层面：\n\n  > resident memory= dirty memory+clean memory that loaded in physical memory\n\n* 总结：\n\n  > virtual memory == (clean memory + dirty memory) > resident memory >dirty memory\n\n```objective-c\n// clean memory\n- (IBAction)clickAction1{\n  char *buf = malloc(100*1024*1024); //100M 虚拟内存\n  NSLog(@\"%p\",buf);\n}\n\n// dirty memory\n- (IBAction)clickAction2{\n  char *buf = malloc(100*1024*1024); //100M 虚拟内存\n  NSLog(@\"%p\",buf);\n  for(int i=0; i < 3*1024*1024; ++i){ //分配3M 物理内存，剩余97M 虚拟内存\n    buf[i] = rand();\n  }\n}\n\n- (void)cleanOrDirtyMemory{\n  \n  \tNSString* str1 = [NSString stringWithString:@\"dirty\"];//dirty memory(堆上分配的内存都是 dirty的，不回收的话系统都会占用这个内存)\n    NSString* str2 = @\"w\";//存在只读数据段里面 \n    char *buf = malloc(100*1024*1024); //100M 虚拟内存 (clean，因为我们没有访问到)\n    for(int i=0; i < 3*1024*1024; ++i){ //分配3M 物理内存（dirty），剩余97M 虚拟内存(clean)\n    buf[i] = rand();//dirty\n  }\n}\n```\n\n\n\n### 4、VMTracker：\n\n> ```\n> 官方解释：Adds the Allocations and VM Tracker instruments toyour document. Use this template to monitor memory and object-allocationpatterns in your program \n> ```\n\n* Dirty Size：\n* Swapped Size：\n* Resident Size：\n\n### 5、参数：\n\n* 图形列（Graph）：\n\n  > 当指定类别的复选框被勾选时,instrument工具在跟踪面板里面显示特定类别的图形。 Instruments 应用通常给每个图形类别赋一个颜色。\n\n* 类别(Category)：\n\n  > 通常是一个 Core Foundation 对象、Objective-C 类、或者 malloc 出来的内存空间。\n\n* 净分配字节数(Persistent Bytes)：\n\n  > 当前已经分配内存但是仍然没有被释放的字节的总数。\n\n* 净分配数(#Persistent)：\n\n  > 当前已经分配内存但仍然没有被释放的对象或内存块的数量。\n\n* 临时分配数(#Transient)：\n\n  > 当前已经分配内存但仍然没有被释放的对象或内存块的数量。\n\n* 总分配字节数(Total Bytes)：\n\n  > 所有已经分配内存,而且包括已经被释放了的字节的总数。\n\n* 总分配数(#Total)：\n\n  > 所有当前已经分配内存,包括已经被释放了的对象或内存 块的总数。\n\n* 临时分配/全部内存分配(Transient/Total Bytes)：\n\n  > 当前和全部分配数的直方图。如上图所示当比例变化时,直方条会变颜色，Instruments 应用通常给它们标示不同的颜色来指出分配模式以便进行进一步的研究。\n\n## 四、Cocoa Layout\n\n## 五、Core Animation\n\n## 六、Core Data\n\n## 七、Counters（计数器）\n\n## 八、Energy Log\n\n## 九、File Activity\n\n## 十、Leaks（内存泄漏）\n\n## 十一、Metal System Trace\n\n## 十二、Network\n\n## 十三、SceneKit\n\n## 十四、System Trace（系统跟踪）\n\n## 十五、System Usage\n\n ios 模拟器暂不支持\n\n## 十六、Time profiler\n\n## 十七、Zombies（僵尸）\n\n\n\n","slug":"2016/instrument-详解","published":1,"updated":"2024-01-02T16:09:25.081Z","_id":"clqwlt7st0001uc7tgvtehqje","comments":1,"layout":"post","photos":[],"link":"","content":"<p>整理一些常用 instrument 工具。</p>\n<span id=\"more\"></span>\n\n<p>[TOC]</p>\n<p><img src=\"/blog/instrument.png\"></p>\n<h2 id=\"一、Blank\"><a href=\"#一、Blank\" class=\"headerlink\" title=\"一、Blank\"></a>一、Blank</h2><h2 id=\"二、Activity-Monitor（活动监视器）\"><a href=\"#二、Activity-Monitor（活动监视器）\" class=\"headerlink\" title=\"二、Activity Monitor（活动监视器）\"></a>二、Activity Monitor（活动监视器）</h2><h2 id=\"三、Allocations（内存分配）\"><a href=\"#三、Allocations（内存分配）\" class=\"headerlink\" title=\"三、Allocations（内存分配）\"></a>三、Allocations（内存分配）</h2><p><img src=\"https://upload-images.jianshu.io/upload_images/325854-060ac29a8dbf6c9c.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/700\"></p>\n<h3 id=\"1、程序员对内存关注的点\"><a href=\"#1、程序员对内存关注的点\" class=\"headerlink\" title=\"1、程序员对内存关注的点\"></a>1、程序员对内存关注的点</h3><ul>\n<li><p>正确使用</p>\n<ul>\n<li><p>避免非法访问</p>\n<blockquote>\n<p>即避免访问被释放掉的内存。release 后不能再 retain。</p>\n</blockquote>\n</li>\n<li><p>避免内存泄漏</p>\n</li>\n</ul>\n</li>\n<li><p>高效使用</p>\n<ul>\n<li>降低内存峰值</li>\n<li>处理内存警告</li>\n<li>Cache</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2、Regions（区域）\"><a href=\"#2、Regions（区域）\" class=\"headerlink\" title=\"2、Regions（区域）\"></a>2、Regions（区域）</h3><p>以下内容参考自 <a href=\"https://stackoverflow.com/questions/13437365/what-is-resident-and-dirty-memory-of-ios!\">Stack Overflow</a></p>\n<p>视频链接：<a href=\"https://www.imooc.com/video/11075\">iOS内存管理及优化</a></p>\n<ul>\n<li>Clean Memory：在闪存中有备份，能够再次读取。主要包括<code>system framework</code>、<code>binary executable of your app</code>、<code>memory mapped files</code></li>\n<li>Dirty Memory：所有非<code>Clean Memory</code>，<strong>系统无法回收</strong>。包括<code>Heap allocation</code>、<code>caches</code>、<code>decompressed images</code>（解压的图片）</li>\n</ul>\n<h3 id=\"3、虚拟内存之间的关系\"><a href=\"#3、虚拟内存之间的关系\" class=\"headerlink\" title=\"3、虚拟内存之间的关系\"></a>3、虚拟内存之间的关系</h3><ul>\n<li><p>虚拟内存层面：（逻辑内存）</p>\n<blockquote>\n<p> virtual memory &#x3D; clean memory + dirty memory.</p>\n</blockquote>\n</li>\n<li><p>物理内存层面：</p>\n<blockquote>\n<p>resident memory&#x3D; dirty memory+clean memory that loaded in physical memory</p>\n</blockquote>\n</li>\n<li><p>总结：</p>\n<blockquote>\n<p>virtual memory &#x3D;&#x3D; (clean memory + dirty memory) &gt; resident memory &gt;dirty memory</p>\n</blockquote>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// clean memory</span><br><span class=\"line\">- (IBAction)clickAction1&#123;</span><br><span class=\"line\">  char *buf = malloc(100*1024*1024); //100M 虚拟内存</span><br><span class=\"line\">  NSLog(@&quot;%p&quot;,buf);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// dirty memory</span><br><span class=\"line\">- (IBAction)clickAction2&#123;</span><br><span class=\"line\">  char *buf = malloc(100*1024*1024); //100M 虚拟内存</span><br><span class=\"line\">  NSLog(@&quot;%p&quot;,buf);</span><br><span class=\"line\">  for(int i=0; i &lt; 3*1024*1024; ++i)&#123; //分配3M 物理内存，剩余97M 虚拟内存</span><br><span class=\"line\">    buf[i] = rand();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (void)cleanOrDirtyMemory&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  \tNSString* str1 = [NSString stringWithString:@&quot;dirty&quot;];//dirty memory(堆上分配的内存都是 dirty的，不回收的话系统都会占用这个内存)</span><br><span class=\"line\">    NSString* str2 = @&quot;w&quot;;//存在只读数据段里面 </span><br><span class=\"line\">    char *buf = malloc(100*1024*1024); //100M 虚拟内存 (clean，因为我们没有访问到)</span><br><span class=\"line\">    for(int i=0; i &lt; 3*1024*1024; ++i)&#123; //分配3M 物理内存（dirty），剩余97M 虚拟内存(clean)</span><br><span class=\"line\">    buf[i] = rand();//dirty</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"4、VMTracker：\"><a href=\"#4、VMTracker：\" class=\"headerlink\" title=\"4、VMTracker：\"></a>4、VMTracker：</h3><blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">官方解释：Adds the Allocations and VM Tracker instruments toyour document. Use this template to monitor memory and object-allocationpatterns in your program </span><br></pre></td></tr></table></figure>\n</blockquote>\n<ul>\n<li>Dirty Size：</li>\n<li>Swapped Size：</li>\n<li>Resident Size：</li>\n</ul>\n<h3 id=\"5、参数：\"><a href=\"#5、参数：\" class=\"headerlink\" title=\"5、参数：\"></a>5、参数：</h3><ul>\n<li><p>图形列（Graph）：</p>\n<blockquote>\n<p>当指定类别的复选框被勾选时,instrument工具在跟踪面板里面显示特定类别的图形。 Instruments 应用通常给每个图形类别赋一个颜色。</p>\n</blockquote>\n</li>\n<li><p>类别(Category)：</p>\n<blockquote>\n<p>通常是一个 Core Foundation 对象、Objective-C 类、或者 malloc 出来的内存空间。</p>\n</blockquote>\n</li>\n<li><p>净分配字节数(Persistent Bytes)：</p>\n<blockquote>\n<p>当前已经分配内存但是仍然没有被释放的字节的总数。</p>\n</blockquote>\n</li>\n<li><p>净分配数(#Persistent)：</p>\n<blockquote>\n<p>当前已经分配内存但仍然没有被释放的对象或内存块的数量。</p>\n</blockquote>\n</li>\n<li><p>临时分配数(#Transient)：</p>\n<blockquote>\n<p>当前已经分配内存但仍然没有被释放的对象或内存块的数量。</p>\n</blockquote>\n</li>\n<li><p>总分配字节数(Total Bytes)：</p>\n<blockquote>\n<p>所有已经分配内存,而且包括已经被释放了的字节的总数。</p>\n</blockquote>\n</li>\n<li><p>总分配数(#Total)：</p>\n<blockquote>\n<p>所有当前已经分配内存,包括已经被释放了的对象或内存 块的总数。</p>\n</blockquote>\n</li>\n<li><p>临时分配&#x2F;全部内存分配(Transient&#x2F;Total Bytes)：</p>\n<blockquote>\n<p>当前和全部分配数的直方图。如上图所示当比例变化时,直方条会变颜色，Instruments 应用通常给它们标示不同的颜色来指出分配模式以便进行进一步的研究。</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"四、Cocoa-Layout\"><a href=\"#四、Cocoa-Layout\" class=\"headerlink\" title=\"四、Cocoa Layout\"></a>四、Cocoa Layout</h2><h2 id=\"五、Core-Animation\"><a href=\"#五、Core-Animation\" class=\"headerlink\" title=\"五、Core Animation\"></a>五、Core Animation</h2><h2 id=\"六、Core-Data\"><a href=\"#六、Core-Data\" class=\"headerlink\" title=\"六、Core Data\"></a>六、Core Data</h2><h2 id=\"七、Counters（计数器）\"><a href=\"#七、Counters（计数器）\" class=\"headerlink\" title=\"七、Counters（计数器）\"></a>七、Counters（计数器）</h2><h2 id=\"八、Energy-Log\"><a href=\"#八、Energy-Log\" class=\"headerlink\" title=\"八、Energy Log\"></a>八、Energy Log</h2><h2 id=\"九、File-Activity\"><a href=\"#九、File-Activity\" class=\"headerlink\" title=\"九、File Activity\"></a>九、File Activity</h2><h2 id=\"十、Leaks（内存泄漏）\"><a href=\"#十、Leaks（内存泄漏）\" class=\"headerlink\" title=\"十、Leaks（内存泄漏）\"></a>十、Leaks（内存泄漏）</h2><h2 id=\"十一、Metal-System-Trace\"><a href=\"#十一、Metal-System-Trace\" class=\"headerlink\" title=\"十一、Metal System Trace\"></a>十一、Metal System Trace</h2><h2 id=\"十二、Network\"><a href=\"#十二、Network\" class=\"headerlink\" title=\"十二、Network\"></a>十二、Network</h2><h2 id=\"十三、SceneKit\"><a href=\"#十三、SceneKit\" class=\"headerlink\" title=\"十三、SceneKit\"></a>十三、SceneKit</h2><h2 id=\"十四、System-Trace（系统跟踪）\"><a href=\"#十四、System-Trace（系统跟踪）\" class=\"headerlink\" title=\"十四、System Trace（系统跟踪）\"></a>十四、System Trace（系统跟踪）</h2><h2 id=\"十五、System-Usage\"><a href=\"#十五、System-Usage\" class=\"headerlink\" title=\"十五、System Usage\"></a>十五、System Usage</h2><p> ios 模拟器暂不支持</p>\n<h2 id=\"十六、Time-profiler\"><a href=\"#十六、Time-profiler\" class=\"headerlink\" title=\"十六、Time profiler\"></a>十六、Time profiler</h2><h2 id=\"十七、Zombies（僵尸）\"><a href=\"#十七、Zombies（僵尸）\" class=\"headerlink\" title=\"十七、Zombies（僵尸）\"></a>十七、Zombies（僵尸）</h2>","site":{"data":{"gallery":{"图片名称":{"full_link":"http://miccall.tech/img/twx.jpg","thumb_link":"http://miccall.tech/img/twx.jpg","descr":"图片描述"}},"links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}},"_links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}}}},"excerpt":"<p>整理一些常用 instrument 工具。</p>","more":"<p>[TOC]</p>\n<p><img src=\"/blog/instrument.png\"></p>\n<h2 id=\"一、Blank\"><a href=\"#一、Blank\" class=\"headerlink\" title=\"一、Blank\"></a>一、Blank</h2><h2 id=\"二、Activity-Monitor（活动监视器）\"><a href=\"#二、Activity-Monitor（活动监视器）\" class=\"headerlink\" title=\"二、Activity Monitor（活动监视器）\"></a>二、Activity Monitor（活动监视器）</h2><h2 id=\"三、Allocations（内存分配）\"><a href=\"#三、Allocations（内存分配）\" class=\"headerlink\" title=\"三、Allocations（内存分配）\"></a>三、Allocations（内存分配）</h2><p><img src=\"https://upload-images.jianshu.io/upload_images/325854-060ac29a8dbf6c9c.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/700\"></p>\n<h3 id=\"1、程序员对内存关注的点\"><a href=\"#1、程序员对内存关注的点\" class=\"headerlink\" title=\"1、程序员对内存关注的点\"></a>1、程序员对内存关注的点</h3><ul>\n<li><p>正确使用</p>\n<ul>\n<li><p>避免非法访问</p>\n<blockquote>\n<p>即避免访问被释放掉的内存。release 后不能再 retain。</p>\n</blockquote>\n</li>\n<li><p>避免内存泄漏</p>\n</li>\n</ul>\n</li>\n<li><p>高效使用</p>\n<ul>\n<li>降低内存峰值</li>\n<li>处理内存警告</li>\n<li>Cache</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2、Regions（区域）\"><a href=\"#2、Regions（区域）\" class=\"headerlink\" title=\"2、Regions（区域）\"></a>2、Regions（区域）</h3><p>以下内容参考自 <a href=\"https://stackoverflow.com/questions/13437365/what-is-resident-and-dirty-memory-of-ios!\">Stack Overflow</a></p>\n<p>视频链接：<a href=\"https://www.imooc.com/video/11075\">iOS内存管理及优化</a></p>\n<ul>\n<li>Clean Memory：在闪存中有备份，能够再次读取。主要包括<code>system framework</code>、<code>binary executable of your app</code>、<code>memory mapped files</code></li>\n<li>Dirty Memory：所有非<code>Clean Memory</code>，<strong>系统无法回收</strong>。包括<code>Heap allocation</code>、<code>caches</code>、<code>decompressed images</code>（解压的图片）</li>\n</ul>\n<h3 id=\"3、虚拟内存之间的关系\"><a href=\"#3、虚拟内存之间的关系\" class=\"headerlink\" title=\"3、虚拟内存之间的关系\"></a>3、虚拟内存之间的关系</h3><ul>\n<li><p>虚拟内存层面：（逻辑内存）</p>\n<blockquote>\n<p> virtual memory &#x3D; clean memory + dirty memory.</p>\n</blockquote>\n</li>\n<li><p>物理内存层面：</p>\n<blockquote>\n<p>resident memory&#x3D; dirty memory+clean memory that loaded in physical memory</p>\n</blockquote>\n</li>\n<li><p>总结：</p>\n<blockquote>\n<p>virtual memory &#x3D;&#x3D; (clean memory + dirty memory) &gt; resident memory &gt;dirty memory</p>\n</blockquote>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// clean memory</span><br><span class=\"line\">- (IBAction)clickAction1&#123;</span><br><span class=\"line\">  char *buf = malloc(100*1024*1024); //100M 虚拟内存</span><br><span class=\"line\">  NSLog(@&quot;%p&quot;,buf);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// dirty memory</span><br><span class=\"line\">- (IBAction)clickAction2&#123;</span><br><span class=\"line\">  char *buf = malloc(100*1024*1024); //100M 虚拟内存</span><br><span class=\"line\">  NSLog(@&quot;%p&quot;,buf);</span><br><span class=\"line\">  for(int i=0; i &lt; 3*1024*1024; ++i)&#123; //分配3M 物理内存，剩余97M 虚拟内存</span><br><span class=\"line\">    buf[i] = rand();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (void)cleanOrDirtyMemory&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  \tNSString* str1 = [NSString stringWithString:@&quot;dirty&quot;];//dirty memory(堆上分配的内存都是 dirty的，不回收的话系统都会占用这个内存)</span><br><span class=\"line\">    NSString* str2 = @&quot;w&quot;;//存在只读数据段里面 </span><br><span class=\"line\">    char *buf = malloc(100*1024*1024); //100M 虚拟内存 (clean，因为我们没有访问到)</span><br><span class=\"line\">    for(int i=0; i &lt; 3*1024*1024; ++i)&#123; //分配3M 物理内存（dirty），剩余97M 虚拟内存(clean)</span><br><span class=\"line\">    buf[i] = rand();//dirty</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"4、VMTracker：\"><a href=\"#4、VMTracker：\" class=\"headerlink\" title=\"4、VMTracker：\"></a>4、VMTracker：</h3><blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">官方解释：Adds the Allocations and VM Tracker instruments toyour document. Use this template to monitor memory and object-allocationpatterns in your program </span><br></pre></td></tr></table></figure>\n</blockquote>\n<ul>\n<li>Dirty Size：</li>\n<li>Swapped Size：</li>\n<li>Resident Size：</li>\n</ul>\n<h3 id=\"5、参数：\"><a href=\"#5、参数：\" class=\"headerlink\" title=\"5、参数：\"></a>5、参数：</h3><ul>\n<li><p>图形列（Graph）：</p>\n<blockquote>\n<p>当指定类别的复选框被勾选时,instrument工具在跟踪面板里面显示特定类别的图形。 Instruments 应用通常给每个图形类别赋一个颜色。</p>\n</blockquote>\n</li>\n<li><p>类别(Category)：</p>\n<blockquote>\n<p>通常是一个 Core Foundation 对象、Objective-C 类、或者 malloc 出来的内存空间。</p>\n</blockquote>\n</li>\n<li><p>净分配字节数(Persistent Bytes)：</p>\n<blockquote>\n<p>当前已经分配内存但是仍然没有被释放的字节的总数。</p>\n</blockquote>\n</li>\n<li><p>净分配数(#Persistent)：</p>\n<blockquote>\n<p>当前已经分配内存但仍然没有被释放的对象或内存块的数量。</p>\n</blockquote>\n</li>\n<li><p>临时分配数(#Transient)：</p>\n<blockquote>\n<p>当前已经分配内存但仍然没有被释放的对象或内存块的数量。</p>\n</blockquote>\n</li>\n<li><p>总分配字节数(Total Bytes)：</p>\n<blockquote>\n<p>所有已经分配内存,而且包括已经被释放了的字节的总数。</p>\n</blockquote>\n</li>\n<li><p>总分配数(#Total)：</p>\n<blockquote>\n<p>所有当前已经分配内存,包括已经被释放了的对象或内存 块的总数。</p>\n</blockquote>\n</li>\n<li><p>临时分配&#x2F;全部内存分配(Transient&#x2F;Total Bytes)：</p>\n<blockquote>\n<p>当前和全部分配数的直方图。如上图所示当比例变化时,直方条会变颜色，Instruments 应用通常给它们标示不同的颜色来指出分配模式以便进行进一步的研究。</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"四、Cocoa-Layout\"><a href=\"#四、Cocoa-Layout\" class=\"headerlink\" title=\"四、Cocoa Layout\"></a>四、Cocoa Layout</h2><h2 id=\"五、Core-Animation\"><a href=\"#五、Core-Animation\" class=\"headerlink\" title=\"五、Core Animation\"></a>五、Core Animation</h2><h2 id=\"六、Core-Data\"><a href=\"#六、Core-Data\" class=\"headerlink\" title=\"六、Core Data\"></a>六、Core Data</h2><h2 id=\"七、Counters（计数器）\"><a href=\"#七、Counters（计数器）\" class=\"headerlink\" title=\"七、Counters（计数器）\"></a>七、Counters（计数器）</h2><h2 id=\"八、Energy-Log\"><a href=\"#八、Energy-Log\" class=\"headerlink\" title=\"八、Energy Log\"></a>八、Energy Log</h2><h2 id=\"九、File-Activity\"><a href=\"#九、File-Activity\" class=\"headerlink\" title=\"九、File Activity\"></a>九、File Activity</h2><h2 id=\"十、Leaks（内存泄漏）\"><a href=\"#十、Leaks（内存泄漏）\" class=\"headerlink\" title=\"十、Leaks（内存泄漏）\"></a>十、Leaks（内存泄漏）</h2><h2 id=\"十一、Metal-System-Trace\"><a href=\"#十一、Metal-System-Trace\" class=\"headerlink\" title=\"十一、Metal System Trace\"></a>十一、Metal System Trace</h2><h2 id=\"十二、Network\"><a href=\"#十二、Network\" class=\"headerlink\" title=\"十二、Network\"></a>十二、Network</h2><h2 id=\"十三、SceneKit\"><a href=\"#十三、SceneKit\" class=\"headerlink\" title=\"十三、SceneKit\"></a>十三、SceneKit</h2><h2 id=\"十四、System-Trace（系统跟踪）\"><a href=\"#十四、System-Trace（系统跟踪）\" class=\"headerlink\" title=\"十四、System Trace（系统跟踪）\"></a>十四、System Trace（系统跟踪）</h2><h2 id=\"十五、System-Usage\"><a href=\"#十五、System-Usage\" class=\"headerlink\" title=\"十五、System Usage\"></a>十五、System Usage</h2><p> ios 模拟器暂不支持</p>\n<h2 id=\"十六、Time-profiler\"><a href=\"#十六、Time-profiler\" class=\"headerlink\" title=\"十六、Time profiler\"></a>十六、Time profiler</h2><h2 id=\"十七、Zombies（僵尸）\"><a href=\"#十七、Zombies（僵尸）\" class=\"headerlink\" title=\"十七、Zombies（僵尸）\"></a>十七、Zombies（僵尸）</h2>"},{"title":"从微信跳一跳学习逆向开发iOS","date":"2017-12-29T09:05:40.000Z","thumbnail":"https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1515671098503&di=650c7f02a784008ee52200ccb1115324&imgtype=0&src=http%3A%2F%2Ff3.topitme.com%2F3%2Fb9%2F57%2F1132270460a9c57b93o.jpg","_content":"\n这几天出了个小程序特别火，借此机会学习下逆向开发。\n<!-- more -->\n\n[TOC]\n\n## 一、libimobiledevice与 adb\n\nlibimobiledevice：逆向出 iOS 与 Mac Windows 接口的通讯协议\n\nadb：安卓下调试工具\n\n\n\n## 二、安装libimobiledevice\n\n```sh\n$ brew update\n$ brew install libimobiledevice\n# libimobiledevice中并不包含ipa的安装命令，所以还需要安装\n$ brew install ideviceinstaller\n```\n\n\n\n","source":"_posts/2017/从微信跳一跳学习逆向开发iOS.md","raw":"---\ntitle: 从微信跳一跳学习逆向开发iOS\ndate: 2017-12-29 17:05:40\ncategories: iOS-Dev\ntags: libimobiledevice\nthumbnail: \"https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1515671098503&di=650c7f02a784008ee52200ccb1115324&imgtype=0&src=http%3A%2F%2Ff3.topitme.com%2F3%2Fb9%2F57%2F1132270460a9c57b93o.jpg\"\n---\n\n这几天出了个小程序特别火，借此机会学习下逆向开发。\n<!-- more -->\n\n[TOC]\n\n## 一、libimobiledevice与 adb\n\nlibimobiledevice：逆向出 iOS 与 Mac Windows 接口的通讯协议\n\nadb：安卓下调试工具\n\n\n\n## 二、安装libimobiledevice\n\n```sh\n$ brew update\n$ brew install libimobiledevice\n# libimobiledevice中并不包含ipa的安装命令，所以还需要安装\n$ brew install ideviceinstaller\n```\n\n\n\n","slug":"2017/从微信跳一跳学习逆向开发iOS","published":1,"updated":"2024-01-02T16:09:25.083Z","_id":"clqwlt7su0002uc7te8bpdp6a","comments":1,"layout":"post","photos":[],"link":"","content":"<p>这几天出了个小程序特别火，借此机会学习下逆向开发。</p>\n<span id=\"more\"></span>\n\n<p>[TOC]</p>\n<h2 id=\"一、libimobiledevice与-adb\"><a href=\"#一、libimobiledevice与-adb\" class=\"headerlink\" title=\"一、libimobiledevice与 adb\"></a>一、libimobiledevice与 adb</h2><p>libimobiledevice：逆向出 iOS 与 Mac Windows 接口的通讯协议</p>\n<p>adb：安卓下调试工具</p>\n<h2 id=\"二、安装libimobiledevice\"><a href=\"#二、安装libimobiledevice\" class=\"headerlink\" title=\"二、安装libimobiledevice\"></a>二、安装libimobiledevice</h2><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brew update</span><br><span class=\"line\">$ brew install libimobiledevice</span><br><span class=\"line\"><span class=\"comment\"># libimobiledevice中并不包含ipa的安装命令，所以还需要安装</span></span><br><span class=\"line\">$ brew install ideviceinstaller</span><br></pre></td></tr></table></figure>\n\n\n\n","site":{"data":{"gallery":{"图片名称":{"full_link":"http://miccall.tech/img/twx.jpg","thumb_link":"http://miccall.tech/img/twx.jpg","descr":"图片描述"}},"links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}},"_links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}}}},"excerpt":"<p>这几天出了个小程序特别火，借此机会学习下逆向开发。</p>","more":"<p>[TOC]</p>\n<h2 id=\"一、libimobiledevice与-adb\"><a href=\"#一、libimobiledevice与-adb\" class=\"headerlink\" title=\"一、libimobiledevice与 adb\"></a>一、libimobiledevice与 adb</h2><p>libimobiledevice：逆向出 iOS 与 Mac Windows 接口的通讯协议</p>\n<p>adb：安卓下调试工具</p>\n<h2 id=\"二、安装libimobiledevice\"><a href=\"#二、安装libimobiledevice\" class=\"headerlink\" title=\"二、安装libimobiledevice\"></a>二、安装libimobiledevice</h2><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brew update</span><br><span class=\"line\">$ brew install libimobiledevice</span><br><span class=\"line\"><span class=\"comment\"># libimobiledevice中并不包含ipa的安装命令，所以还需要安装</span></span><br><span class=\"line\">$ brew install ideviceinstaller</span><br></pre></td></tr></table></figure>"},{"title":"ios HTTP请求","date":"2014-05-16T12:56:40.000Z","thumbnail":"https://ss1.bdstatic.com/70cFvXSh_Q1YnxGkpoWK1HF6hhy/it/u=3584732535,1447982096&fm=27&gp=0.jpg","_content":"\niOS9引入了新特性 [App Transport Security (ATS)](https://developer.apple.com/library/prerelease/ios/releasenotes/General/WhatsNewIniOS/Articles/iOS9.html#//apple_ref/doc/uid/TP40016198-DontLinkElementID_13)，所以需要在 Info.plist加入NSAppTransportSecurity 字典的 AllowsArbitraryLoads key的值为 BOOL。\n\n<!-- more -->\n\n## POST 请求\n\n早期还有NSURLConnection方法，iOS 9 以后被淘汰了，有几个代理方法不能用了（同步请求，异步请求）\n\n\n\n原生方法：\n\n```objc\n    NSURL* url = [NSURL URLWithString:HomeUrl]; //url\n    NSURLRequest* request = [NSURLRequest requestWithURL:url];//请求\n    NSURLSession* session = [NSURLSession sharedSession]; //session\n    NSURLSessionDataTask* task = [session dataTaskWithRequest:request completionHandler:^(NSData * _Nullable data, NSURLResponse * _Nullable response, NSError * _Nullable error) {\n        if(error){\n            \n            NSLog(@\"请求失败\");\n        }\n        else{\n            \n            NSLog(@\"请求成功\");\n            NSString *receiveStr = [[NSString alloc]initWithData:data encoding:NSUTF8StringEncoding];\n            \n            NSData * jsonData = [receiveStr dataUsingEncoding:NSUTF8StringEncoding];\n            \n            NSDictionary *jsonDict = [NSJSONSerialization JSONObjectWithData:jsonData options:NSJSONReadingMutableLeaves error:nil];\n        }\n    }];\n    [task resume];\n```\n\n\n\n\n\n\n\n","source":"_posts/2014/ios-HTTP请求.md","raw":"---\ntitle: ios HTTP请求\ndate: 2014-05-16 20:56:40\ntags: 网络请求\ncategories: iOS-Dev\nthumbnail: https://ss1.bdstatic.com/70cFvXSh_Q1YnxGkpoWK1HF6hhy/it/u=3584732535,1447982096&fm=27&gp=0.jpg\n---\n\niOS9引入了新特性 [App Transport Security (ATS)](https://developer.apple.com/library/prerelease/ios/releasenotes/General/WhatsNewIniOS/Articles/iOS9.html#//apple_ref/doc/uid/TP40016198-DontLinkElementID_13)，所以需要在 Info.plist加入NSAppTransportSecurity 字典的 AllowsArbitraryLoads key的值为 BOOL。\n\n<!-- more -->\n\n## POST 请求\n\n早期还有NSURLConnection方法，iOS 9 以后被淘汰了，有几个代理方法不能用了（同步请求，异步请求）\n\n\n\n原生方法：\n\n```objc\n    NSURL* url = [NSURL URLWithString:HomeUrl]; //url\n    NSURLRequest* request = [NSURLRequest requestWithURL:url];//请求\n    NSURLSession* session = [NSURLSession sharedSession]; //session\n    NSURLSessionDataTask* task = [session dataTaskWithRequest:request completionHandler:^(NSData * _Nullable data, NSURLResponse * _Nullable response, NSError * _Nullable error) {\n        if(error){\n            \n            NSLog(@\"请求失败\");\n        }\n        else{\n            \n            NSLog(@\"请求成功\");\n            NSString *receiveStr = [[NSString alloc]initWithData:data encoding:NSUTF8StringEncoding];\n            \n            NSData * jsonData = [receiveStr dataUsingEncoding:NSUTF8StringEncoding];\n            \n            NSDictionary *jsonDict = [NSJSONSerialization JSONObjectWithData:jsonData options:NSJSONReadingMutableLeaves error:nil];\n        }\n    }];\n    [task resume];\n```\n\n\n\n\n\n\n\n","slug":"2014/ios-HTTP请求","published":1,"updated":"2024-01-02T16:09:25.079Z","_id":"clqwlt7wl000buc7t67yl86gk","comments":1,"layout":"post","photos":[],"link":"","content":"<p>iOS9引入了新特性 <a href=\"https://developer.apple.com/library/prerelease/ios/releasenotes/General/WhatsNewIniOS/Articles/iOS9.html#//apple_ref/doc/uid/TP40016198-DontLinkElementID_13\">App Transport Security (ATS)</a>，所以需要在 Info.plist加入NSAppTransportSecurity 字典的 AllowsArbitraryLoads key的值为 BOOL。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"POST-请求\"><a href=\"#POST-请求\" class=\"headerlink\" title=\"POST 请求\"></a>POST 请求</h2><p>早期还有NSURLConnection方法，iOS 9 以后被淘汰了，有几个代理方法不能用了（同步请求，异步请求）</p>\n<p>原生方法：</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">NSURL</span>* url = [<span class=\"built_in\">NSURL</span> URLWithString:HomeUrl]; <span class=\"comment\">//url</span></span><br><span class=\"line\"><span class=\"built_in\">NSURLRequest</span>* request = [<span class=\"built_in\">NSURLRequest</span> requestWithURL:url];<span class=\"comment\">//请求</span></span><br><span class=\"line\"><span class=\"built_in\">NSURLSession</span>* session = [<span class=\"built_in\">NSURLSession</span> sharedSession]; <span class=\"comment\">//session</span></span><br><span class=\"line\"><span class=\"built_in\">NSURLSessionDataTask</span>* task = [session dataTaskWithRequest:request completionHandler:^(<span class=\"built_in\">NSData</span> * _Nullable data, <span class=\"built_in\">NSURLResponse</span> * _Nullable response, <span class=\"built_in\">NSError</span> * _Nullable error) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(error)&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"built_in\">NSLog</span>(<span class=\"string\">@&quot;请求失败&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"built_in\">NSLog</span>(<span class=\"string\">@&quot;请求成功&quot;</span>);</span><br><span class=\"line\">        <span class=\"built_in\">NSString</span> *receiveStr = [[<span class=\"built_in\">NSString</span> alloc]initWithData:data encoding:<span class=\"built_in\">NSUTF8StringEncoding</span>];</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"built_in\">NSData</span> * jsonData = [receiveStr dataUsingEncoding:<span class=\"built_in\">NSUTF8StringEncoding</span>];</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"built_in\">NSDictionary</span> *jsonDict = [<span class=\"built_in\">NSJSONSerialization</span> JSONObjectWithData:jsonData options:<span class=\"built_in\">NSJSONReadingMutableLeaves</span> error:<span class=\"literal\">nil</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;];</span><br><span class=\"line\">[task resume];</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n","site":{"data":{"gallery":{"图片名称":{"full_link":"http://miccall.tech/img/twx.jpg","thumb_link":"http://miccall.tech/img/twx.jpg","descr":"图片描述"}},"links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}},"_links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}}}},"excerpt":"<p>iOS9引入了新特性 <a href=\"https://developer.apple.com/library/prerelease/ios/releasenotes/General/WhatsNewIniOS/Articles/iOS9.html#//apple_ref/doc/uid/TP40016198-DontLinkElementID_13\">App Transport Security (ATS)</a>，所以需要在 Info.plist加入NSAppTransportSecurity 字典的 AllowsArbitraryLoads key的值为 BOOL。</p>","more":"<h2 id=\"POST-请求\"><a href=\"#POST-请求\" class=\"headerlink\" title=\"POST 请求\"></a>POST 请求</h2><p>早期还有NSURLConnection方法，iOS 9 以后被淘汰了，有几个代理方法不能用了（同步请求，异步请求）</p>\n<p>原生方法：</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">NSURL</span>* url = [<span class=\"built_in\">NSURL</span> URLWithString:HomeUrl]; <span class=\"comment\">//url</span></span><br><span class=\"line\"><span class=\"built_in\">NSURLRequest</span>* request = [<span class=\"built_in\">NSURLRequest</span> requestWithURL:url];<span class=\"comment\">//请求</span></span><br><span class=\"line\"><span class=\"built_in\">NSURLSession</span>* session = [<span class=\"built_in\">NSURLSession</span> sharedSession]; <span class=\"comment\">//session</span></span><br><span class=\"line\"><span class=\"built_in\">NSURLSessionDataTask</span>* task = [session dataTaskWithRequest:request completionHandler:^(<span class=\"built_in\">NSData</span> * _Nullable data, <span class=\"built_in\">NSURLResponse</span> * _Nullable response, <span class=\"built_in\">NSError</span> * _Nullable error) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(error)&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"built_in\">NSLog</span>(<span class=\"string\">@&quot;请求失败&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"built_in\">NSLog</span>(<span class=\"string\">@&quot;请求成功&quot;</span>);</span><br><span class=\"line\">        <span class=\"built_in\">NSString</span> *receiveStr = [[<span class=\"built_in\">NSString</span> alloc]initWithData:data encoding:<span class=\"built_in\">NSUTF8StringEncoding</span>];</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"built_in\">NSData</span> * jsonData = [receiveStr dataUsingEncoding:<span class=\"built_in\">NSUTF8StringEncoding</span>];</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"built_in\">NSDictionary</span> *jsonDict = [<span class=\"built_in\">NSJSONSerialization</span> JSONObjectWithData:jsonData options:<span class=\"built_in\">NSJSONReadingMutableLeaves</span> error:<span class=\"literal\">nil</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;];</span><br><span class=\"line\">[task resume];</span><br></pre></td></tr></table></figure>"},{"title":"Http - Web 基础概述","date":"2013-05-13T08:58:34.000Z","thumbnail":"https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1515845822875&di=5c5ed7e816115333fa10af3a5d2e12dd&imgtype=0&src=http%3A%2F%2Fattach.bbs.miui.com%2Fforum%2F201708%2F02%2F162015g8shss8wbwb8w193.jpg","_content":"\n唔。。。我真的是太菜了\n<!-- more -->\n[TOC]\n\n# 一、HTTP报文\n\n![](https://images0.cnblogs.com/blog2015/776887/201507/241034588189239.png)\n\nHttp 报文分为请求报文（request）和响应报文（response），主要分三部分：\n\n- ## 1、起始行\n\n  - 请求行：**包含了一个方法和 URL（路径） 以及 HTTP 版本**\n\n  - 响应行：包含了 HTTP 版本，状态码和原因短语\n\n  - 方法：\n\n    > 分为常用的7种 HTTP 方法和对 HTTP 规范的扩展方法。\n\n  - 状态码：\n\n    > 状态码位于响应的起始行中；\n    >\n    > 状态码数在每条响应报文的起始行中返回的；\n\n  - 原因短语：\n\n    > 通常与状态码成对出现，如200 OK（描述操作状态的、文本的形式的原因短语）\n\n  - 版本号：\n\n    > **注意，版本号不会被当做小数处理，2.22要比2.3要大** \n\n- ## 2、首部（请求头、响应头、head）\n\n  - 通用首部\n  - 请求首部\n    - Accept 首部\n    - 条件请求首部\n    - 安全请求首部\n    - 代理请求首部\n  - 响应首部\n    - 协商首部\n    - 安全响应首部\n  - 实体首部\n    - 内容首部（Content）\n    - 实体缓存首部\n\n- ## 3、主体（请求体、响应体、body）\n\n![响应报文首部](响应报文首部.png)\n\n# 二、URL \n\n##1、URL 语法\n\n<scheme>://<user>:<password>@<host>:<port>/<path>;<params1>;<params2>?<query>&<query2>#<flag>\n\n方案://用户名:密码@主机:端口/路径;参数1;参数2？查询字符串#片段\n\n> URI方案：http（80）、ftp（21）、https（443）、mailto、rtsp、rtmp（1935）、file、telnet（23）、ssh（22），以上为常用的，远不止这些\n\n> rtsp：Real Time Streaming Protocol：实时流传输协议\n>\n> rtmp：Real Time Message Protocol ：实时信息传输协议\n\n## 2、一些常见的概念\n\n### （1） URI \n\nURI（统一资源标识符）\n\n* URL（统一资源定位符）\n* URN（统一资源名）\n\n### （1）RFC\n\n​         Request For Comments（RFC），是一系列以编号排定的文件。说白了就是 Internet标准定制文件。\n\n​        一个RFC文件在成为官方标准前一般至少要经历4个阶段【RFC2026】：因特网草案、建议标准、草案标准、因特网标准。\n\n### （3）事物\n\n一个 HTTP 事物有一条请求命令和一条响应结果组成。\n\n事物 = 请求 + 响应\n\n### （4）TCP\n\nTCP：传输控制协议，是把东西从一个地方传到另一个地方用的。***转发 HTTP 报文***。\n\nTCP 客户端与服务器是通过套接字（socket）通信的。\n\nHTTP 是**应用**层的，TCP 是**传输**层的。一个侧重应用，一个侧重传输。\n\n作用：\n\n* 无差错的数据传输\n* 按序传输（数据总是按照发送的顺序到达目的地）\n* 未分段的数据流（可以在任意时刻以任意尺寸发送数据）（尺寸就是 Content-Length）\n\n### （5）隧道（tunnel）\n\n定义：对 HTTP 报文进行**盲转**发的特殊代理。（ 之所以敢盲转还是不因为加了一层 SSL）\n\n### （6）SSL\n\nSSL（安全套接字层，）在 HTTPS 网络协议栈同 TSL 一样，属于安全层\n\n![](https://upload-images.jianshu.io/upload_images/3588755-cca8c7cf776db6ca.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/644)\n\n### （7）代理与 Agent 代理\n\n这俩货其实不一样，前者指 proxy，用于在客户端和服务器之间转发流量；\n\n后者是代表用户发起 HTTP 请求的客户端程序。（就是 web 机器人、爬虫）。\n\n### （8）报文流\n\n不管报文是从客户端流入服务器，还是从服务器流入客户端，所有的报文都是像河水一样，**下游**流动。\n\nHTTP 使用流入和流出描述***事务处理***的方向。\n\n客服端\\\n\n​           服务器\n\n客户端/\n\n# 三、连接管理\n\n###1、OSI 七层协议和 TCP/IP 五层网络协议\n\n总结为一句话：应表会、传网数物（五层协议中应表会为一层）。\n\n###2、TCP 协议中的三次握手\n\n总结为一句话：“船~来~了！船~来~了~吗？船~来~了。”之后服务器把船开往客服端。\n\n![](http://img.blog.csdn.net/20170104214009596?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvd2h1c2xlaQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)\n\n### 3、TCP 慢启动（slow shtar）\n\nTCP 会通过时间进行自我调谐。开始会限制连接的最大速度，如果数据传输成功，再慢慢提速。这种调谐被称为 TCP 慢启动。\n\n>  新建了一座桥。汽车为了试试这个桥能不能走，先慢慢开过去，如果发现没问题，其他汽车再提速过去。\n\n\n\n在提速的过程中，有个概念叫***打开拥塞窗口***。\n\n> 有一个车队要过一座桥。一开始先派一辆车过去，确认没事的话派两个车试试，如果还没事的话派四辆车过去，这个过程就叫打开拥塞窗口。\n\n","source":"_posts/2013/Http报文详解.md","raw":"---\ntitle: Http - Web 基础概述\ndate: 2013-05-13 16:58:34\ntags: \n- Http 报文\n- URL\ncategories: Http\nthumbnail: \"https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1515845822875&di=5c5ed7e816115333fa10af3a5d2e12dd&imgtype=0&src=http%3A%2F%2Fattach.bbs.miui.com%2Fforum%2F201708%2F02%2F162015g8shss8wbwb8w193.jpg\"\n---\n\n唔。。。我真的是太菜了\n<!-- more -->\n[TOC]\n\n# 一、HTTP报文\n\n![](https://images0.cnblogs.com/blog2015/776887/201507/241034588189239.png)\n\nHttp 报文分为请求报文（request）和响应报文（response），主要分三部分：\n\n- ## 1、起始行\n\n  - 请求行：**包含了一个方法和 URL（路径） 以及 HTTP 版本**\n\n  - 响应行：包含了 HTTP 版本，状态码和原因短语\n\n  - 方法：\n\n    > 分为常用的7种 HTTP 方法和对 HTTP 规范的扩展方法。\n\n  - 状态码：\n\n    > 状态码位于响应的起始行中；\n    >\n    > 状态码数在每条响应报文的起始行中返回的；\n\n  - 原因短语：\n\n    > 通常与状态码成对出现，如200 OK（描述操作状态的、文本的形式的原因短语）\n\n  - 版本号：\n\n    > **注意，版本号不会被当做小数处理，2.22要比2.3要大** \n\n- ## 2、首部（请求头、响应头、head）\n\n  - 通用首部\n  - 请求首部\n    - Accept 首部\n    - 条件请求首部\n    - 安全请求首部\n    - 代理请求首部\n  - 响应首部\n    - 协商首部\n    - 安全响应首部\n  - 实体首部\n    - 内容首部（Content）\n    - 实体缓存首部\n\n- ## 3、主体（请求体、响应体、body）\n\n![响应报文首部](响应报文首部.png)\n\n# 二、URL \n\n##1、URL 语法\n\n<scheme>://<user>:<password>@<host>:<port>/<path>;<params1>;<params2>?<query>&<query2>#<flag>\n\n方案://用户名:密码@主机:端口/路径;参数1;参数2？查询字符串#片段\n\n> URI方案：http（80）、ftp（21）、https（443）、mailto、rtsp、rtmp（1935）、file、telnet（23）、ssh（22），以上为常用的，远不止这些\n\n> rtsp：Real Time Streaming Protocol：实时流传输协议\n>\n> rtmp：Real Time Message Protocol ：实时信息传输协议\n\n## 2、一些常见的概念\n\n### （1） URI \n\nURI（统一资源标识符）\n\n* URL（统一资源定位符）\n* URN（统一资源名）\n\n### （1）RFC\n\n​         Request For Comments（RFC），是一系列以编号排定的文件。说白了就是 Internet标准定制文件。\n\n​        一个RFC文件在成为官方标准前一般至少要经历4个阶段【RFC2026】：因特网草案、建议标准、草案标准、因特网标准。\n\n### （3）事物\n\n一个 HTTP 事物有一条请求命令和一条响应结果组成。\n\n事物 = 请求 + 响应\n\n### （4）TCP\n\nTCP：传输控制协议，是把东西从一个地方传到另一个地方用的。***转发 HTTP 报文***。\n\nTCP 客户端与服务器是通过套接字（socket）通信的。\n\nHTTP 是**应用**层的，TCP 是**传输**层的。一个侧重应用，一个侧重传输。\n\n作用：\n\n* 无差错的数据传输\n* 按序传输（数据总是按照发送的顺序到达目的地）\n* 未分段的数据流（可以在任意时刻以任意尺寸发送数据）（尺寸就是 Content-Length）\n\n### （5）隧道（tunnel）\n\n定义：对 HTTP 报文进行**盲转**发的特殊代理。（ 之所以敢盲转还是不因为加了一层 SSL）\n\n### （6）SSL\n\nSSL（安全套接字层，）在 HTTPS 网络协议栈同 TSL 一样，属于安全层\n\n![](https://upload-images.jianshu.io/upload_images/3588755-cca8c7cf776db6ca.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/644)\n\n### （7）代理与 Agent 代理\n\n这俩货其实不一样，前者指 proxy，用于在客户端和服务器之间转发流量；\n\n后者是代表用户发起 HTTP 请求的客户端程序。（就是 web 机器人、爬虫）。\n\n### （8）报文流\n\n不管报文是从客户端流入服务器，还是从服务器流入客户端，所有的报文都是像河水一样，**下游**流动。\n\nHTTP 使用流入和流出描述***事务处理***的方向。\n\n客服端\\\n\n​           服务器\n\n客户端/\n\n# 三、连接管理\n\n###1、OSI 七层协议和 TCP/IP 五层网络协议\n\n总结为一句话：应表会、传网数物（五层协议中应表会为一层）。\n\n###2、TCP 协议中的三次握手\n\n总结为一句话：“船~来~了！船~来~了~吗？船~来~了。”之后服务器把船开往客服端。\n\n![](http://img.blog.csdn.net/20170104214009596?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvd2h1c2xlaQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)\n\n### 3、TCP 慢启动（slow shtar）\n\nTCP 会通过时间进行自我调谐。开始会限制连接的最大速度，如果数据传输成功，再慢慢提速。这种调谐被称为 TCP 慢启动。\n\n>  新建了一座桥。汽车为了试试这个桥能不能走，先慢慢开过去，如果发现没问题，其他汽车再提速过去。\n\n\n\n在提速的过程中，有个概念叫***打开拥塞窗口***。\n\n> 有一个车队要过一座桥。一开始先派一辆车过去，确认没事的话派两个车试试，如果还没事的话派四辆车过去，这个过程就叫打开拥塞窗口。\n\n","slug":"2013/Http报文详解","published":1,"updated":"2024-01-02T16:09:25.076Z","_id":"clqwlt7wn000fuc7t6jm94xq8","comments":1,"layout":"post","photos":[],"link":"","content":"<p>唔。。。我真的是太菜了</p>\n<span id=\"more\"></span>\n<p>[TOC]</p>\n<h1 id=\"一、HTTP报文\"><a href=\"#一、HTTP报文\" class=\"headerlink\" title=\"一、HTTP报文\"></a>一、HTTP报文</h1><p><img src=\"https://images0.cnblogs.com/blog2015/776887/201507/241034588189239.png\"></p>\n<p>Http 报文分为请求报文（request）和响应报文（response），主要分三部分：</p>\n<ul>\n<li><h2 id=\"1、起始行\"><a href=\"#1、起始行\" class=\"headerlink\" title=\"1、起始行\"></a>1、起始行</h2><ul>\n<li><p>请求行：<strong>包含了一个方法和 URL（路径） 以及 HTTP 版本</strong></p>\n</li>\n<li><p>响应行：包含了 HTTP 版本，状态码和原因短语</p>\n</li>\n<li><p>方法：</p>\n<blockquote>\n<p>分为常用的7种 HTTP 方法和对 HTTP 规范的扩展方法。</p>\n</blockquote>\n</li>\n<li><p>状态码：</p>\n<blockquote>\n<p>状态码位于响应的起始行中；</p>\n<p>状态码数在每条响应报文的起始行中返回的；</p>\n</blockquote>\n</li>\n<li><p>原因短语：</p>\n<blockquote>\n<p>通常与状态码成对出现，如200 OK（描述操作状态的、文本的形式的原因短语）</p>\n</blockquote>\n</li>\n<li><p>版本号：</p>\n<blockquote>\n<p><strong>注意，版本号不会被当做小数处理，2.22要比2.3要大</strong></p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><h2 id=\"2、首部（请求头、响应头、head）\"><a href=\"#2、首部（请求头、响应头、head）\" class=\"headerlink\" title=\"2、首部（请求头、响应头、head）\"></a>2、首部（请求头、响应头、head）</h2><ul>\n<li>通用首部</li>\n<li>请求首部<ul>\n<li>Accept 首部</li>\n<li>条件请求首部</li>\n<li>安全请求首部</li>\n<li>代理请求首部</li>\n</ul>\n</li>\n<li>响应首部<ul>\n<li>协商首部</li>\n<li>安全响应首部</li>\n</ul>\n</li>\n<li>实体首部<ul>\n<li>内容首部（Content）</li>\n<li>实体缓存首部</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><h2 id=\"3、主体（请求体、响应体、body）\"><a href=\"#3、主体（请求体、响应体、body）\" class=\"headerlink\" title=\"3、主体（请求体、响应体、body）\"></a>3、主体（请求体、响应体、body）</h2></li>\n</ul>\n<p><img src=\"/blog/%E5%93%8D%E5%BA%94%E6%8A%A5%E6%96%87%E9%A6%96%E9%83%A8.png\" alt=\"响应报文首部\"></p>\n<h1 id=\"二、URL\"><a href=\"#二、URL\" class=\"headerlink\" title=\"二、URL\"></a>二、URL</h1><p>##1、URL 语法</p>\n<p><scheme>:&#x2F;&#x2F;<user>:<password>@<host>:<port>&#x2F;<path>;<params1>;<params2>?<query>&amp;<query2>#<flag></p>\n<p>方案:&#x2F;&#x2F;用户名:密码@主机:端口&#x2F;路径;参数1;参数2？查询字符串#片段</p>\n<blockquote>\n<p>URI方案：http（80）、ftp（21）、https（443）、mailto、rtsp、rtmp（1935）、file、telnet（23）、ssh（22），以上为常用的，远不止这些</p>\n</blockquote>\n<blockquote>\n<p>rtsp：Real Time Streaming Protocol：实时流传输协议</p>\n<p>rtmp：Real Time Message Protocol ：实时信息传输协议</p>\n</blockquote>\n<h2 id=\"2、一些常见的概念\"><a href=\"#2、一些常见的概念\" class=\"headerlink\" title=\"2、一些常见的概念\"></a>2、一些常见的概念</h2><h3 id=\"（1）-URI\"><a href=\"#（1）-URI\" class=\"headerlink\" title=\"（1） URI\"></a>（1） URI</h3><p>URI（统一资源标识符）</p>\n<ul>\n<li>URL（统一资源定位符）</li>\n<li>URN（统一资源名）</li>\n</ul>\n<h3 id=\"（1）RFC\"><a href=\"#（1）RFC\" class=\"headerlink\" title=\"（1）RFC\"></a>（1）RFC</h3><p>​         Request For Comments（RFC），是一系列以编号排定的文件。说白了就是 Internet标准定制文件。</p>\n<p>​        一个RFC文件在成为官方标准前一般至少要经历4个阶段【RFC2026】：因特网草案、建议标准、草案标准、因特网标准。</p>\n<h3 id=\"（3）事物\"><a href=\"#（3）事物\" class=\"headerlink\" title=\"（3）事物\"></a>（3）事物</h3><p>一个 HTTP 事物有一条请求命令和一条响应结果组成。</p>\n<p>事物 &#x3D; 请求 + 响应</p>\n<h3 id=\"（4）TCP\"><a href=\"#（4）TCP\" class=\"headerlink\" title=\"（4）TCP\"></a>（4）TCP</h3><p>TCP：传输控制协议，是把东西从一个地方传到另一个地方用的。<em><strong>转发 HTTP 报文</strong></em>。</p>\n<p>TCP 客户端与服务器是通过套接字（socket）通信的。</p>\n<p>HTTP 是<strong>应用</strong>层的，TCP 是<strong>传输</strong>层的。一个侧重应用，一个侧重传输。</p>\n<p>作用：</p>\n<ul>\n<li>无差错的数据传输</li>\n<li>按序传输（数据总是按照发送的顺序到达目的地）</li>\n<li>未分段的数据流（可以在任意时刻以任意尺寸发送数据）（尺寸就是 Content-Length）</li>\n</ul>\n<h3 id=\"（5）隧道（tunnel）\"><a href=\"#（5）隧道（tunnel）\" class=\"headerlink\" title=\"（5）隧道（tunnel）\"></a>（5）隧道（tunnel）</h3><p>定义：对 HTTP 报文进行<strong>盲转</strong>发的特殊代理。（ 之所以敢盲转还是不因为加了一层 SSL）</p>\n<h3 id=\"（6）SSL\"><a href=\"#（6）SSL\" class=\"headerlink\" title=\"（6）SSL\"></a>（6）SSL</h3><p>SSL（安全套接字层，）在 HTTPS 网络协议栈同 TSL 一样，属于安全层</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/3588755-cca8c7cf776db6ca.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/644\"></p>\n<h3 id=\"（7）代理与-Agent-代理\"><a href=\"#（7）代理与-Agent-代理\" class=\"headerlink\" title=\"（7）代理与 Agent 代理\"></a>（7）代理与 Agent 代理</h3><p>这俩货其实不一样，前者指 proxy，用于在客户端和服务器之间转发流量；</p>\n<p>后者是代表用户发起 HTTP 请求的客户端程序。（就是 web 机器人、爬虫）。</p>\n<h3 id=\"（8）报文流\"><a href=\"#（8）报文流\" class=\"headerlink\" title=\"（8）报文流\"></a>（8）报文流</h3><p>不管报文是从客户端流入服务器，还是从服务器流入客户端，所有的报文都是像河水一样，<strong>下游</strong>流动。</p>\n<p>HTTP 使用流入和流出描述<em><strong>事务处理</strong></em>的方向。</p>\n<p>客服端\\</p>\n<p>​           服务器</p>\n<p>客户端&#x2F;</p>\n<h1 id=\"三、连接管理\"><a href=\"#三、连接管理\" class=\"headerlink\" title=\"三、连接管理\"></a>三、连接管理</h1><p>###1、OSI 七层协议和 TCP&#x2F;IP 五层网络协议</p>\n<p>总结为一句话：应表会、传网数物（五层协议中应表会为一层）。</p>\n<p>###2、TCP 协议中的三次握手</p>\n<p>总结为一句话：“船<del>来</del>了！船<del>来</del>了<del>吗？船</del>来~了。”之后服务器把船开往客服端。</p>\n<p><img src=\"http://img.blog.csdn.net/20170104214009596?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvd2h1c2xlaQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\"></p>\n<h3 id=\"3、TCP-慢启动（slow-shtar）\"><a href=\"#3、TCP-慢启动（slow-shtar）\" class=\"headerlink\" title=\"3、TCP 慢启动（slow shtar）\"></a>3、TCP 慢启动（slow shtar）</h3><p>TCP 会通过时间进行自我调谐。开始会限制连接的最大速度，如果数据传输成功，再慢慢提速。这种调谐被称为 TCP 慢启动。</p>\n<blockquote>\n<p> 新建了一座桥。汽车为了试试这个桥能不能走，先慢慢开过去，如果发现没问题，其他汽车再提速过去。</p>\n</blockquote>\n<p>在提速的过程中，有个概念叫<em><strong>打开拥塞窗口</strong></em>。</p>\n<blockquote>\n<p>有一个车队要过一座桥。一开始先派一辆车过去，确认没事的话派两个车试试，如果还没事的话派四辆车过去，这个过程就叫打开拥塞窗口。</p>\n</blockquote>\n","site":{"data":{"gallery":{"图片名称":{"full_link":"http://miccall.tech/img/twx.jpg","thumb_link":"http://miccall.tech/img/twx.jpg","descr":"图片描述"}},"links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}},"_links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}}}},"excerpt":"<p>唔。。。我真的是太菜了</p>","more":"<p>[TOC]</p>\n<h1 id=\"一、HTTP报文\"><a href=\"#一、HTTP报文\" class=\"headerlink\" title=\"一、HTTP报文\"></a>一、HTTP报文</h1><p><img src=\"https://images0.cnblogs.com/blog2015/776887/201507/241034588189239.png\"></p>\n<p>Http 报文分为请求报文（request）和响应报文（response），主要分三部分：</p>\n<ul>\n<li><h2 id=\"1、起始行\"><a href=\"#1、起始行\" class=\"headerlink\" title=\"1、起始行\"></a>1、起始行</h2><ul>\n<li><p>请求行：<strong>包含了一个方法和 URL（路径） 以及 HTTP 版本</strong></p>\n</li>\n<li><p>响应行：包含了 HTTP 版本，状态码和原因短语</p>\n</li>\n<li><p>方法：</p>\n<blockquote>\n<p>分为常用的7种 HTTP 方法和对 HTTP 规范的扩展方法。</p>\n</blockquote>\n</li>\n<li><p>状态码：</p>\n<blockquote>\n<p>状态码位于响应的起始行中；</p>\n<p>状态码数在每条响应报文的起始行中返回的；</p>\n</blockquote>\n</li>\n<li><p>原因短语：</p>\n<blockquote>\n<p>通常与状态码成对出现，如200 OK（描述操作状态的、文本的形式的原因短语）</p>\n</blockquote>\n</li>\n<li><p>版本号：</p>\n<blockquote>\n<p><strong>注意，版本号不会被当做小数处理，2.22要比2.3要大</strong></p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><h2 id=\"2、首部（请求头、响应头、head）\"><a href=\"#2、首部（请求头、响应头、head）\" class=\"headerlink\" title=\"2、首部（请求头、响应头、head）\"></a>2、首部（请求头、响应头、head）</h2><ul>\n<li>通用首部</li>\n<li>请求首部<ul>\n<li>Accept 首部</li>\n<li>条件请求首部</li>\n<li>安全请求首部</li>\n<li>代理请求首部</li>\n</ul>\n</li>\n<li>响应首部<ul>\n<li>协商首部</li>\n<li>安全响应首部</li>\n</ul>\n</li>\n<li>实体首部<ul>\n<li>内容首部（Content）</li>\n<li>实体缓存首部</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><h2 id=\"3、主体（请求体、响应体、body）\"><a href=\"#3、主体（请求体、响应体、body）\" class=\"headerlink\" title=\"3、主体（请求体、响应体、body）\"></a>3、主体（请求体、响应体、body）</h2></li>\n</ul>\n<p><img src=\"/blog/%E5%93%8D%E5%BA%94%E6%8A%A5%E6%96%87%E9%A6%96%E9%83%A8.png\" alt=\"响应报文首部\"></p>\n<h1 id=\"二、URL\"><a href=\"#二、URL\" class=\"headerlink\" title=\"二、URL\"></a>二、URL</h1><p>##1、URL 语法</p>\n<p><scheme>:&#x2F;&#x2F;<user>:<password>@<host>:<port>&#x2F;<path>;<params1>;<params2>?<query>&amp;<query2>#<flag></p>\n<p>方案:&#x2F;&#x2F;用户名:密码@主机:端口&#x2F;路径;参数1;参数2？查询字符串#片段</p>\n<blockquote>\n<p>URI方案：http（80）、ftp（21）、https（443）、mailto、rtsp、rtmp（1935）、file、telnet（23）、ssh（22），以上为常用的，远不止这些</p>\n</blockquote>\n<blockquote>\n<p>rtsp：Real Time Streaming Protocol：实时流传输协议</p>\n<p>rtmp：Real Time Message Protocol ：实时信息传输协议</p>\n</blockquote>\n<h2 id=\"2、一些常见的概念\"><a href=\"#2、一些常见的概念\" class=\"headerlink\" title=\"2、一些常见的概念\"></a>2、一些常见的概念</h2><h3 id=\"（1）-URI\"><a href=\"#（1）-URI\" class=\"headerlink\" title=\"（1） URI\"></a>（1） URI</h3><p>URI（统一资源标识符）</p>\n<ul>\n<li>URL（统一资源定位符）</li>\n<li>URN（统一资源名）</li>\n</ul>\n<h3 id=\"（1）RFC\"><a href=\"#（1）RFC\" class=\"headerlink\" title=\"（1）RFC\"></a>（1）RFC</h3><p>​         Request For Comments（RFC），是一系列以编号排定的文件。说白了就是 Internet标准定制文件。</p>\n<p>​        一个RFC文件在成为官方标准前一般至少要经历4个阶段【RFC2026】：因特网草案、建议标准、草案标准、因特网标准。</p>\n<h3 id=\"（3）事物\"><a href=\"#（3）事物\" class=\"headerlink\" title=\"（3）事物\"></a>（3）事物</h3><p>一个 HTTP 事物有一条请求命令和一条响应结果组成。</p>\n<p>事物 &#x3D; 请求 + 响应</p>\n<h3 id=\"（4）TCP\"><a href=\"#（4）TCP\" class=\"headerlink\" title=\"（4）TCP\"></a>（4）TCP</h3><p>TCP：传输控制协议，是把东西从一个地方传到另一个地方用的。<em><strong>转发 HTTP 报文</strong></em>。</p>\n<p>TCP 客户端与服务器是通过套接字（socket）通信的。</p>\n<p>HTTP 是<strong>应用</strong>层的，TCP 是<strong>传输</strong>层的。一个侧重应用，一个侧重传输。</p>\n<p>作用：</p>\n<ul>\n<li>无差错的数据传输</li>\n<li>按序传输（数据总是按照发送的顺序到达目的地）</li>\n<li>未分段的数据流（可以在任意时刻以任意尺寸发送数据）（尺寸就是 Content-Length）</li>\n</ul>\n<h3 id=\"（5）隧道（tunnel）\"><a href=\"#（5）隧道（tunnel）\" class=\"headerlink\" title=\"（5）隧道（tunnel）\"></a>（5）隧道（tunnel）</h3><p>定义：对 HTTP 报文进行<strong>盲转</strong>发的特殊代理。（ 之所以敢盲转还是不因为加了一层 SSL）</p>\n<h3 id=\"（6）SSL\"><a href=\"#（6）SSL\" class=\"headerlink\" title=\"（6）SSL\"></a>（6）SSL</h3><p>SSL（安全套接字层，）在 HTTPS 网络协议栈同 TSL 一样，属于安全层</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/3588755-cca8c7cf776db6ca.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/644\"></p>\n<h3 id=\"（7）代理与-Agent-代理\"><a href=\"#（7）代理与-Agent-代理\" class=\"headerlink\" title=\"（7）代理与 Agent 代理\"></a>（7）代理与 Agent 代理</h3><p>这俩货其实不一样，前者指 proxy，用于在客户端和服务器之间转发流量；</p>\n<p>后者是代表用户发起 HTTP 请求的客户端程序。（就是 web 机器人、爬虫）。</p>\n<h3 id=\"（8）报文流\"><a href=\"#（8）报文流\" class=\"headerlink\" title=\"（8）报文流\"></a>（8）报文流</h3><p>不管报文是从客户端流入服务器，还是从服务器流入客户端，所有的报文都是像河水一样，<strong>下游</strong>流动。</p>\n<p>HTTP 使用流入和流出描述<em><strong>事务处理</strong></em>的方向。</p>\n<p>客服端\\</p>\n<p>​           服务器</p>\n<p>客户端&#x2F;</p>\n<h1 id=\"三、连接管理\"><a href=\"#三、连接管理\" class=\"headerlink\" title=\"三、连接管理\"></a>三、连接管理</h1><p>###1、OSI 七层协议和 TCP&#x2F;IP 五层网络协议</p>\n<p>总结为一句话：应表会、传网数物（五层协议中应表会为一层）。</p>\n<p>###2、TCP 协议中的三次握手</p>\n<p>总结为一句话：“船<del>来</del>了！船<del>来</del>了<del>吗？船</del>来~了。”之后服务器把船开往客服端。</p>\n<p><img src=\"http://img.blog.csdn.net/20170104214009596?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvd2h1c2xlaQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\"></p>\n<h3 id=\"3、TCP-慢启动（slow-shtar）\"><a href=\"#3、TCP-慢启动（slow-shtar）\" class=\"headerlink\" title=\"3、TCP 慢启动（slow shtar）\"></a>3、TCP 慢启动（slow shtar）</h3><p>TCP 会通过时间进行自我调谐。开始会限制连接的最大速度，如果数据传输成功，再慢慢提速。这种调谐被称为 TCP 慢启动。</p>\n<blockquote>\n<p> 新建了一座桥。汽车为了试试这个桥能不能走，先慢慢开过去，如果发现没问题，其他汽车再提速过去。</p>\n</blockquote>\n<p>在提速的过程中，有个概念叫<em><strong>打开拥塞窗口</strong></em>。</p>\n<blockquote>\n<p>有一个车队要过一座桥。一开始先派一辆车过去，确认没事的话派两个车试试，如果还没事的话派四辆车过去，这个过程就叫打开拥塞窗口。</p>\n</blockquote>"},{"title":"cUrl使用心得","date":"2013-01-13T06:32:40.000Z","thumbnail":"https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1516119417386&di=f9810c82af31ee64a32e2e4ca05c91bb&imgtype=0&src=http%3A%2F%2Fwww.wmpic.me%2Fwp-content%2Fuploads%2F2014%2F03%2F20140325103402919.jpg","_content":"\ncurl 真是调试利器啊！！\n<!-- more -->\n\n# 一、常用参数\n\n```shell\n# -i：include全部HTTP报文\n# -v：显示请求过程\n# -d：HTTP POST DATA \n# -X：自定义请求方法。如-X POST\n# -H：自定义请求头 如 -H \"Content-type: application/json\"\n# -G： --get  Send the -d data with a HTTP GET (H)\n# -o：输出\n# -s：静音模式，不输出任何东西\n# -S, --show-error    Show error. With -s, make curl show errors when they occur\n# -f, --fail         连接失败时不显示http错误 (H)\n\n# 调试的话暂时用到这么多，其他的命令想到在更。这种东西可以直接看英文文档。\n```\n\n\n\n# 二、get 请求\n\n```shell\n# 如果这里的URL指向的是一个文件或者一幅图都可以直接下载到本地\ncurl \"http://7xssni.com1.z0.glb.clouddn.com/home.txt\"  \n\n# 显示全部信息:包括起始行、响应头、响应体\n# -i: --include       Include protocol headers in the output (H/F)\ncurl -i \"http://7xssni.com1.z0.glb.clouddn.com/home.txt\"\n\n# 显示get请求全过程解析 *表示解析过程  >表示请求 <表示响应 \n# -v: --verbose 冗长的\ncurl -v \"http://7xssni.com1.z0.glb.clouddn.com/home.txt\" #--verbose \n```\n\n\n\n# 三、post请求\n\n```shell\n#  -d: --data DATA     HTTP POST data (H)\ncurl -d \"param1=value1&param2=value2\" \"http://www.baidu.com\"\n```\n\n\n\n# 四、JSON 格式的 post 请求\n\n```shell\n# -H: --header LINE   Pass custom header LINE to server (H)\n# -X: --request COMMAND  Specify request command to use\n# -d: --data DATA     HTTP POST data (H)\ncurl -l -H \"Content-type: application/json\" -X POST -d '{\"phone\":\"13521389587\",\"password\":\"test\"}' http://domain/apis/users.json\n```\n\n\n\n# 五、实例\n\n```\nURL ：http://7xssni.com1.z0.glb.clouddn.com/home.txt\n```\n\n```\n{\n  \"headUrl\" : {\n    \"headList\" : [\n      \"http://7xssni.com1.z0.glb.clouddn.com/home1.jpg\",\n      \"http://7xssni.com1.z0.glb.clouddn.com/home2.jpg\",\n      \"http://7xssni.com1.z0.glb.clouddn.com/home3.jpg\",\n      \"http://7xssni.com1.z0.glb.clouddn.com/home4.jpg\"\n    ]\n  },\n  \"homeUrl\" : {\n    \"dataList\" : [\n      {\n        \"imagesURL\" : \"http://7xssni.com1.z0.glb.clouddn.com/1.jpg\",\n        \"materialList\" : \"进口\",\n        \"titleStr\" : \"PVC实体塑木板\",\n        \"use\" : \"地板/家具/隔墙/衣柜\"\n      },\n      {\n        \"imagesURL\" : \"http://7xssni.com1.z0.glb.clouddn.com/2.jpg\",\n        \"materialList\" : \"进口\",\n        \"titleStr\" : \"3D印花地毯\",\n        \"use\" : \"地板/家具/隔墙/衣柜\"\n      },\n      {\n        \"imagesURL\" : \"http://7xssni.com1.z0.glb.clouddn.com/3.jpg\",\n        \"materialList\" : \"进口\",\n        \"titleStr\" : \"金刚木板\",\n        \"use\" : \"地板/家具/隔墙/衣柜\"\n      },\n      {\n        \"imagesURL\" : \"http://7xssni.com1.z0.glb.clouddn.com/4.jpg\",\n        \"materialList\" : \"进口\",\n        \"titleStr\" : \"经典菱形软包\",\n        \"use\" : \"地板/家具/隔墙/衣柜\"\n      },\n      {\n        \"imagesURL\" : \"http://7xssni.com1.z0.glb.clouddn.com/5.jpg\",\n        \"materialList\" : \"进口\",\n        \"titleStr\" : \"经典防水木板\",\n        \"use\" : \"地板/家具/隔墙/衣柜\"\n      },\n      {\n        \"imagesURL\" : \"http://7xssni.com1.z0.glb.clouddn.com/6.jpg\",\n        \"materialList\" : \"进口\",\n        \"titleStr\" : \"经典花纹墙纸\",\n        \"use\" : \"地板/家具/隔墙/衣柜\"\n      },\n      {\n        \"imagesURL\" : \"http://7xssni.com1.z0.glb.clouddn.com/7.jpg\",\n        \"materialList\" : \"进口\",\n        \"titleStr\" : \"经典使用木板\",\n        \"use\" : \"地板/家具/隔墙/衣柜\"\n      },\n      {\n        \"imagesURL\" : \"http://7xssni.com1.z0.glb.clouddn.com/8.jpg\",\n        \"materialList\" : \"进口\",\n        \"titleStr\" : \"非洲柚木地板\",\n        \"use\" : \"地板/家具/隔墙/衣柜\"\n      }\n    ]\n  }\n}\n```\n\n\n\n\n\n## 五、常用命令：\n\n```\n -a, --append        Append to target file when uploading (F/SFTP)\n -E, --cert CERT[:PASSWD]  Client certificate file and password (SSL)\n -K, --config FILE   Read config from FILE\n -C, --continue-at OFFSET  Resumed transfer OFFSET\n -b, --cookie STRING/FILE  Read cookies from STRING/FILE (H)\n -c, --cookie-jar FILE  Write cookies to FILE after operation (H)\n -d, --data DATA     HTTP POST data (H)\n -D, --dump-header FILE  Write the received headers to FILE\n -f, --fail          Fail silently (no output at all) on HTTP errors (H)\n -F, --form CONTENT  Specify HTTP multipart POST data (H)\n -P, --ftp-port ADR  Use PORT with given address instead of PASV (F)\n -G, --get           Send the -d data with a HTTP GET (H)\n -g, --globoff       Disable URL sequences and ranges using {} and []\n -H, --header LINE   Pass custom header LINE to server (H)\n -I, --head          Show document info only\n -h, --help          This help text\n -i, --include       Include protocol headers in the output (H/F)\n -k, --insecure      Allow connections to SSL sites without certs (H)\n -j, --junk-session-cookies  Ignore session cookies read from file (H)\n -l, --list-only     List only mode (F/POP3)\n -L, --location      Follow redirects (H)\n -M, --manual        Display the full manual\n -m, --max-time SECONDS  Maximum time allowed for the transfer\n -n, --netrc         Must read .netrc for user name and password\n -N, --no-buffer     Disable buffering of the output stream\n -o, --output FILE   Write to FILE instead of stdout\n -U, --proxy-user USER[:PASSWORD]  Proxy user and password\n     --proxy1.0 HOST[:PORT]  Use HTTP/1.0 proxy on given port\n -p, --proxytunnel   Operate through a HTTP proxy tunnel (using CONNECT)\n     --pubkey KEY    Public key file name (SSH)\n -Q, --quote CMD     Send command(s) to server before transfer (F/SFTP)\n     --random-file FILE  File for reading random data from (SSL)\n -r, --range RANGE   Retrieve only the bytes within RANGE\n     --raw           Do HTTP \"raw\"; no transfer decoding (H)\n -e, --referer       Referer URL (H)\n -J, --remote-header-name  Use the header-provided filename (H)\n -O, --remote-name   Write output to a file named as the remote file\n     --remote-name-all  Use the remote file name for all URLs\n -R, --remote-time   Set the remote file's time on the local output\n -X, --request COMMAND  Specify request command to use\n -S, --show-error    Show error. With -s, make curl show errors when they occur\n -s, --silent        Silent mode (don't output anything)\n -Y, --speed-limit RATE  Stop transfers below RATE for 'speed-time' secs\n -y, --speed-time SECONDS  Trigger 'speed-limit' abort after SECONDS (default: 30)\n -t, --telnet-option OPT=VAL  Set telnet option\n     --tftp-blksize VALUE  Set TFTP BLKSIZE option (must be >512)\n     --tftp-no-options  Do not send TFTP options requests\n -z, --time-cond TIME   Transfer based on a time condition\n -T, --upload-file FILE  Transfer FILE to destination\n     --url URL       URL to work with\n -B, --use-ascii     Use ASCII/text transfer\n -u, --user USER[:PASSWORD]  Server user and password\n -A, --user-agent STRING  Send User-Agent STRING to server (H)\n -v, --verbose       Make the operation more talkative\n -V, --version       Show version number and quit\n -w, --write-out FORMAT  Use output FORMAT after completion\n -q, --disable       Disable .curlrc (must be first parameter)\n```\n\n","source":"_posts/2013/cUrl使用心得.md","raw":"---\ntitle: cUrl使用心得\ndate: 2013-01-13 14:32:40\ntags: cUrl\ncategories: Linux\nthumbnail: https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1516119417386&di=f9810c82af31ee64a32e2e4ca05c91bb&imgtype=0&src=http%3A%2F%2Fwww.wmpic.me%2Fwp-content%2Fuploads%2F2014%2F03%2F20140325103402919.jpg\n---\n\ncurl 真是调试利器啊！！\n<!-- more -->\n\n# 一、常用参数\n\n```shell\n# -i：include全部HTTP报文\n# -v：显示请求过程\n# -d：HTTP POST DATA \n# -X：自定义请求方法。如-X POST\n# -H：自定义请求头 如 -H \"Content-type: application/json\"\n# -G： --get  Send the -d data with a HTTP GET (H)\n# -o：输出\n# -s：静音模式，不输出任何东西\n# -S, --show-error    Show error. With -s, make curl show errors when they occur\n# -f, --fail         连接失败时不显示http错误 (H)\n\n# 调试的话暂时用到这么多，其他的命令想到在更。这种东西可以直接看英文文档。\n```\n\n\n\n# 二、get 请求\n\n```shell\n# 如果这里的URL指向的是一个文件或者一幅图都可以直接下载到本地\ncurl \"http://7xssni.com1.z0.glb.clouddn.com/home.txt\"  \n\n# 显示全部信息:包括起始行、响应头、响应体\n# -i: --include       Include protocol headers in the output (H/F)\ncurl -i \"http://7xssni.com1.z0.glb.clouddn.com/home.txt\"\n\n# 显示get请求全过程解析 *表示解析过程  >表示请求 <表示响应 \n# -v: --verbose 冗长的\ncurl -v \"http://7xssni.com1.z0.glb.clouddn.com/home.txt\" #--verbose \n```\n\n\n\n# 三、post请求\n\n```shell\n#  -d: --data DATA     HTTP POST data (H)\ncurl -d \"param1=value1&param2=value2\" \"http://www.baidu.com\"\n```\n\n\n\n# 四、JSON 格式的 post 请求\n\n```shell\n# -H: --header LINE   Pass custom header LINE to server (H)\n# -X: --request COMMAND  Specify request command to use\n# -d: --data DATA     HTTP POST data (H)\ncurl -l -H \"Content-type: application/json\" -X POST -d '{\"phone\":\"13521389587\",\"password\":\"test\"}' http://domain/apis/users.json\n```\n\n\n\n# 五、实例\n\n```\nURL ：http://7xssni.com1.z0.glb.clouddn.com/home.txt\n```\n\n```\n{\n  \"headUrl\" : {\n    \"headList\" : [\n      \"http://7xssni.com1.z0.glb.clouddn.com/home1.jpg\",\n      \"http://7xssni.com1.z0.glb.clouddn.com/home2.jpg\",\n      \"http://7xssni.com1.z0.glb.clouddn.com/home3.jpg\",\n      \"http://7xssni.com1.z0.glb.clouddn.com/home4.jpg\"\n    ]\n  },\n  \"homeUrl\" : {\n    \"dataList\" : [\n      {\n        \"imagesURL\" : \"http://7xssni.com1.z0.glb.clouddn.com/1.jpg\",\n        \"materialList\" : \"进口\",\n        \"titleStr\" : \"PVC实体塑木板\",\n        \"use\" : \"地板/家具/隔墙/衣柜\"\n      },\n      {\n        \"imagesURL\" : \"http://7xssni.com1.z0.glb.clouddn.com/2.jpg\",\n        \"materialList\" : \"进口\",\n        \"titleStr\" : \"3D印花地毯\",\n        \"use\" : \"地板/家具/隔墙/衣柜\"\n      },\n      {\n        \"imagesURL\" : \"http://7xssni.com1.z0.glb.clouddn.com/3.jpg\",\n        \"materialList\" : \"进口\",\n        \"titleStr\" : \"金刚木板\",\n        \"use\" : \"地板/家具/隔墙/衣柜\"\n      },\n      {\n        \"imagesURL\" : \"http://7xssni.com1.z0.glb.clouddn.com/4.jpg\",\n        \"materialList\" : \"进口\",\n        \"titleStr\" : \"经典菱形软包\",\n        \"use\" : \"地板/家具/隔墙/衣柜\"\n      },\n      {\n        \"imagesURL\" : \"http://7xssni.com1.z0.glb.clouddn.com/5.jpg\",\n        \"materialList\" : \"进口\",\n        \"titleStr\" : \"经典防水木板\",\n        \"use\" : \"地板/家具/隔墙/衣柜\"\n      },\n      {\n        \"imagesURL\" : \"http://7xssni.com1.z0.glb.clouddn.com/6.jpg\",\n        \"materialList\" : \"进口\",\n        \"titleStr\" : \"经典花纹墙纸\",\n        \"use\" : \"地板/家具/隔墙/衣柜\"\n      },\n      {\n        \"imagesURL\" : \"http://7xssni.com1.z0.glb.clouddn.com/7.jpg\",\n        \"materialList\" : \"进口\",\n        \"titleStr\" : \"经典使用木板\",\n        \"use\" : \"地板/家具/隔墙/衣柜\"\n      },\n      {\n        \"imagesURL\" : \"http://7xssni.com1.z0.glb.clouddn.com/8.jpg\",\n        \"materialList\" : \"进口\",\n        \"titleStr\" : \"非洲柚木地板\",\n        \"use\" : \"地板/家具/隔墙/衣柜\"\n      }\n    ]\n  }\n}\n```\n\n\n\n\n\n## 五、常用命令：\n\n```\n -a, --append        Append to target file when uploading (F/SFTP)\n -E, --cert CERT[:PASSWD]  Client certificate file and password (SSL)\n -K, --config FILE   Read config from FILE\n -C, --continue-at OFFSET  Resumed transfer OFFSET\n -b, --cookie STRING/FILE  Read cookies from STRING/FILE (H)\n -c, --cookie-jar FILE  Write cookies to FILE after operation (H)\n -d, --data DATA     HTTP POST data (H)\n -D, --dump-header FILE  Write the received headers to FILE\n -f, --fail          Fail silently (no output at all) on HTTP errors (H)\n -F, --form CONTENT  Specify HTTP multipart POST data (H)\n -P, --ftp-port ADR  Use PORT with given address instead of PASV (F)\n -G, --get           Send the -d data with a HTTP GET (H)\n -g, --globoff       Disable URL sequences and ranges using {} and []\n -H, --header LINE   Pass custom header LINE to server (H)\n -I, --head          Show document info only\n -h, --help          This help text\n -i, --include       Include protocol headers in the output (H/F)\n -k, --insecure      Allow connections to SSL sites without certs (H)\n -j, --junk-session-cookies  Ignore session cookies read from file (H)\n -l, --list-only     List only mode (F/POP3)\n -L, --location      Follow redirects (H)\n -M, --manual        Display the full manual\n -m, --max-time SECONDS  Maximum time allowed for the transfer\n -n, --netrc         Must read .netrc for user name and password\n -N, --no-buffer     Disable buffering of the output stream\n -o, --output FILE   Write to FILE instead of stdout\n -U, --proxy-user USER[:PASSWORD]  Proxy user and password\n     --proxy1.0 HOST[:PORT]  Use HTTP/1.0 proxy on given port\n -p, --proxytunnel   Operate through a HTTP proxy tunnel (using CONNECT)\n     --pubkey KEY    Public key file name (SSH)\n -Q, --quote CMD     Send command(s) to server before transfer (F/SFTP)\n     --random-file FILE  File for reading random data from (SSL)\n -r, --range RANGE   Retrieve only the bytes within RANGE\n     --raw           Do HTTP \"raw\"; no transfer decoding (H)\n -e, --referer       Referer URL (H)\n -J, --remote-header-name  Use the header-provided filename (H)\n -O, --remote-name   Write output to a file named as the remote file\n     --remote-name-all  Use the remote file name for all URLs\n -R, --remote-time   Set the remote file's time on the local output\n -X, --request COMMAND  Specify request command to use\n -S, --show-error    Show error. With -s, make curl show errors when they occur\n -s, --silent        Silent mode (don't output anything)\n -Y, --speed-limit RATE  Stop transfers below RATE for 'speed-time' secs\n -y, --speed-time SECONDS  Trigger 'speed-limit' abort after SECONDS (default: 30)\n -t, --telnet-option OPT=VAL  Set telnet option\n     --tftp-blksize VALUE  Set TFTP BLKSIZE option (must be >512)\n     --tftp-no-options  Do not send TFTP options requests\n -z, --time-cond TIME   Transfer based on a time condition\n -T, --upload-file FILE  Transfer FILE to destination\n     --url URL       URL to work with\n -B, --use-ascii     Use ASCII/text transfer\n -u, --user USER[:PASSWORD]  Server user and password\n -A, --user-agent STRING  Send User-Agent STRING to server (H)\n -v, --verbose       Make the operation more talkative\n -V, --version       Show version number and quit\n -w, --write-out FORMAT  Use output FORMAT after completion\n -q, --disable       Disable .curlrc (must be first parameter)\n```\n\n","slug":"2013/cUrl使用心得","published":1,"updated":"2024-01-02T16:09:25.079Z","_id":"clqwlt7wo000guc7t8epc1jfa","comments":1,"layout":"post","photos":[],"link":"","content":"<p>curl 真是调试利器啊！！</p>\n<span id=\"more\"></span>\n\n<h1 id=\"一、常用参数\"><a href=\"#一、常用参数\" class=\"headerlink\" title=\"一、常用参数\"></a>一、常用参数</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">-i：include全部HTTP报文</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">-v：显示请求过程</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">-d：HTTP POST DATA</span> </span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">-X：自定义请求方法。如-X POST</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">-H：自定义请求头 如 -H <span class=\"string\">&quot;Content-type: application/json&quot;</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">-G： --get  Send the -d data with a HTTP GET (H)</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">-o：输出</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">-s：静音模式，不输出任何东西</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">-S, --show-error    Show error. With -s, make curl show errors when they occur</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">-f, --fail         连接失败时不显示http错误 (H)</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">调试的话暂时用到这么多，其他的命令想到在更。这种东西可以直接看英文文档。</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"二、get-请求\"><a href=\"#二、get-请求\" class=\"headerlink\" title=\"二、get 请求\"></a>二、get 请求</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">如果这里的URL指向的是一个文件或者一幅图都可以直接下载到本地</span></span><br><span class=\"line\">curl &quot;http://7xssni.com1.z0.glb.clouddn.com/home.txt&quot;  </span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">显示全部信息:包括起始行、响应头、响应体</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">-i: --include       Include protocol headers <span class=\"keyword\">in</span> the output (H/F)</span></span><br><span class=\"line\">curl -i &quot;http://7xssni.com1.z0.glb.clouddn.com/home.txt&quot;</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">显示get请求全过程解析 *表示解析过程  &gt;表示请求 &lt;表示响应</span> </span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">-v: --verbose 冗长的</span></span><br><span class=\"line\">curl -v &quot;http://7xssni.com1.z0.glb.clouddn.com/home.txt&quot; #--verbose </span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"三、post请求\"><a href=\"#三、post请求\" class=\"headerlink\" title=\"三、post请求\"></a>三、post请求</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"> -d: --data DATA     HTTP POST data (H)</span></span><br><span class=\"line\">curl -d &quot;param1=value1&amp;param2=value2&quot; &quot;http://www.baidu.com&quot;</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"四、JSON-格式的-post-请求\"><a href=\"#四、JSON-格式的-post-请求\" class=\"headerlink\" title=\"四、JSON 格式的 post 请求\"></a>四、JSON 格式的 post 请求</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">-H: --header LINE   Pass custom header LINE to server (H)</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">-X: --request COMMAND  Specify request <span class=\"built_in\">command</span> to use</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">-d: --data DATA     HTTP POST data (H)</span></span><br><span class=\"line\">curl -l -H &quot;Content-type: application/json&quot; -X POST -d &#x27;&#123;&quot;phone&quot;:&quot;13521389587&quot;,&quot;password&quot;:&quot;test&quot;&#125;&#x27; http://domain/apis/users.json</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"五、实例\"><a href=\"#五、实例\" class=\"headerlink\" title=\"五、实例\"></a>五、实例</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">URL ：http://7xssni.com1.z0.glb.clouddn.com/home.txt</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;headUrl&quot; : &#123;</span><br><span class=\"line\">    &quot;headList&quot; : [</span><br><span class=\"line\">      &quot;http://7xssni.com1.z0.glb.clouddn.com/home1.jpg&quot;,</span><br><span class=\"line\">      &quot;http://7xssni.com1.z0.glb.clouddn.com/home2.jpg&quot;,</span><br><span class=\"line\">      &quot;http://7xssni.com1.z0.glb.clouddn.com/home3.jpg&quot;,</span><br><span class=\"line\">      &quot;http://7xssni.com1.z0.glb.clouddn.com/home4.jpg&quot;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &quot;homeUrl&quot; : &#123;</span><br><span class=\"line\">    &quot;dataList&quot; : [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        &quot;imagesURL&quot; : &quot;http://7xssni.com1.z0.glb.clouddn.com/1.jpg&quot;,</span><br><span class=\"line\">        &quot;materialList&quot; : &quot;进口&quot;,</span><br><span class=\"line\">        &quot;titleStr&quot; : &quot;PVC实体塑木板&quot;,</span><br><span class=\"line\">        &quot;use&quot; : &quot;地板/家具/隔墙/衣柜&quot;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        &quot;imagesURL&quot; : &quot;http://7xssni.com1.z0.glb.clouddn.com/2.jpg&quot;,</span><br><span class=\"line\">        &quot;materialList&quot; : &quot;进口&quot;,</span><br><span class=\"line\">        &quot;titleStr&quot; : &quot;3D印花地毯&quot;,</span><br><span class=\"line\">        &quot;use&quot; : &quot;地板/家具/隔墙/衣柜&quot;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        &quot;imagesURL&quot; : &quot;http://7xssni.com1.z0.glb.clouddn.com/3.jpg&quot;,</span><br><span class=\"line\">        &quot;materialList&quot; : &quot;进口&quot;,</span><br><span class=\"line\">        &quot;titleStr&quot; : &quot;金刚木板&quot;,</span><br><span class=\"line\">        &quot;use&quot; : &quot;地板/家具/隔墙/衣柜&quot;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        &quot;imagesURL&quot; : &quot;http://7xssni.com1.z0.glb.clouddn.com/4.jpg&quot;,</span><br><span class=\"line\">        &quot;materialList&quot; : &quot;进口&quot;,</span><br><span class=\"line\">        &quot;titleStr&quot; : &quot;经典菱形软包&quot;,</span><br><span class=\"line\">        &quot;use&quot; : &quot;地板/家具/隔墙/衣柜&quot;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        &quot;imagesURL&quot; : &quot;http://7xssni.com1.z0.glb.clouddn.com/5.jpg&quot;,</span><br><span class=\"line\">        &quot;materialList&quot; : &quot;进口&quot;,</span><br><span class=\"line\">        &quot;titleStr&quot; : &quot;经典防水木板&quot;,</span><br><span class=\"line\">        &quot;use&quot; : &quot;地板/家具/隔墙/衣柜&quot;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        &quot;imagesURL&quot; : &quot;http://7xssni.com1.z0.glb.clouddn.com/6.jpg&quot;,</span><br><span class=\"line\">        &quot;materialList&quot; : &quot;进口&quot;,</span><br><span class=\"line\">        &quot;titleStr&quot; : &quot;经典花纹墙纸&quot;,</span><br><span class=\"line\">        &quot;use&quot; : &quot;地板/家具/隔墙/衣柜&quot;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        &quot;imagesURL&quot; : &quot;http://7xssni.com1.z0.glb.clouddn.com/7.jpg&quot;,</span><br><span class=\"line\">        &quot;materialList&quot; : &quot;进口&quot;,</span><br><span class=\"line\">        &quot;titleStr&quot; : &quot;经典使用木板&quot;,</span><br><span class=\"line\">        &quot;use&quot; : &quot;地板/家具/隔墙/衣柜&quot;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        &quot;imagesURL&quot; : &quot;http://7xssni.com1.z0.glb.clouddn.com/8.jpg&quot;,</span><br><span class=\"line\">        &quot;materialList&quot; : &quot;进口&quot;,</span><br><span class=\"line\">        &quot;titleStr&quot; : &quot;非洲柚木地板&quot;,</span><br><span class=\"line\">        &quot;use&quot; : &quot;地板/家具/隔墙/衣柜&quot;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"五、常用命令：\"><a href=\"#五、常用命令：\" class=\"headerlink\" title=\"五、常用命令：\"></a>五、常用命令：</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-a, --append        Append to target file when uploading (F/SFTP)</span><br><span class=\"line\">-E, --cert CERT[:PASSWD]  Client certificate file and password (SSL)</span><br><span class=\"line\">-K, --config FILE   Read config from FILE</span><br><span class=\"line\">-C, --continue-at OFFSET  Resumed transfer OFFSET</span><br><span class=\"line\">-b, --cookie STRING/FILE  Read cookies from STRING/FILE (H)</span><br><span class=\"line\">-c, --cookie-jar FILE  Write cookies to FILE after operation (H)</span><br><span class=\"line\">-d, --data DATA     HTTP POST data (H)</span><br><span class=\"line\">-D, --dump-header FILE  Write the received headers to FILE</span><br><span class=\"line\">-f, --fail          Fail silently (no output at all) on HTTP errors (H)</span><br><span class=\"line\">-F, --form CONTENT  Specify HTTP multipart POST data (H)</span><br><span class=\"line\">-P, --ftp-port ADR  Use PORT with given address instead of PASV (F)</span><br><span class=\"line\">-G, --get           Send the -d data with a HTTP GET (H)</span><br><span class=\"line\">-g, --globoff       Disable URL sequences and ranges using &#123;&#125; and []</span><br><span class=\"line\">-H, --header LINE   Pass custom header LINE to server (H)</span><br><span class=\"line\">-I, --head          Show document info only</span><br><span class=\"line\">-h, --help          This help text</span><br><span class=\"line\">-i, --include       Include protocol headers in the output (H/F)</span><br><span class=\"line\">-k, --insecure      Allow connections to SSL sites without certs (H)</span><br><span class=\"line\">-j, --junk-session-cookies  Ignore session cookies read from file (H)</span><br><span class=\"line\">-l, --list-only     List only mode (F/POP3)</span><br><span class=\"line\">-L, --location      Follow redirects (H)</span><br><span class=\"line\">-M, --manual        Display the full manual</span><br><span class=\"line\">-m, --max-time SECONDS  Maximum time allowed for the transfer</span><br><span class=\"line\">-n, --netrc         Must read .netrc for user name and password</span><br><span class=\"line\">-N, --no-buffer     Disable buffering of the output stream</span><br><span class=\"line\">-o, --output FILE   Write to FILE instead of stdout</span><br><span class=\"line\">-U, --proxy-user USER[:PASSWORD]  Proxy user and password</span><br><span class=\"line\">    --proxy1.0 HOST[:PORT]  Use HTTP/1.0 proxy on given port</span><br><span class=\"line\">-p, --proxytunnel   Operate through a HTTP proxy tunnel (using CONNECT)</span><br><span class=\"line\">    --pubkey KEY    Public key file name (SSH)</span><br><span class=\"line\">-Q, --quote CMD     Send command(s) to server before transfer (F/SFTP)</span><br><span class=\"line\">    --random-file FILE  File for reading random data from (SSL)</span><br><span class=\"line\">-r, --range RANGE   Retrieve only the bytes within RANGE</span><br><span class=\"line\">    --raw           Do HTTP &quot;raw&quot;; no transfer decoding (H)</span><br><span class=\"line\">-e, --referer       Referer URL (H)</span><br><span class=\"line\">-J, --remote-header-name  Use the header-provided filename (H)</span><br><span class=\"line\">-O, --remote-name   Write output to a file named as the remote file</span><br><span class=\"line\">    --remote-name-all  Use the remote file name for all URLs</span><br><span class=\"line\">-R, --remote-time   Set the remote file&#x27;s time on the local output</span><br><span class=\"line\">-X, --request COMMAND  Specify request command to use</span><br><span class=\"line\">-S, --show-error    Show error. With -s, make curl show errors when they occur</span><br><span class=\"line\">-s, --silent        Silent mode (don&#x27;t output anything)</span><br><span class=\"line\">-Y, --speed-limit RATE  Stop transfers below RATE for &#x27;speed-time&#x27; secs</span><br><span class=\"line\">-y, --speed-time SECONDS  Trigger &#x27;speed-limit&#x27; abort after SECONDS (default: 30)</span><br><span class=\"line\">-t, --telnet-option OPT=VAL  Set telnet option</span><br><span class=\"line\">    --tftp-blksize VALUE  Set TFTP BLKSIZE option (must be &gt;512)</span><br><span class=\"line\">    --tftp-no-options  Do not send TFTP options requests</span><br><span class=\"line\">-z, --time-cond TIME   Transfer based on a time condition</span><br><span class=\"line\">-T, --upload-file FILE  Transfer FILE to destination</span><br><span class=\"line\">    --url URL       URL to work with</span><br><span class=\"line\">-B, --use-ascii     Use ASCII/text transfer</span><br><span class=\"line\">-u, --user USER[:PASSWORD]  Server user and password</span><br><span class=\"line\">-A, --user-agent STRING  Send User-Agent STRING to server (H)</span><br><span class=\"line\">-v, --verbose       Make the operation more talkative</span><br><span class=\"line\">-V, --version       Show version number and quit</span><br><span class=\"line\">-w, --write-out FORMAT  Use output FORMAT after completion</span><br><span class=\"line\">-q, --disable       Disable .curlrc (must be first parameter)</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{"gallery":{"图片名称":{"full_link":"http://miccall.tech/img/twx.jpg","thumb_link":"http://miccall.tech/img/twx.jpg","descr":"图片描述"}},"links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}},"_links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}}}},"excerpt":"<p>curl 真是调试利器啊！！</p>","more":"<h1 id=\"一、常用参数\"><a href=\"#一、常用参数\" class=\"headerlink\" title=\"一、常用参数\"></a>一、常用参数</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">-i：include全部HTTP报文</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">-v：显示请求过程</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">-d：HTTP POST DATA</span> </span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">-X：自定义请求方法。如-X POST</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">-H：自定义请求头 如 -H <span class=\"string\">&quot;Content-type: application/json&quot;</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">-G： --get  Send the -d data with a HTTP GET (H)</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">-o：输出</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">-s：静音模式，不输出任何东西</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">-S, --show-error    Show error. With -s, make curl show errors when they occur</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">-f, --fail         连接失败时不显示http错误 (H)</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">调试的话暂时用到这么多，其他的命令想到在更。这种东西可以直接看英文文档。</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"二、get-请求\"><a href=\"#二、get-请求\" class=\"headerlink\" title=\"二、get 请求\"></a>二、get 请求</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">如果这里的URL指向的是一个文件或者一幅图都可以直接下载到本地</span></span><br><span class=\"line\">curl &quot;http://7xssni.com1.z0.glb.clouddn.com/home.txt&quot;  </span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">显示全部信息:包括起始行、响应头、响应体</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">-i: --include       Include protocol headers <span class=\"keyword\">in</span> the output (H/F)</span></span><br><span class=\"line\">curl -i &quot;http://7xssni.com1.z0.glb.clouddn.com/home.txt&quot;</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">显示get请求全过程解析 *表示解析过程  &gt;表示请求 &lt;表示响应</span> </span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">-v: --verbose 冗长的</span></span><br><span class=\"line\">curl -v &quot;http://7xssni.com1.z0.glb.clouddn.com/home.txt&quot; #--verbose </span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"三、post请求\"><a href=\"#三、post请求\" class=\"headerlink\" title=\"三、post请求\"></a>三、post请求</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"> -d: --data DATA     HTTP POST data (H)</span></span><br><span class=\"line\">curl -d &quot;param1=value1&amp;param2=value2&quot; &quot;http://www.baidu.com&quot;</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"四、JSON-格式的-post-请求\"><a href=\"#四、JSON-格式的-post-请求\" class=\"headerlink\" title=\"四、JSON 格式的 post 请求\"></a>四、JSON 格式的 post 请求</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">-H: --header LINE   Pass custom header LINE to server (H)</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">-X: --request COMMAND  Specify request <span class=\"built_in\">command</span> to use</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">-d: --data DATA     HTTP POST data (H)</span></span><br><span class=\"line\">curl -l -H &quot;Content-type: application/json&quot; -X POST -d &#x27;&#123;&quot;phone&quot;:&quot;13521389587&quot;,&quot;password&quot;:&quot;test&quot;&#125;&#x27; http://domain/apis/users.json</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"五、实例\"><a href=\"#五、实例\" class=\"headerlink\" title=\"五、实例\"></a>五、实例</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">URL ：http://7xssni.com1.z0.glb.clouddn.com/home.txt</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;headUrl&quot; : &#123;</span><br><span class=\"line\">    &quot;headList&quot; : [</span><br><span class=\"line\">      &quot;http://7xssni.com1.z0.glb.clouddn.com/home1.jpg&quot;,</span><br><span class=\"line\">      &quot;http://7xssni.com1.z0.glb.clouddn.com/home2.jpg&quot;,</span><br><span class=\"line\">      &quot;http://7xssni.com1.z0.glb.clouddn.com/home3.jpg&quot;,</span><br><span class=\"line\">      &quot;http://7xssni.com1.z0.glb.clouddn.com/home4.jpg&quot;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &quot;homeUrl&quot; : &#123;</span><br><span class=\"line\">    &quot;dataList&quot; : [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        &quot;imagesURL&quot; : &quot;http://7xssni.com1.z0.glb.clouddn.com/1.jpg&quot;,</span><br><span class=\"line\">        &quot;materialList&quot; : &quot;进口&quot;,</span><br><span class=\"line\">        &quot;titleStr&quot; : &quot;PVC实体塑木板&quot;,</span><br><span class=\"line\">        &quot;use&quot; : &quot;地板/家具/隔墙/衣柜&quot;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        &quot;imagesURL&quot; : &quot;http://7xssni.com1.z0.glb.clouddn.com/2.jpg&quot;,</span><br><span class=\"line\">        &quot;materialList&quot; : &quot;进口&quot;,</span><br><span class=\"line\">        &quot;titleStr&quot; : &quot;3D印花地毯&quot;,</span><br><span class=\"line\">        &quot;use&quot; : &quot;地板/家具/隔墙/衣柜&quot;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        &quot;imagesURL&quot; : &quot;http://7xssni.com1.z0.glb.clouddn.com/3.jpg&quot;,</span><br><span class=\"line\">        &quot;materialList&quot; : &quot;进口&quot;,</span><br><span class=\"line\">        &quot;titleStr&quot; : &quot;金刚木板&quot;,</span><br><span class=\"line\">        &quot;use&quot; : &quot;地板/家具/隔墙/衣柜&quot;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        &quot;imagesURL&quot; : &quot;http://7xssni.com1.z0.glb.clouddn.com/4.jpg&quot;,</span><br><span class=\"line\">        &quot;materialList&quot; : &quot;进口&quot;,</span><br><span class=\"line\">        &quot;titleStr&quot; : &quot;经典菱形软包&quot;,</span><br><span class=\"line\">        &quot;use&quot; : &quot;地板/家具/隔墙/衣柜&quot;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        &quot;imagesURL&quot; : &quot;http://7xssni.com1.z0.glb.clouddn.com/5.jpg&quot;,</span><br><span class=\"line\">        &quot;materialList&quot; : &quot;进口&quot;,</span><br><span class=\"line\">        &quot;titleStr&quot; : &quot;经典防水木板&quot;,</span><br><span class=\"line\">        &quot;use&quot; : &quot;地板/家具/隔墙/衣柜&quot;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        &quot;imagesURL&quot; : &quot;http://7xssni.com1.z0.glb.clouddn.com/6.jpg&quot;,</span><br><span class=\"line\">        &quot;materialList&quot; : &quot;进口&quot;,</span><br><span class=\"line\">        &quot;titleStr&quot; : &quot;经典花纹墙纸&quot;,</span><br><span class=\"line\">        &quot;use&quot; : &quot;地板/家具/隔墙/衣柜&quot;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        &quot;imagesURL&quot; : &quot;http://7xssni.com1.z0.glb.clouddn.com/7.jpg&quot;,</span><br><span class=\"line\">        &quot;materialList&quot; : &quot;进口&quot;,</span><br><span class=\"line\">        &quot;titleStr&quot; : &quot;经典使用木板&quot;,</span><br><span class=\"line\">        &quot;use&quot; : &quot;地板/家具/隔墙/衣柜&quot;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        &quot;imagesURL&quot; : &quot;http://7xssni.com1.z0.glb.clouddn.com/8.jpg&quot;,</span><br><span class=\"line\">        &quot;materialList&quot; : &quot;进口&quot;,</span><br><span class=\"line\">        &quot;titleStr&quot; : &quot;非洲柚木地板&quot;,</span><br><span class=\"line\">        &quot;use&quot; : &quot;地板/家具/隔墙/衣柜&quot;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"五、常用命令：\"><a href=\"#五、常用命令：\" class=\"headerlink\" title=\"五、常用命令：\"></a>五、常用命令：</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-a, --append        Append to target file when uploading (F/SFTP)</span><br><span class=\"line\">-E, --cert CERT[:PASSWD]  Client certificate file and password (SSL)</span><br><span class=\"line\">-K, --config FILE   Read config from FILE</span><br><span class=\"line\">-C, --continue-at OFFSET  Resumed transfer OFFSET</span><br><span class=\"line\">-b, --cookie STRING/FILE  Read cookies from STRING/FILE (H)</span><br><span class=\"line\">-c, --cookie-jar FILE  Write cookies to FILE after operation (H)</span><br><span class=\"line\">-d, --data DATA     HTTP POST data (H)</span><br><span class=\"line\">-D, --dump-header FILE  Write the received headers to FILE</span><br><span class=\"line\">-f, --fail          Fail silently (no output at all) on HTTP errors (H)</span><br><span class=\"line\">-F, --form CONTENT  Specify HTTP multipart POST data (H)</span><br><span class=\"line\">-P, --ftp-port ADR  Use PORT with given address instead of PASV (F)</span><br><span class=\"line\">-G, --get           Send the -d data with a HTTP GET (H)</span><br><span class=\"line\">-g, --globoff       Disable URL sequences and ranges using &#123;&#125; and []</span><br><span class=\"line\">-H, --header LINE   Pass custom header LINE to server (H)</span><br><span class=\"line\">-I, --head          Show document info only</span><br><span class=\"line\">-h, --help          This help text</span><br><span class=\"line\">-i, --include       Include protocol headers in the output (H/F)</span><br><span class=\"line\">-k, --insecure      Allow connections to SSL sites without certs (H)</span><br><span class=\"line\">-j, --junk-session-cookies  Ignore session cookies read from file (H)</span><br><span class=\"line\">-l, --list-only     List only mode (F/POP3)</span><br><span class=\"line\">-L, --location      Follow redirects (H)</span><br><span class=\"line\">-M, --manual        Display the full manual</span><br><span class=\"line\">-m, --max-time SECONDS  Maximum time allowed for the transfer</span><br><span class=\"line\">-n, --netrc         Must read .netrc for user name and password</span><br><span class=\"line\">-N, --no-buffer     Disable buffering of the output stream</span><br><span class=\"line\">-o, --output FILE   Write to FILE instead of stdout</span><br><span class=\"line\">-U, --proxy-user USER[:PASSWORD]  Proxy user and password</span><br><span class=\"line\">    --proxy1.0 HOST[:PORT]  Use HTTP/1.0 proxy on given port</span><br><span class=\"line\">-p, --proxytunnel   Operate through a HTTP proxy tunnel (using CONNECT)</span><br><span class=\"line\">    --pubkey KEY    Public key file name (SSH)</span><br><span class=\"line\">-Q, --quote CMD     Send command(s) to server before transfer (F/SFTP)</span><br><span class=\"line\">    --random-file FILE  File for reading random data from (SSL)</span><br><span class=\"line\">-r, --range RANGE   Retrieve only the bytes within RANGE</span><br><span class=\"line\">    --raw           Do HTTP &quot;raw&quot;; no transfer decoding (H)</span><br><span class=\"line\">-e, --referer       Referer URL (H)</span><br><span class=\"line\">-J, --remote-header-name  Use the header-provided filename (H)</span><br><span class=\"line\">-O, --remote-name   Write output to a file named as the remote file</span><br><span class=\"line\">    --remote-name-all  Use the remote file name for all URLs</span><br><span class=\"line\">-R, --remote-time   Set the remote file&#x27;s time on the local output</span><br><span class=\"line\">-X, --request COMMAND  Specify request command to use</span><br><span class=\"line\">-S, --show-error    Show error. With -s, make curl show errors when they occur</span><br><span class=\"line\">-s, --silent        Silent mode (don&#x27;t output anything)</span><br><span class=\"line\">-Y, --speed-limit RATE  Stop transfers below RATE for &#x27;speed-time&#x27; secs</span><br><span class=\"line\">-y, --speed-time SECONDS  Trigger &#x27;speed-limit&#x27; abort after SECONDS (default: 30)</span><br><span class=\"line\">-t, --telnet-option OPT=VAL  Set telnet option</span><br><span class=\"line\">    --tftp-blksize VALUE  Set TFTP BLKSIZE option (must be &gt;512)</span><br><span class=\"line\">    --tftp-no-options  Do not send TFTP options requests</span><br><span class=\"line\">-z, --time-cond TIME   Transfer based on a time condition</span><br><span class=\"line\">-T, --upload-file FILE  Transfer FILE to destination</span><br><span class=\"line\">    --url URL       URL to work with</span><br><span class=\"line\">-B, --use-ascii     Use ASCII/text transfer</span><br><span class=\"line\">-u, --user USER[:PASSWORD]  Server user and password</span><br><span class=\"line\">-A, --user-agent STRING  Send User-Agent STRING to server (H)</span><br><span class=\"line\">-v, --verbose       Make the operation more talkative</span><br><span class=\"line\">-V, --version       Show version number and quit</span><br><span class=\"line\">-w, --write-out FORMAT  Use output FORMAT after completion</span><br><span class=\"line\">-q, --disable       Disable .curlrc (must be first parameter)</span><br></pre></td></tr></table></figure>"},{"title":"ios知识脉络梳理","date":"2014-12-19T15:34:21.000Z","thumbnail":"https://i0.hdslb.com/bfs/drawyoo/71c32ae66719b070ef7b565cc7e3c6237915e385.jpg","_content":"\n本文收录并整理了一些 iOS 开发知识盲点。\n<!-- more -->\n\n目录\n\n[TOC]\n\n\n\n## （一）、Foundation 相关知识点\n\n### 一、内存管理的思考方式\n\n#### 1、内存管理的原则：\n\n* 自己生成的对象，自己持有\n\n* 不是自己生成的对象，自己也能持有 （需要手动 retain）\n\n   ```objc\n   id obj = [NSMutableArray array]; // 取得对象的存在，但自己并不持有\n   [obj retain]; // 自己持有对象\n   ```\n\n* 不是自己持有的对象，自己无法释放\n\n* 不在需要自己持有的对象时，就要释放\n\n| 对象操作  | OC 方法                          |\n| ----- | ------------------------------ |\n| 生成并持有 | +new/+alloc/-copy/-mutableCopy |\n| 持有对象  | -retain                        |\n| 释放对象  | - release                      |\n| 废弃对象  | - dealloc                      |\n\n#### 2、autorelease：（与 release 的区别）\n\n* autorelease 可以取得对象的存在，但是自己不持有对象；\n* autorelease 可以是对象在超出指定的生存空间时能够自动并正确的释放；\n* autorelease 不是立即释放对象的，而是将该对象注册到 autoreleasepool 中，pool 结束时（drain）自动调用 release\n\n\n\n#### 3、 所有权修饰符：（一共四种）\n\n* `__weak`（__weak修饰的变量所引用的对象被废弃时，会将 nil 赋给该变量）\n\n* `__strong`\n\n* `__unsafe_unretained`\n\n* `__autoreleasing`\n\n  ​\n\n#### 4、property声明的属性与所有权修饰符的对应关系\n\n| property 声明中的属性                          | 所有权修饰符                 |\n| ---------------------------------------- | ---------------------- |\n| `assign`                                 | `__unsafe_unretained`  |\n| ``unsafe_unretained`copy` | `__unsafe_unretained` |                        |\n| `retain`                                 | `__strong`             |\n| `strong`                                 | `__strong`             |\n| `copy`                                   | `__strong`(赋值的是被复制的对象) |\n| `weak`                                   | `__weak`               |\n\n#### 5、objc使用什么机制管理对象内存？\n\n> 通过 retainCount 的机制来决定对象是否需要释放。 每次 runloop 的时候，都会检查对象的 retainCount，如果retainCount 为 0，说明该对象没有地方需要继续使用了，可以释放掉了。\n\n6、ARC通过什么方式帮助开发者管理内存？\n\n7、不手动指定autoreleasepool的前提下，一个autorealese对象在什么时刻释放？（比如在一个vc的viewDidLoad中创建）\n\n8、苹果是如何实现autoreleasepool的？\n\n### 二、block 与内存管理\n\n#### 1、使用block时什么情况会发生引用循环，如何解决？\n\n#### 2、在block内如何修改block外部变量？\n\n#### 3、使用系统的某些block api（如UIView的block版本写动画时），是否也考虑引用循环问题？\n\n### 三、关于 Copy 的一些问题\n\n#### 1、如何让自己的类用 copy 修饰符？\n\n让自己的类用 copy 修饰符：\n\n* 声明该类遵循 NSCopying 协议或者遵循 NSMutableCopying 协议\n* 实现 -copyWithZone： 方法，该方法生成并持有该对象的副本。\n\n#### 2、如何重写带关键字的 setter？\n\n```objc\n_obj = [obj copy]; // 返回一个该对象的副本\n```\n\n#### 3、用@property声明的NSString（或NSArray，NSDictionary）经常使用copy关键字，为什么？如果改用strong关键字，可能造成什么问题？\n\n\n\n#### 4、深复制（内容复制）和浅复制（指针复制）\n\n为了弄清这个概念，我们先来弄清楚在 集合与非集合类的 可变和不可变对象分别执行 copy 和 mutableCopy 操作。\n\n```objc\n/*\n * 1、无论是集合类和非集合类，只有不可变对象进行 copy 操作是浅复制，其他情况均是深复制，因为副本的结果是不\n *    可变的。其他情况副本的结果是可变的。\n * \n * 2、集合对象的内容复制仅局限于本身，对于元素来说，仍然是指针复制（浅复制）。所以，集合对象的深复制是单层\n *    深复制。\n */\n\n[immutableObject copy] // 浅复制\n[immutableObject mutableCopy] //深复制 (对集合类来说，是单层深复制)\n[mutableObject copy] //深复制 (对集合类来说，是单层深复制)\n[mutableObject mutableCopy] //深复制 (对集合类来说，是单层深复制)\n```\n\n> 关于叫复制还是叫拷贝，我觉得叫复制更为准确些，这个过程有点像 OSX 复制一个文件的副本的感觉\n>\n> [1]: https://www.zybuluo.com/MicroCai/note/50592\t\"iOS 集合的深复制与浅复制\"\n\n\n\n### 四、关于@property\n\n#### 1、@property中有哪些属性关键字？/ @property 后面可以有哪些修饰符？\n\n* 原子性：nonatomic、atomic （默认是 atomic）（atomic 需要消耗大量内存资源，故ios 不推荐使用）\n* 读写：readonly、readwrite （默认是readwrite）\n* 内存管理：strong、weak、assign、copy、unsafe_unretained（默认是 strong 或assign）\n* 重命名方法名：\n  * ~~setter=<#name#>~~不常用，也不推荐使用\n  * getter=<#name#>\n\n#### 2、@protocol 和 category 中如何使用 @property\n\n* 在 protocol 中使用 property 只会生成 setter 和 getter 方法声明,我们使用属性的目的,是希望遵守我协议的对象能实现该属性\n* category 使用 @property 也是只会生成 setter 和 getter 方法的声明,如果我们真的需要给 category 增加属性的实现,需要借助于运行时的两个函数：\n  * `objc_setAssociatedObject`\n  * `objc_getAssociatedObject`\n\n#### 3、weak属性需要在dealloc中置nil么？\n\n不需要。ARC 下无论是 strong 还是 weak 都不需要置nil，ARC 会自动帮我们做这件事情。\n\n#### 4、@synthesize和@dynamic分别有什么作用？\n\n一般情况下：成员变量 +  @synthesize = @property\n\n>1. @property有两个对应的词，一个是 @synthesize，一个是 @dynamic。如果 @synthesize和 @dynamic都没写，那么默认的就是`@syntheszie var = _var;`\n>2. @synthesize 的语义是如果你没有手动实现 setter 方法和 getter 方法，那么编译器会自动为你加上这两个方法。\n>3. @dynamic 告诉编译器：属性的 setter 与 getter 方法由用户自己实现，不自动生成。（当然对于 readonly 的属性只需提供 getter 即可）。假如一个属性被声明为 @dynamic var，然后你没有提供 @setter方法和 @getter 方法，编译的时候没问题，但是当程序运行到 `instance.var = someVar`，由于缺 setter 方法会导致程序崩溃；或者当运行到 `someVar = var` 时，由于缺 getter 方法同样会导致崩溃。编译时没问题，运行时才执行相应的方法，这就是所谓的动态绑定。\n\n\n\n#### 5、什么情况需要@synthesize\n\n* **同时重写了 setter 和 getter 时**（这种情况访问下划线变量会报错）\n* 重写了*只读属性的 getter* 时\n* 使用了 @dynamic 时\n* 在 @protocol 中定义的所有属性\n* 在 category 中定义的所有属性\n* 重载的属性\n\n#### 6、IBOutlet连出来的视图属性为什么可以被设置成weak?\n\n\n\n### 五、关于运行时 Runtime\n\nObjective-C 是一门动态语言，主要就体现在Runtime 上。\n\n#### 1、向对象发送一个消息和` objc_sendMessage(receiver, SEL：MethodID) `函数有什么关系？\n\n> [obj foo];在objc编译时，会被转意为：`objc_msgSend(obj, @selector(foo));`。\n\n\n\n#### 2、什么时候会报unrecognized（未被承认的） selector的异常？\n\n\n\n#### 3、一个objc对象的isa的指针指向什么？有什么作用？\n\n指向该对象的类对象。\n\n> @interface Chinese : People\n>\n> Chinese isa People\n\n\n\n#### 4、super 和 self 有什么区别？\n\n> super的本质是一个编译器标示符，和 self 是指向的同一个消息接受者！他们两个的不同点在于：super 会告诉编译器，调用 class 这个方法时，要去父类的方法，而不是本类里的。\n\nsuper：先找父类的方法，没有在找子类；\n\nself：先从当前类的列表里开始找，如果没有在去父类那找。\n\n\n\n#### 5、 runtime如何通过selector找到对应的IMP地址？（分别考虑类方法和实例方法）\n\n> 每一个类对象中都一个方法列表,方法列表中记录着方法的名称,方法实现,以及参数类型,其实selector本质就是方法名称,通过这个方法名称就可以在方法列表中找到对应的方法实现。\n\n```objc\nIMP methodIMP = [self methodForSelector:@selector(foo:)];\nmethodIMP(); // 所以 IMP 实际上是一个指针，此处 IMP 应该是Implementation的缩写\n```\n\n\n\n#### 6、objc中的类方法和实例方法有什么本质区别和联系？\n\n> 类方法：\n>\n> 1. 类方法是属于类对象的\n> 2. 类方法只能通过类对象调用\n> 3. 类方法中的self是类对象\n> 4. 类方法可以调用其他的类方法\n> 5. 类方法中不能访问成员变量\n> 6. 类方法中不能直接调用对象方法\n>\n> 实例方法：\n>\n> 1. 实例方法是属于实例对象的\n> 2. 实例方法只能通过实例对象调用\n> 3. 实例方法中的self是实例对象\n> 4. 实例方法中可以访问成员变量\n> 5. 实例方法中直接调用实例方法\n> 6. 实例方法中也可以调用类方法(通过类名\n\n#### 7、`_objc_msgForward`函数是做什么的，直接调用它将会发生什么？\n\n#### 8、 runtime如何实现weak变量的自动置nil？\n\n#### 9、能否向编译后得到的类中增加实例变量？能否向运行时创建的类中添加实例变量？为什么？\n\n#### 10、 IB中User Defined Runtime Attributes如何使用？\n\n\n\n\n\n### 六、RunLoop 和多线程\n\n#### 1、runloop和线程有什么关系？\n\n#### 2、runloop的mode作用是什么？\n\n#### 3、 以+ scheduledTimerWithTimeInterval...的方式触发的timer，在滑动页面上的列表时，timer会暂定回调，为什么？如何解决？\n\n#### 4、猜想runloop内部是如何实现的？\n\n#### 5、如何用GCD同步若干个异步调用？（如根据若干个url异步加载多张图片，然后在都下载完成后合成一张整图）\n\n#### 6、`dispatch_barrier_async`的作用是什么？\n\n#### 7、苹果为什么要废弃`dispatch_get_current_queue`？\n\n因为容易造成死锁\n\n#### 8、多线程原子性与非原子性、自旋锁与互斥锁的问题\n\n[1]: http://blog.csdn.net/yi_zz32/article/details/49952727\t\"多线程——原子、非原子，自旋锁和互斥锁\"\n[2]: http://blog.csdn.net/cg_lueng/article/details/50971465\t\"多线程：原子性与非原子性\"\n\n\n\n### 七、KVO、单例、代理\n\n#### 1、addObserver:forKeyPath:options:context:各个参数的作用分别是什么，observer中需要实现哪个方法才能获得KVO回调？\n\n#### 2、如何手动触发一个value的KVO\n\n#### 3、 KVC的keyPath中的集合运算符如何使用？\n\n#### 4、 KVC和KVO的keyPath一定是属性么？\n\n#### 5、何关闭默认的KVO的默认实现，并进入自定义的KVO实现？\n\n#### 6、apple用什么方式实现对一个对象的KVO？\n\n\n\n### 八、调试与 LLDB\n\n#### 1、如何调试BAD_ACCESS错误\n\n#### 2、 lldb（gdb）常用的调试命令？\n\n#### 3、BAD_ACCESS在什么情况下出现？\n\n\n\n### 九、基础知识\n\n#### 1、iOS中self.和下划线的区别？\n\n[参考链接](https://www.jianshu.com/p/4295cd39604e?utm_campaign=maleskine&utm_content=note&utm_medium=seo_notes&utm_source=recommendation)\n\n#### 2、懒加载与单例模式的区别？\n\n懒加载是重写的 get 方法，懒加载也称延迟加载，即在使用的时候才加载，不用在 viewDidLoad 里就全部分配内存，保证了用的时候在分配内存\n\n单例模式指的是某个类的对象是系统的唯一实例。\n\n\n\n","source":"_posts/2014/ios知识脉络梳理.md","raw":"---\ntitle: ios知识脉络梳理\ndate: 2014-12-19 23:34:21\ntags: \ncategories: iOS-Dev\nthumbnail: https://i0.hdslb.com/bfs/drawyoo/71c32ae66719b070ef7b565cc7e3c6237915e385.jpg\n---\n\n本文收录并整理了一些 iOS 开发知识盲点。\n<!-- more -->\n\n目录\n\n[TOC]\n\n\n\n## （一）、Foundation 相关知识点\n\n### 一、内存管理的思考方式\n\n#### 1、内存管理的原则：\n\n* 自己生成的对象，自己持有\n\n* 不是自己生成的对象，自己也能持有 （需要手动 retain）\n\n   ```objc\n   id obj = [NSMutableArray array]; // 取得对象的存在，但自己并不持有\n   [obj retain]; // 自己持有对象\n   ```\n\n* 不是自己持有的对象，自己无法释放\n\n* 不在需要自己持有的对象时，就要释放\n\n| 对象操作  | OC 方法                          |\n| ----- | ------------------------------ |\n| 生成并持有 | +new/+alloc/-copy/-mutableCopy |\n| 持有对象  | -retain                        |\n| 释放对象  | - release                      |\n| 废弃对象  | - dealloc                      |\n\n#### 2、autorelease：（与 release 的区别）\n\n* autorelease 可以取得对象的存在，但是自己不持有对象；\n* autorelease 可以是对象在超出指定的生存空间时能够自动并正确的释放；\n* autorelease 不是立即释放对象的，而是将该对象注册到 autoreleasepool 中，pool 结束时（drain）自动调用 release\n\n\n\n#### 3、 所有权修饰符：（一共四种）\n\n* `__weak`（__weak修饰的变量所引用的对象被废弃时，会将 nil 赋给该变量）\n\n* `__strong`\n\n* `__unsafe_unretained`\n\n* `__autoreleasing`\n\n  ​\n\n#### 4、property声明的属性与所有权修饰符的对应关系\n\n| property 声明中的属性                          | 所有权修饰符                 |\n| ---------------------------------------- | ---------------------- |\n| `assign`                                 | `__unsafe_unretained`  |\n| ``unsafe_unretained`copy` | `__unsafe_unretained` |                        |\n| `retain`                                 | `__strong`             |\n| `strong`                                 | `__strong`             |\n| `copy`                                   | `__strong`(赋值的是被复制的对象) |\n| `weak`                                   | `__weak`               |\n\n#### 5、objc使用什么机制管理对象内存？\n\n> 通过 retainCount 的机制来决定对象是否需要释放。 每次 runloop 的时候，都会检查对象的 retainCount，如果retainCount 为 0，说明该对象没有地方需要继续使用了，可以释放掉了。\n\n6、ARC通过什么方式帮助开发者管理内存？\n\n7、不手动指定autoreleasepool的前提下，一个autorealese对象在什么时刻释放？（比如在一个vc的viewDidLoad中创建）\n\n8、苹果是如何实现autoreleasepool的？\n\n### 二、block 与内存管理\n\n#### 1、使用block时什么情况会发生引用循环，如何解决？\n\n#### 2、在block内如何修改block外部变量？\n\n#### 3、使用系统的某些block api（如UIView的block版本写动画时），是否也考虑引用循环问题？\n\n### 三、关于 Copy 的一些问题\n\n#### 1、如何让自己的类用 copy 修饰符？\n\n让自己的类用 copy 修饰符：\n\n* 声明该类遵循 NSCopying 协议或者遵循 NSMutableCopying 协议\n* 实现 -copyWithZone： 方法，该方法生成并持有该对象的副本。\n\n#### 2、如何重写带关键字的 setter？\n\n```objc\n_obj = [obj copy]; // 返回一个该对象的副本\n```\n\n#### 3、用@property声明的NSString（或NSArray，NSDictionary）经常使用copy关键字，为什么？如果改用strong关键字，可能造成什么问题？\n\n\n\n#### 4、深复制（内容复制）和浅复制（指针复制）\n\n为了弄清这个概念，我们先来弄清楚在 集合与非集合类的 可变和不可变对象分别执行 copy 和 mutableCopy 操作。\n\n```objc\n/*\n * 1、无论是集合类和非集合类，只有不可变对象进行 copy 操作是浅复制，其他情况均是深复制，因为副本的结果是不\n *    可变的。其他情况副本的结果是可变的。\n * \n * 2、集合对象的内容复制仅局限于本身，对于元素来说，仍然是指针复制（浅复制）。所以，集合对象的深复制是单层\n *    深复制。\n */\n\n[immutableObject copy] // 浅复制\n[immutableObject mutableCopy] //深复制 (对集合类来说，是单层深复制)\n[mutableObject copy] //深复制 (对集合类来说，是单层深复制)\n[mutableObject mutableCopy] //深复制 (对集合类来说，是单层深复制)\n```\n\n> 关于叫复制还是叫拷贝，我觉得叫复制更为准确些，这个过程有点像 OSX 复制一个文件的副本的感觉\n>\n> [1]: https://www.zybuluo.com/MicroCai/note/50592\t\"iOS 集合的深复制与浅复制\"\n\n\n\n### 四、关于@property\n\n#### 1、@property中有哪些属性关键字？/ @property 后面可以有哪些修饰符？\n\n* 原子性：nonatomic、atomic （默认是 atomic）（atomic 需要消耗大量内存资源，故ios 不推荐使用）\n* 读写：readonly、readwrite （默认是readwrite）\n* 内存管理：strong、weak、assign、copy、unsafe_unretained（默认是 strong 或assign）\n* 重命名方法名：\n  * ~~setter=<#name#>~~不常用，也不推荐使用\n  * getter=<#name#>\n\n#### 2、@protocol 和 category 中如何使用 @property\n\n* 在 protocol 中使用 property 只会生成 setter 和 getter 方法声明,我们使用属性的目的,是希望遵守我协议的对象能实现该属性\n* category 使用 @property 也是只会生成 setter 和 getter 方法的声明,如果我们真的需要给 category 增加属性的实现,需要借助于运行时的两个函数：\n  * `objc_setAssociatedObject`\n  * `objc_getAssociatedObject`\n\n#### 3、weak属性需要在dealloc中置nil么？\n\n不需要。ARC 下无论是 strong 还是 weak 都不需要置nil，ARC 会自动帮我们做这件事情。\n\n#### 4、@synthesize和@dynamic分别有什么作用？\n\n一般情况下：成员变量 +  @synthesize = @property\n\n>1. @property有两个对应的词，一个是 @synthesize，一个是 @dynamic。如果 @synthesize和 @dynamic都没写，那么默认的就是`@syntheszie var = _var;`\n>2. @synthesize 的语义是如果你没有手动实现 setter 方法和 getter 方法，那么编译器会自动为你加上这两个方法。\n>3. @dynamic 告诉编译器：属性的 setter 与 getter 方法由用户自己实现，不自动生成。（当然对于 readonly 的属性只需提供 getter 即可）。假如一个属性被声明为 @dynamic var，然后你没有提供 @setter方法和 @getter 方法，编译的时候没问题，但是当程序运行到 `instance.var = someVar`，由于缺 setter 方法会导致程序崩溃；或者当运行到 `someVar = var` 时，由于缺 getter 方法同样会导致崩溃。编译时没问题，运行时才执行相应的方法，这就是所谓的动态绑定。\n\n\n\n#### 5、什么情况需要@synthesize\n\n* **同时重写了 setter 和 getter 时**（这种情况访问下划线变量会报错）\n* 重写了*只读属性的 getter* 时\n* 使用了 @dynamic 时\n* 在 @protocol 中定义的所有属性\n* 在 category 中定义的所有属性\n* 重载的属性\n\n#### 6、IBOutlet连出来的视图属性为什么可以被设置成weak?\n\n\n\n### 五、关于运行时 Runtime\n\nObjective-C 是一门动态语言，主要就体现在Runtime 上。\n\n#### 1、向对象发送一个消息和` objc_sendMessage(receiver, SEL：MethodID) `函数有什么关系？\n\n> [obj foo];在objc编译时，会被转意为：`objc_msgSend(obj, @selector(foo));`。\n\n\n\n#### 2、什么时候会报unrecognized（未被承认的） selector的异常？\n\n\n\n#### 3、一个objc对象的isa的指针指向什么？有什么作用？\n\n指向该对象的类对象。\n\n> @interface Chinese : People\n>\n> Chinese isa People\n\n\n\n#### 4、super 和 self 有什么区别？\n\n> super的本质是一个编译器标示符，和 self 是指向的同一个消息接受者！他们两个的不同点在于：super 会告诉编译器，调用 class 这个方法时，要去父类的方法，而不是本类里的。\n\nsuper：先找父类的方法，没有在找子类；\n\nself：先从当前类的列表里开始找，如果没有在去父类那找。\n\n\n\n#### 5、 runtime如何通过selector找到对应的IMP地址？（分别考虑类方法和实例方法）\n\n> 每一个类对象中都一个方法列表,方法列表中记录着方法的名称,方法实现,以及参数类型,其实selector本质就是方法名称,通过这个方法名称就可以在方法列表中找到对应的方法实现。\n\n```objc\nIMP methodIMP = [self methodForSelector:@selector(foo:)];\nmethodIMP(); // 所以 IMP 实际上是一个指针，此处 IMP 应该是Implementation的缩写\n```\n\n\n\n#### 6、objc中的类方法和实例方法有什么本质区别和联系？\n\n> 类方法：\n>\n> 1. 类方法是属于类对象的\n> 2. 类方法只能通过类对象调用\n> 3. 类方法中的self是类对象\n> 4. 类方法可以调用其他的类方法\n> 5. 类方法中不能访问成员变量\n> 6. 类方法中不能直接调用对象方法\n>\n> 实例方法：\n>\n> 1. 实例方法是属于实例对象的\n> 2. 实例方法只能通过实例对象调用\n> 3. 实例方法中的self是实例对象\n> 4. 实例方法中可以访问成员变量\n> 5. 实例方法中直接调用实例方法\n> 6. 实例方法中也可以调用类方法(通过类名\n\n#### 7、`_objc_msgForward`函数是做什么的，直接调用它将会发生什么？\n\n#### 8、 runtime如何实现weak变量的自动置nil？\n\n#### 9、能否向编译后得到的类中增加实例变量？能否向运行时创建的类中添加实例变量？为什么？\n\n#### 10、 IB中User Defined Runtime Attributes如何使用？\n\n\n\n\n\n### 六、RunLoop 和多线程\n\n#### 1、runloop和线程有什么关系？\n\n#### 2、runloop的mode作用是什么？\n\n#### 3、 以+ scheduledTimerWithTimeInterval...的方式触发的timer，在滑动页面上的列表时，timer会暂定回调，为什么？如何解决？\n\n#### 4、猜想runloop内部是如何实现的？\n\n#### 5、如何用GCD同步若干个异步调用？（如根据若干个url异步加载多张图片，然后在都下载完成后合成一张整图）\n\n#### 6、`dispatch_barrier_async`的作用是什么？\n\n#### 7、苹果为什么要废弃`dispatch_get_current_queue`？\n\n因为容易造成死锁\n\n#### 8、多线程原子性与非原子性、自旋锁与互斥锁的问题\n\n[1]: http://blog.csdn.net/yi_zz32/article/details/49952727\t\"多线程——原子、非原子，自旋锁和互斥锁\"\n[2]: http://blog.csdn.net/cg_lueng/article/details/50971465\t\"多线程：原子性与非原子性\"\n\n\n\n### 七、KVO、单例、代理\n\n#### 1、addObserver:forKeyPath:options:context:各个参数的作用分别是什么，observer中需要实现哪个方法才能获得KVO回调？\n\n#### 2、如何手动触发一个value的KVO\n\n#### 3、 KVC的keyPath中的集合运算符如何使用？\n\n#### 4、 KVC和KVO的keyPath一定是属性么？\n\n#### 5、何关闭默认的KVO的默认实现，并进入自定义的KVO实现？\n\n#### 6、apple用什么方式实现对一个对象的KVO？\n\n\n\n### 八、调试与 LLDB\n\n#### 1、如何调试BAD_ACCESS错误\n\n#### 2、 lldb（gdb）常用的调试命令？\n\n#### 3、BAD_ACCESS在什么情况下出现？\n\n\n\n### 九、基础知识\n\n#### 1、iOS中self.和下划线的区别？\n\n[参考链接](https://www.jianshu.com/p/4295cd39604e?utm_campaign=maleskine&utm_content=note&utm_medium=seo_notes&utm_source=recommendation)\n\n#### 2、懒加载与单例模式的区别？\n\n懒加载是重写的 get 方法，懒加载也称延迟加载，即在使用的时候才加载，不用在 viewDidLoad 里就全部分配内存，保证了用的时候在分配内存\n\n单例模式指的是某个类的对象是系统的唯一实例。\n\n\n\n","slug":"2014/ios知识脉络梳理","published":1,"updated":"2024-01-02T16:09:25.079Z","_id":"clqwlt7wp000juc7t89sb4dhi","comments":1,"layout":"post","photos":[],"link":"","content":"<p>本文收录并整理了一些 iOS 开发知识盲点。</p>\n<span id=\"more\"></span>\n\n<p>目录</p>\n<p>[TOC]</p>\n<h2 id=\"（一）、Foundation-相关知识点\"><a href=\"#（一）、Foundation-相关知识点\" class=\"headerlink\" title=\"（一）、Foundation 相关知识点\"></a>（一）、Foundation 相关知识点</h2><h3 id=\"一、内存管理的思考方式\"><a href=\"#一、内存管理的思考方式\" class=\"headerlink\" title=\"一、内存管理的思考方式\"></a>一、内存管理的思考方式</h3><h4 id=\"1、内存管理的原则：\"><a href=\"#1、内存管理的原则：\" class=\"headerlink\" title=\"1、内存管理的原则：\"></a>1、内存管理的原则：</h4><ul>\n<li><p>自己生成的对象，自己持有</p>\n</li>\n<li><p>不是自己生成的对象，自己也能持有 （需要手动 retain）</p>\n <figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">id</span> obj = [<span class=\"built_in\">NSMutableArray</span> array]; <span class=\"comment\">// 取得对象的存在，但自己并不持有</span></span><br><span class=\"line\">[obj <span class=\"keyword\">retain</span>]; <span class=\"comment\">// 自己持有对象</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>不是自己持有的对象，自己无法释放</p>\n</li>\n<li><p>不在需要自己持有的对象时，就要释放</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>对象操作</th>\n<th>OC 方法</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>生成并持有</td>\n<td>+new&#x2F;+alloc&#x2F;-copy&#x2F;-mutableCopy</td>\n</tr>\n<tr>\n<td>持有对象</td>\n<td>-retain</td>\n</tr>\n<tr>\n<td>释放对象</td>\n<td>- release</td>\n</tr>\n<tr>\n<td>废弃对象</td>\n<td>- dealloc</td>\n</tr>\n</tbody></table>\n<h4 id=\"2、autorelease：（与-release-的区别）\"><a href=\"#2、autorelease：（与-release-的区别）\" class=\"headerlink\" title=\"2、autorelease：（与 release 的区别）\"></a>2、autorelease：（与 release 的区别）</h4><ul>\n<li>autorelease 可以取得对象的存在，但是自己不持有对象；</li>\n<li>autorelease 可以是对象在超出指定的生存空间时能够自动并正确的释放；</li>\n<li>autorelease 不是立即释放对象的，而是将该对象注册到 autoreleasepool 中，pool 结束时（drain）自动调用 release</li>\n</ul>\n<h4 id=\"3、-所有权修饰符：（一共四种）\"><a href=\"#3、-所有权修饰符：（一共四种）\" class=\"headerlink\" title=\"3、 所有权修饰符：（一共四种）\"></a>3、 所有权修饰符：（一共四种）</h4><ul>\n<li><p><code>__weak</code>（__weak修饰的变量所引用的对象被废弃时，会将 nil 赋给该变量）</p>\n</li>\n<li><p><code>__strong</code></p>\n</li>\n<li><p><code>__unsafe_unretained</code></p>\n</li>\n<li><p><code>__autoreleasing</code></p>\n<p>​</p>\n</li>\n</ul>\n<h4 id=\"4、property声明的属性与所有权修饰符的对应关系\"><a href=\"#4、property声明的属性与所有权修饰符的对应关系\" class=\"headerlink\" title=\"4、property声明的属性与所有权修饰符的对应关系\"></a>4、property声明的属性与所有权修饰符的对应关系</h4><table>\n<thead>\n<tr>\n<th>property 声明中的属性</th>\n<th>所有权修饰符</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>assign</code></td>\n<td><code>__unsafe_unretained</code></td>\n</tr>\n<tr>\n<td>&#96;&#96;unsafe_unretained<code>copy</code></td>\n<td><code>__unsafe_unretained</code></td>\n</tr>\n<tr>\n<td><code>retain</code></td>\n<td><code>__strong</code></td>\n</tr>\n<tr>\n<td><code>strong</code></td>\n<td><code>__strong</code></td>\n</tr>\n<tr>\n<td><code>copy</code></td>\n<td><code>__strong</code>(赋值的是被复制的对象)</td>\n</tr>\n<tr>\n<td><code>weak</code></td>\n<td><code>__weak</code></td>\n</tr>\n</tbody></table>\n<h4 id=\"5、objc使用什么机制管理对象内存？\"><a href=\"#5、objc使用什么机制管理对象内存？\" class=\"headerlink\" title=\"5、objc使用什么机制管理对象内存？\"></a>5、objc使用什么机制管理对象内存？</h4><blockquote>\n<p>通过 retainCount 的机制来决定对象是否需要释放。 每次 runloop 的时候，都会检查对象的 retainCount，如果retainCount 为 0，说明该对象没有地方需要继续使用了，可以释放掉了。</p>\n</blockquote>\n<p>6、ARC通过什么方式帮助开发者管理内存？</p>\n<p>7、不手动指定autoreleasepool的前提下，一个autorealese对象在什么时刻释放？（比如在一个vc的viewDidLoad中创建）</p>\n<p>8、苹果是如何实现autoreleasepool的？</p>\n<h3 id=\"二、block-与内存管理\"><a href=\"#二、block-与内存管理\" class=\"headerlink\" title=\"二、block 与内存管理\"></a>二、block 与内存管理</h3><h4 id=\"1、使用block时什么情况会发生引用循环，如何解决？\"><a href=\"#1、使用block时什么情况会发生引用循环，如何解决？\" class=\"headerlink\" title=\"1、使用block时什么情况会发生引用循环，如何解决？\"></a>1、使用block时什么情况会发生引用循环，如何解决？</h4><h4 id=\"2、在block内如何修改block外部变量？\"><a href=\"#2、在block内如何修改block外部变量？\" class=\"headerlink\" title=\"2、在block内如何修改block外部变量？\"></a>2、在block内如何修改block外部变量？</h4><h4 id=\"3、使用系统的某些block-api（如UIView的block版本写动画时），是否也考虑引用循环问题？\"><a href=\"#3、使用系统的某些block-api（如UIView的block版本写动画时），是否也考虑引用循环问题？\" class=\"headerlink\" title=\"3、使用系统的某些block api（如UIView的block版本写动画时），是否也考虑引用循环问题？\"></a>3、使用系统的某些block api（如UIView的block版本写动画时），是否也考虑引用循环问题？</h4><h3 id=\"三、关于-Copy-的一些问题\"><a href=\"#三、关于-Copy-的一些问题\" class=\"headerlink\" title=\"三、关于 Copy 的一些问题\"></a>三、关于 Copy 的一些问题</h3><h4 id=\"1、如何让自己的类用-copy-修饰符？\"><a href=\"#1、如何让自己的类用-copy-修饰符？\" class=\"headerlink\" title=\"1、如何让自己的类用 copy 修饰符？\"></a>1、如何让自己的类用 copy 修饰符？</h4><p>让自己的类用 copy 修饰符：</p>\n<ul>\n<li>声明该类遵循 NSCopying 协议或者遵循 NSMutableCopying 协议</li>\n<li>实现 -copyWithZone： 方法，该方法生成并持有该对象的副本。</li>\n</ul>\n<h4 id=\"2、如何重写带关键字的-setter？\"><a href=\"#2、如何重写带关键字的-setter？\" class=\"headerlink\" title=\"2、如何重写带关键字的 setter？\"></a>2、如何重写带关键字的 setter？</h4><figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">_obj = [obj <span class=\"keyword\">copy</span>]; <span class=\"comment\">// 返回一个该对象的副本</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3、用-property声明的NSString（或NSArray，NSDictionary）经常使用copy关键字，为什么？如果改用strong关键字，可能造成什么问题？\"><a href=\"#3、用-property声明的NSString（或NSArray，NSDictionary）经常使用copy关键字，为什么？如果改用strong关键字，可能造成什么问题？\" class=\"headerlink\" title=\"3、用@property声明的NSString（或NSArray，NSDictionary）经常使用copy关键字，为什么？如果改用strong关键字，可能造成什么问题？\"></a>3、用@property声明的NSString（或NSArray，NSDictionary）经常使用copy关键字，为什么？如果改用strong关键字，可能造成什么问题？</h4><h4 id=\"4、深复制（内容复制）和浅复制（指针复制）\"><a href=\"#4、深复制（内容复制）和浅复制（指针复制）\" class=\"headerlink\" title=\"4、深复制（内容复制）和浅复制（指针复制）\"></a>4、深复制（内容复制）和浅复制（指针复制）</h4><p>为了弄清这个概念，我们先来弄清楚在 集合与非集合类的 可变和不可变对象分别执行 copy 和 mutableCopy 操作。</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * 1、无论是集合类和非集合类，只有不可变对象进行 copy 操作是浅复制，其他情况均是深复制，因为副本的结果是不</span></span><br><span class=\"line\"><span class=\"comment\"> *    可变的。其他情况副本的结果是可变的。</span></span><br><span class=\"line\"><span class=\"comment\"> * </span></span><br><span class=\"line\"><span class=\"comment\"> * 2、集合对象的内容复制仅局限于本身，对于元素来说，仍然是指针复制（浅复制）。所以，集合对象的深复制是单层</span></span><br><span class=\"line\"><span class=\"comment\"> *    深复制。</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\">[immutableObject <span class=\"keyword\">copy</span>] <span class=\"comment\">// 浅复制</span></span><br><span class=\"line\">[immutableObject mutableCopy] <span class=\"comment\">//深复制 (对集合类来说，是单层深复制)</span></span><br><span class=\"line\">[mutableObject <span class=\"keyword\">copy</span>] <span class=\"comment\">//深复制 (对集合类来说，是单层深复制)</span></span><br><span class=\"line\">[mutableObject mutableCopy] <span class=\"comment\">//深复制 (对集合类来说，是单层深复制)</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>关于叫复制还是叫拷贝，我觉得叫复制更为准确些，这个过程有点像 OSX 复制一个文件的副本的感觉</p>\n<p>[1]: <a href=\"https://www.zybuluo.com/MicroCai/note/50592\">https://www.zybuluo.com/MicroCai/note/50592</a>\t“iOS 集合的深复制与浅复制”</p>\n</blockquote>\n<h3 id=\"四、关于-property\"><a href=\"#四、关于-property\" class=\"headerlink\" title=\"四、关于@property\"></a>四、关于@property</h3><h4 id=\"1、-property中有哪些属性关键字？-property-后面可以有哪些修饰符？\"><a href=\"#1、-property中有哪些属性关键字？-property-后面可以有哪些修饰符？\" class=\"headerlink\" title=\"1、@property中有哪些属性关键字？&#x2F; @property 后面可以有哪些修饰符？\"></a>1、@property中有哪些属性关键字？&#x2F; @property 后面可以有哪些修饰符？</h4><ul>\n<li>原子性：nonatomic、atomic （默认是 atomic）（atomic 需要消耗大量内存资源，故ios 不推荐使用）</li>\n<li>读写：readonly、readwrite （默认是readwrite）</li>\n<li>内存管理：strong、weak、assign、copy、unsafe_unretained（默认是 strong 或assign）</li>\n<li>重命名方法名：<ul>\n<li><del>setter&#x3D;&lt;#name#&gt;</del>不常用，也不推荐使用</li>\n<li>getter&#x3D;&lt;#name#&gt;</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2、-protocol-和-category-中如何使用-property\"><a href=\"#2、-protocol-和-category-中如何使用-property\" class=\"headerlink\" title=\"2、@protocol 和 category 中如何使用 @property\"></a>2、@protocol 和 category 中如何使用 @property</h4><ul>\n<li>在 protocol 中使用 property 只会生成 setter 和 getter 方法声明,我们使用属性的目的,是希望遵守我协议的对象能实现该属性</li>\n<li>category 使用 @property 也是只会生成 setter 和 getter 方法的声明,如果我们真的需要给 category 增加属性的实现,需要借助于运行时的两个函数：<ul>\n<li><code>objc_setAssociatedObject</code></li>\n<li><code>objc_getAssociatedObject</code></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"3、weak属性需要在dealloc中置nil么？\"><a href=\"#3、weak属性需要在dealloc中置nil么？\" class=\"headerlink\" title=\"3、weak属性需要在dealloc中置nil么？\"></a>3、weak属性需要在dealloc中置nil么？</h4><p>不需要。ARC 下无论是 strong 还是 weak 都不需要置nil，ARC 会自动帮我们做这件事情。</p>\n<h4 id=\"4、-synthesize和-dynamic分别有什么作用？\"><a href=\"#4、-synthesize和-dynamic分别有什么作用？\" class=\"headerlink\" title=\"4、@synthesize和@dynamic分别有什么作用？\"></a>4、@synthesize和@dynamic分别有什么作用？</h4><p>一般情况下：成员变量 +  @synthesize &#x3D; @property</p>\n<blockquote>\n<ol>\n<li>@property有两个对应的词，一个是 @synthesize，一个是 @dynamic。如果 @synthesize和 @dynamic都没写，那么默认的就是<code>@syntheszie var = _var;</code></li>\n<li>@synthesize 的语义是如果你没有手动实现 setter 方法和 getter 方法，那么编译器会自动为你加上这两个方法。</li>\n<li>@dynamic 告诉编译器：属性的 setter 与 getter 方法由用户自己实现，不自动生成。（当然对于 readonly 的属性只需提供 getter 即可）。假如一个属性被声明为 @dynamic var，然后你没有提供 @setter方法和 @getter 方法，编译的时候没问题，但是当程序运行到 <code>instance.var = someVar</code>，由于缺 setter 方法会导致程序崩溃；或者当运行到 <code>someVar = var</code> 时，由于缺 getter 方法同样会导致崩溃。编译时没问题，运行时才执行相应的方法，这就是所谓的动态绑定。</li>\n</ol>\n</blockquote>\n<h4 id=\"5、什么情况需要-synthesize\"><a href=\"#5、什么情况需要-synthesize\" class=\"headerlink\" title=\"5、什么情况需要@synthesize\"></a>5、什么情况需要@synthesize</h4><ul>\n<li><strong>同时重写了 setter 和 getter 时</strong>（这种情况访问下划线变量会报错）</li>\n<li>重写了<em>只读属性的 getter</em> 时</li>\n<li>使用了 @dynamic 时</li>\n<li>在 @protocol 中定义的所有属性</li>\n<li>在 category 中定义的所有属性</li>\n<li>重载的属性</li>\n</ul>\n<h4 id=\"6、IBOutlet连出来的视图属性为什么可以被设置成weak\"><a href=\"#6、IBOutlet连出来的视图属性为什么可以被设置成weak\" class=\"headerlink\" title=\"6、IBOutlet连出来的视图属性为什么可以被设置成weak?\"></a>6、IBOutlet连出来的视图属性为什么可以被设置成weak?</h4><h3 id=\"五、关于运行时-Runtime\"><a href=\"#五、关于运行时-Runtime\" class=\"headerlink\" title=\"五、关于运行时 Runtime\"></a>五、关于运行时 Runtime</h3><p>Objective-C 是一门动态语言，主要就体现在Runtime 上。</p>\n<h4 id=\"1、向对象发送一个消息和objc-sendMessage-receiver-SEL：MethodID-函数有什么关系？\"><a href=\"#1、向对象发送一个消息和objc-sendMessage-receiver-SEL：MethodID-函数有什么关系？\" class=\"headerlink\" title=\"1、向对象发送一个消息和objc_sendMessage(receiver, SEL：MethodID)函数有什么关系？\"></a>1、向对象发送一个消息和<code>objc_sendMessage(receiver, SEL：MethodID)</code>函数有什么关系？</h4><blockquote>\n<p>[obj foo];在objc编译时，会被转意为：<code>objc_msgSend(obj, @selector(foo));</code>。</p>\n</blockquote>\n<h4 id=\"2、什么时候会报unrecognized（未被承认的）-selector的异常？\"><a href=\"#2、什么时候会报unrecognized（未被承认的）-selector的异常？\" class=\"headerlink\" title=\"2、什么时候会报unrecognized（未被承认的） selector的异常？\"></a>2、什么时候会报unrecognized（未被承认的） selector的异常？</h4><h4 id=\"3、一个objc对象的isa的指针指向什么？有什么作用？\"><a href=\"#3、一个objc对象的isa的指针指向什么？有什么作用？\" class=\"headerlink\" title=\"3、一个objc对象的isa的指针指向什么？有什么作用？\"></a>3、一个objc对象的isa的指针指向什么？有什么作用？</h4><p>指向该对象的类对象。</p>\n<blockquote>\n<p>@interface Chinese : People</p>\n<p>Chinese isa People</p>\n</blockquote>\n<h4 id=\"4、super-和-self-有什么区别？\"><a href=\"#4、super-和-self-有什么区别？\" class=\"headerlink\" title=\"4、super 和 self 有什么区别？\"></a>4、super 和 self 有什么区别？</h4><blockquote>\n<p>super的本质是一个编译器标示符，和 self 是指向的同一个消息接受者！他们两个的不同点在于：super 会告诉编译器，调用 class 这个方法时，要去父类的方法，而不是本类里的。</p>\n</blockquote>\n<p>super：先找父类的方法，没有在找子类；</p>\n<p>self：先从当前类的列表里开始找，如果没有在去父类那找。</p>\n<h4 id=\"5、-runtime如何通过selector找到对应的IMP地址？（分别考虑类方法和实例方法）\"><a href=\"#5、-runtime如何通过selector找到对应的IMP地址？（分别考虑类方法和实例方法）\" class=\"headerlink\" title=\"5、 runtime如何通过selector找到对应的IMP地址？（分别考虑类方法和实例方法）\"></a>5、 runtime如何通过selector找到对应的IMP地址？（分别考虑类方法和实例方法）</h4><blockquote>\n<p>每一个类对象中都一个方法列表,方法列表中记录着方法的名称,方法实现,以及参数类型,其实selector本质就是方法名称,通过这个方法名称就可以在方法列表中找到对应的方法实现。</p>\n</blockquote>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">IMP methodIMP = [<span class=\"keyword\">self</span> methodForSelector:<span class=\"keyword\">@selector</span>(foo:)];</span><br><span class=\"line\">methodIMP(); <span class=\"comment\">// 所以 IMP 实际上是一个指针，此处 IMP 应该是Implementation的缩写</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"6、objc中的类方法和实例方法有什么本质区别和联系？\"><a href=\"#6、objc中的类方法和实例方法有什么本质区别和联系？\" class=\"headerlink\" title=\"6、objc中的类方法和实例方法有什么本质区别和联系？\"></a>6、objc中的类方法和实例方法有什么本质区别和联系？</h4><blockquote>\n<p>类方法：</p>\n<ol>\n<li>类方法是属于类对象的</li>\n<li>类方法只能通过类对象调用</li>\n<li>类方法中的self是类对象</li>\n<li>类方法可以调用其他的类方法</li>\n<li>类方法中不能访问成员变量</li>\n<li>类方法中不能直接调用对象方法</li>\n</ol>\n<p>实例方法：</p>\n<ol>\n<li>实例方法是属于实例对象的</li>\n<li>实例方法只能通过实例对象调用</li>\n<li>实例方法中的self是实例对象</li>\n<li>实例方法中可以访问成员变量</li>\n<li>实例方法中直接调用实例方法</li>\n<li>实例方法中也可以调用类方法(通过类名</li>\n</ol>\n</blockquote>\n<h4 id=\"7、-objc-msgForward函数是做什么的，直接调用它将会发生什么？\"><a href=\"#7、-objc-msgForward函数是做什么的，直接调用它将会发生什么？\" class=\"headerlink\" title=\"7、_objc_msgForward函数是做什么的，直接调用它将会发生什么？\"></a>7、<code>_objc_msgForward</code>函数是做什么的，直接调用它将会发生什么？</h4><h4 id=\"8、-runtime如何实现weak变量的自动置nil？\"><a href=\"#8、-runtime如何实现weak变量的自动置nil？\" class=\"headerlink\" title=\"8、 runtime如何实现weak变量的自动置nil？\"></a>8、 runtime如何实现weak变量的自动置nil？</h4><h4 id=\"9、能否向编译后得到的类中增加实例变量？能否向运行时创建的类中添加实例变量？为什么？\"><a href=\"#9、能否向编译后得到的类中增加实例变量？能否向运行时创建的类中添加实例变量？为什么？\" class=\"headerlink\" title=\"9、能否向编译后得到的类中增加实例变量？能否向运行时创建的类中添加实例变量？为什么？\"></a>9、能否向编译后得到的类中增加实例变量？能否向运行时创建的类中添加实例变量？为什么？</h4><h4 id=\"10、-IB中User-Defined-Runtime-Attributes如何使用？\"><a href=\"#10、-IB中User-Defined-Runtime-Attributes如何使用？\" class=\"headerlink\" title=\"10、 IB中User Defined Runtime Attributes如何使用？\"></a>10、 IB中User Defined Runtime Attributes如何使用？</h4><h3 id=\"六、RunLoop-和多线程\"><a href=\"#六、RunLoop-和多线程\" class=\"headerlink\" title=\"六、RunLoop 和多线程\"></a>六、RunLoop 和多线程</h3><h4 id=\"1、runloop和线程有什么关系？\"><a href=\"#1、runloop和线程有什么关系？\" class=\"headerlink\" title=\"1、runloop和线程有什么关系？\"></a>1、runloop和线程有什么关系？</h4><h4 id=\"2、runloop的mode作用是什么？\"><a href=\"#2、runloop的mode作用是什么？\" class=\"headerlink\" title=\"2、runloop的mode作用是什么？\"></a>2、runloop的mode作用是什么？</h4><h4 id=\"3、-以-scheduledTimerWithTimeInterval…的方式触发的timer，在滑动页面上的列表时，timer会暂定回调，为什么？如何解决？\"><a href=\"#3、-以-scheduledTimerWithTimeInterval…的方式触发的timer，在滑动页面上的列表时，timer会暂定回调，为什么？如何解决？\" class=\"headerlink\" title=\"3、 以+ scheduledTimerWithTimeInterval…的方式触发的timer，在滑动页面上的列表时，timer会暂定回调，为什么？如何解决？\"></a>3、 以+ scheduledTimerWithTimeInterval…的方式触发的timer，在滑动页面上的列表时，timer会暂定回调，为什么？如何解决？</h4><h4 id=\"4、猜想runloop内部是如何实现的？\"><a href=\"#4、猜想runloop内部是如何实现的？\" class=\"headerlink\" title=\"4、猜想runloop内部是如何实现的？\"></a>4、猜想runloop内部是如何实现的？</h4><h4 id=\"5、如何用GCD同步若干个异步调用？（如根据若干个url异步加载多张图片，然后在都下载完成后合成一张整图）\"><a href=\"#5、如何用GCD同步若干个异步调用？（如根据若干个url异步加载多张图片，然后在都下载完成后合成一张整图）\" class=\"headerlink\" title=\"5、如何用GCD同步若干个异步调用？（如根据若干个url异步加载多张图片，然后在都下载完成后合成一张整图）\"></a>5、如何用GCD同步若干个异步调用？（如根据若干个url异步加载多张图片，然后在都下载完成后合成一张整图）</h4><h4 id=\"6、dispatch-barrier-async的作用是什么？\"><a href=\"#6、dispatch-barrier-async的作用是什么？\" class=\"headerlink\" title=\"6、dispatch_barrier_async的作用是什么？\"></a>6、<code>dispatch_barrier_async</code>的作用是什么？</h4><h4 id=\"7、苹果为什么要废弃dispatch-get-current-queue？\"><a href=\"#7、苹果为什么要废弃dispatch-get-current-queue？\" class=\"headerlink\" title=\"7、苹果为什么要废弃dispatch_get_current_queue？\"></a>7、苹果为什么要废弃<code>dispatch_get_current_queue</code>？</h4><p>因为容易造成死锁</p>\n<h4 id=\"8、多线程原子性与非原子性、自旋锁与互斥锁的问题\"><a href=\"#8、多线程原子性与非原子性、自旋锁与互斥锁的问题\" class=\"headerlink\" title=\"8、多线程原子性与非原子性、自旋锁与互斥锁的问题\"></a>8、多线程原子性与非原子性、自旋锁与互斥锁的问题</h4><p>[1]: <a href=\"http://blog.csdn.net/yi_zz32/article/details/49952727\">http://blog.csdn.net/yi_zz32/article/details/49952727</a>\t“多线程——原子、非原子，自旋锁和互斥锁”<br>[2]: <a href=\"http://blog.csdn.net/cg_lueng/article/details/50971465\">http://blog.csdn.net/cg_lueng/article/details/50971465</a>\t“多线程：原子性与非原子性”</p>\n<h3 id=\"七、KVO、单例、代理\"><a href=\"#七、KVO、单例、代理\" class=\"headerlink\" title=\"七、KVO、单例、代理\"></a>七、KVO、单例、代理</h3><h4 id=\"1、addObserver-forKeyPath-options-context-各个参数的作用分别是什么，observer中需要实现哪个方法才能获得KVO回调？\"><a href=\"#1、addObserver-forKeyPath-options-context-各个参数的作用分别是什么，observer中需要实现哪个方法才能获得KVO回调？\" class=\"headerlink\" title=\"1、addObserver:forKeyPath:options:context:各个参数的作用分别是什么，observer中需要实现哪个方法才能获得KVO回调？\"></a>1、addObserver:forKeyPath:options:context:各个参数的作用分别是什么，observer中需要实现哪个方法才能获得KVO回调？</h4><h4 id=\"2、如何手动触发一个value的KVO\"><a href=\"#2、如何手动触发一个value的KVO\" class=\"headerlink\" title=\"2、如何手动触发一个value的KVO\"></a>2、如何手动触发一个value的KVO</h4><h4 id=\"3、-KVC的keyPath中的集合运算符如何使用？\"><a href=\"#3、-KVC的keyPath中的集合运算符如何使用？\" class=\"headerlink\" title=\"3、 KVC的keyPath中的集合运算符如何使用？\"></a>3、 KVC的keyPath中的集合运算符如何使用？</h4><h4 id=\"4、-KVC和KVO的keyPath一定是属性么？\"><a href=\"#4、-KVC和KVO的keyPath一定是属性么？\" class=\"headerlink\" title=\"4、 KVC和KVO的keyPath一定是属性么？\"></a>4、 KVC和KVO的keyPath一定是属性么？</h4><h4 id=\"5、何关闭默认的KVO的默认实现，并进入自定义的KVO实现？\"><a href=\"#5、何关闭默认的KVO的默认实现，并进入自定义的KVO实现？\" class=\"headerlink\" title=\"5、何关闭默认的KVO的默认实现，并进入自定义的KVO实现？\"></a>5、何关闭默认的KVO的默认实现，并进入自定义的KVO实现？</h4><h4 id=\"6、apple用什么方式实现对一个对象的KVO？\"><a href=\"#6、apple用什么方式实现对一个对象的KVO？\" class=\"headerlink\" title=\"6、apple用什么方式实现对一个对象的KVO？\"></a>6、apple用什么方式实现对一个对象的KVO？</h4><h3 id=\"八、调试与-LLDB\"><a href=\"#八、调试与-LLDB\" class=\"headerlink\" title=\"八、调试与 LLDB\"></a>八、调试与 LLDB</h3><h4 id=\"1、如何调试BAD-ACCESS错误\"><a href=\"#1、如何调试BAD-ACCESS错误\" class=\"headerlink\" title=\"1、如何调试BAD_ACCESS错误\"></a>1、如何调试BAD_ACCESS错误</h4><h4 id=\"2、-lldb（gdb）常用的调试命令？\"><a href=\"#2、-lldb（gdb）常用的调试命令？\" class=\"headerlink\" title=\"2、 lldb（gdb）常用的调试命令？\"></a>2、 lldb（gdb）常用的调试命令？</h4><h4 id=\"3、BAD-ACCESS在什么情况下出现？\"><a href=\"#3、BAD-ACCESS在什么情况下出现？\" class=\"headerlink\" title=\"3、BAD_ACCESS在什么情况下出现？\"></a>3、BAD_ACCESS在什么情况下出现？</h4><h3 id=\"九、基础知识\"><a href=\"#九、基础知识\" class=\"headerlink\" title=\"九、基础知识\"></a>九、基础知识</h3><h4 id=\"1、iOS中self-和下划线的区别？\"><a href=\"#1、iOS中self-和下划线的区别？\" class=\"headerlink\" title=\"1、iOS中self.和下划线的区别？\"></a>1、iOS中self.和下划线的区别？</h4><p><a href=\"https://www.jianshu.com/p/4295cd39604e?utm_campaign=maleskine&utm_content=note&utm_medium=seo_notes&utm_source=recommendation\">参考链接</a></p>\n<h4 id=\"2、懒加载与单例模式的区别？\"><a href=\"#2、懒加载与单例模式的区别？\" class=\"headerlink\" title=\"2、懒加载与单例模式的区别？\"></a>2、懒加载与单例模式的区别？</h4><p>懒加载是重写的 get 方法，懒加载也称延迟加载，即在使用的时候才加载，不用在 viewDidLoad 里就全部分配内存，保证了用的时候在分配内存</p>\n<p>单例模式指的是某个类的对象是系统的唯一实例。</p>\n","site":{"data":{"gallery":{"图片名称":{"full_link":"http://miccall.tech/img/twx.jpg","thumb_link":"http://miccall.tech/img/twx.jpg","descr":"图片描述"}},"links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}},"_links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}}}},"excerpt":"<p>本文收录并整理了一些 iOS 开发知识盲点。</p>","more":"<p>目录</p>\n<p>[TOC]</p>\n<h2 id=\"（一）、Foundation-相关知识点\"><a href=\"#（一）、Foundation-相关知识点\" class=\"headerlink\" title=\"（一）、Foundation 相关知识点\"></a>（一）、Foundation 相关知识点</h2><h3 id=\"一、内存管理的思考方式\"><a href=\"#一、内存管理的思考方式\" class=\"headerlink\" title=\"一、内存管理的思考方式\"></a>一、内存管理的思考方式</h3><h4 id=\"1、内存管理的原则：\"><a href=\"#1、内存管理的原则：\" class=\"headerlink\" title=\"1、内存管理的原则：\"></a>1、内存管理的原则：</h4><ul>\n<li><p>自己生成的对象，自己持有</p>\n</li>\n<li><p>不是自己生成的对象，自己也能持有 （需要手动 retain）</p>\n <figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">id</span> obj = [<span class=\"built_in\">NSMutableArray</span> array]; <span class=\"comment\">// 取得对象的存在，但自己并不持有</span></span><br><span class=\"line\">[obj <span class=\"keyword\">retain</span>]; <span class=\"comment\">// 自己持有对象</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>不是自己持有的对象，自己无法释放</p>\n</li>\n<li><p>不在需要自己持有的对象时，就要释放</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>对象操作</th>\n<th>OC 方法</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>生成并持有</td>\n<td>+new&#x2F;+alloc&#x2F;-copy&#x2F;-mutableCopy</td>\n</tr>\n<tr>\n<td>持有对象</td>\n<td>-retain</td>\n</tr>\n<tr>\n<td>释放对象</td>\n<td>- release</td>\n</tr>\n<tr>\n<td>废弃对象</td>\n<td>- dealloc</td>\n</tr>\n</tbody></table>\n<h4 id=\"2、autorelease：（与-release-的区别）\"><a href=\"#2、autorelease：（与-release-的区别）\" class=\"headerlink\" title=\"2、autorelease：（与 release 的区别）\"></a>2、autorelease：（与 release 的区别）</h4><ul>\n<li>autorelease 可以取得对象的存在，但是自己不持有对象；</li>\n<li>autorelease 可以是对象在超出指定的生存空间时能够自动并正确的释放；</li>\n<li>autorelease 不是立即释放对象的，而是将该对象注册到 autoreleasepool 中，pool 结束时（drain）自动调用 release</li>\n</ul>\n<h4 id=\"3、-所有权修饰符：（一共四种）\"><a href=\"#3、-所有权修饰符：（一共四种）\" class=\"headerlink\" title=\"3、 所有权修饰符：（一共四种）\"></a>3、 所有权修饰符：（一共四种）</h4><ul>\n<li><p><code>__weak</code>（__weak修饰的变量所引用的对象被废弃时，会将 nil 赋给该变量）</p>\n</li>\n<li><p><code>__strong</code></p>\n</li>\n<li><p><code>__unsafe_unretained</code></p>\n</li>\n<li><p><code>__autoreleasing</code></p>\n<p>​</p>\n</li>\n</ul>\n<h4 id=\"4、property声明的属性与所有权修饰符的对应关系\"><a href=\"#4、property声明的属性与所有权修饰符的对应关系\" class=\"headerlink\" title=\"4、property声明的属性与所有权修饰符的对应关系\"></a>4、property声明的属性与所有权修饰符的对应关系</h4><table>\n<thead>\n<tr>\n<th>property 声明中的属性</th>\n<th>所有权修饰符</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>assign</code></td>\n<td><code>__unsafe_unretained</code></td>\n</tr>\n<tr>\n<td>&#96;&#96;unsafe_unretained<code>copy</code></td>\n<td><code>__unsafe_unretained</code></td>\n</tr>\n<tr>\n<td><code>retain</code></td>\n<td><code>__strong</code></td>\n</tr>\n<tr>\n<td><code>strong</code></td>\n<td><code>__strong</code></td>\n</tr>\n<tr>\n<td><code>copy</code></td>\n<td><code>__strong</code>(赋值的是被复制的对象)</td>\n</tr>\n<tr>\n<td><code>weak</code></td>\n<td><code>__weak</code></td>\n</tr>\n</tbody></table>\n<h4 id=\"5、objc使用什么机制管理对象内存？\"><a href=\"#5、objc使用什么机制管理对象内存？\" class=\"headerlink\" title=\"5、objc使用什么机制管理对象内存？\"></a>5、objc使用什么机制管理对象内存？</h4><blockquote>\n<p>通过 retainCount 的机制来决定对象是否需要释放。 每次 runloop 的时候，都会检查对象的 retainCount，如果retainCount 为 0，说明该对象没有地方需要继续使用了，可以释放掉了。</p>\n</blockquote>\n<p>6、ARC通过什么方式帮助开发者管理内存？</p>\n<p>7、不手动指定autoreleasepool的前提下，一个autorealese对象在什么时刻释放？（比如在一个vc的viewDidLoad中创建）</p>\n<p>8、苹果是如何实现autoreleasepool的？</p>\n<h3 id=\"二、block-与内存管理\"><a href=\"#二、block-与内存管理\" class=\"headerlink\" title=\"二、block 与内存管理\"></a>二、block 与内存管理</h3><h4 id=\"1、使用block时什么情况会发生引用循环，如何解决？\"><a href=\"#1、使用block时什么情况会发生引用循环，如何解决？\" class=\"headerlink\" title=\"1、使用block时什么情况会发生引用循环，如何解决？\"></a>1、使用block时什么情况会发生引用循环，如何解决？</h4><h4 id=\"2、在block内如何修改block外部变量？\"><a href=\"#2、在block内如何修改block外部变量？\" class=\"headerlink\" title=\"2、在block内如何修改block外部变量？\"></a>2、在block内如何修改block外部变量？</h4><h4 id=\"3、使用系统的某些block-api（如UIView的block版本写动画时），是否也考虑引用循环问题？\"><a href=\"#3、使用系统的某些block-api（如UIView的block版本写动画时），是否也考虑引用循环问题？\" class=\"headerlink\" title=\"3、使用系统的某些block api（如UIView的block版本写动画时），是否也考虑引用循环问题？\"></a>3、使用系统的某些block api（如UIView的block版本写动画时），是否也考虑引用循环问题？</h4><h3 id=\"三、关于-Copy-的一些问题\"><a href=\"#三、关于-Copy-的一些问题\" class=\"headerlink\" title=\"三、关于 Copy 的一些问题\"></a>三、关于 Copy 的一些问题</h3><h4 id=\"1、如何让自己的类用-copy-修饰符？\"><a href=\"#1、如何让自己的类用-copy-修饰符？\" class=\"headerlink\" title=\"1、如何让自己的类用 copy 修饰符？\"></a>1、如何让自己的类用 copy 修饰符？</h4><p>让自己的类用 copy 修饰符：</p>\n<ul>\n<li>声明该类遵循 NSCopying 协议或者遵循 NSMutableCopying 协议</li>\n<li>实现 -copyWithZone： 方法，该方法生成并持有该对象的副本。</li>\n</ul>\n<h4 id=\"2、如何重写带关键字的-setter？\"><a href=\"#2、如何重写带关键字的-setter？\" class=\"headerlink\" title=\"2、如何重写带关键字的 setter？\"></a>2、如何重写带关键字的 setter？</h4><figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">_obj = [obj <span class=\"keyword\">copy</span>]; <span class=\"comment\">// 返回一个该对象的副本</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3、用-property声明的NSString（或NSArray，NSDictionary）经常使用copy关键字，为什么？如果改用strong关键字，可能造成什么问题？\"><a href=\"#3、用-property声明的NSString（或NSArray，NSDictionary）经常使用copy关键字，为什么？如果改用strong关键字，可能造成什么问题？\" class=\"headerlink\" title=\"3、用@property声明的NSString（或NSArray，NSDictionary）经常使用copy关键字，为什么？如果改用strong关键字，可能造成什么问题？\"></a>3、用@property声明的NSString（或NSArray，NSDictionary）经常使用copy关键字，为什么？如果改用strong关键字，可能造成什么问题？</h4><h4 id=\"4、深复制（内容复制）和浅复制（指针复制）\"><a href=\"#4、深复制（内容复制）和浅复制（指针复制）\" class=\"headerlink\" title=\"4、深复制（内容复制）和浅复制（指针复制）\"></a>4、深复制（内容复制）和浅复制（指针复制）</h4><p>为了弄清这个概念，我们先来弄清楚在 集合与非集合类的 可变和不可变对象分别执行 copy 和 mutableCopy 操作。</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * 1、无论是集合类和非集合类，只有不可变对象进行 copy 操作是浅复制，其他情况均是深复制，因为副本的结果是不</span></span><br><span class=\"line\"><span class=\"comment\"> *    可变的。其他情况副本的结果是可变的。</span></span><br><span class=\"line\"><span class=\"comment\"> * </span></span><br><span class=\"line\"><span class=\"comment\"> * 2、集合对象的内容复制仅局限于本身，对于元素来说，仍然是指针复制（浅复制）。所以，集合对象的深复制是单层</span></span><br><span class=\"line\"><span class=\"comment\"> *    深复制。</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\">[immutableObject <span class=\"keyword\">copy</span>] <span class=\"comment\">// 浅复制</span></span><br><span class=\"line\">[immutableObject mutableCopy] <span class=\"comment\">//深复制 (对集合类来说，是单层深复制)</span></span><br><span class=\"line\">[mutableObject <span class=\"keyword\">copy</span>] <span class=\"comment\">//深复制 (对集合类来说，是单层深复制)</span></span><br><span class=\"line\">[mutableObject mutableCopy] <span class=\"comment\">//深复制 (对集合类来说，是单层深复制)</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>关于叫复制还是叫拷贝，我觉得叫复制更为准确些，这个过程有点像 OSX 复制一个文件的副本的感觉</p>\n<p>[1]: <a href=\"https://www.zybuluo.com/MicroCai/note/50592\">https://www.zybuluo.com/MicroCai/note/50592</a>\t“iOS 集合的深复制与浅复制”</p>\n</blockquote>\n<h3 id=\"四、关于-property\"><a href=\"#四、关于-property\" class=\"headerlink\" title=\"四、关于@property\"></a>四、关于@property</h3><h4 id=\"1、-property中有哪些属性关键字？-property-后面可以有哪些修饰符？\"><a href=\"#1、-property中有哪些属性关键字？-property-后面可以有哪些修饰符？\" class=\"headerlink\" title=\"1、@property中有哪些属性关键字？&#x2F; @property 后面可以有哪些修饰符？\"></a>1、@property中有哪些属性关键字？&#x2F; @property 后面可以有哪些修饰符？</h4><ul>\n<li>原子性：nonatomic、atomic （默认是 atomic）（atomic 需要消耗大量内存资源，故ios 不推荐使用）</li>\n<li>读写：readonly、readwrite （默认是readwrite）</li>\n<li>内存管理：strong、weak、assign、copy、unsafe_unretained（默认是 strong 或assign）</li>\n<li>重命名方法名：<ul>\n<li><del>setter&#x3D;&lt;#name#&gt;</del>不常用，也不推荐使用</li>\n<li>getter&#x3D;&lt;#name#&gt;</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2、-protocol-和-category-中如何使用-property\"><a href=\"#2、-protocol-和-category-中如何使用-property\" class=\"headerlink\" title=\"2、@protocol 和 category 中如何使用 @property\"></a>2、@protocol 和 category 中如何使用 @property</h4><ul>\n<li>在 protocol 中使用 property 只会生成 setter 和 getter 方法声明,我们使用属性的目的,是希望遵守我协议的对象能实现该属性</li>\n<li>category 使用 @property 也是只会生成 setter 和 getter 方法的声明,如果我们真的需要给 category 增加属性的实现,需要借助于运行时的两个函数：<ul>\n<li><code>objc_setAssociatedObject</code></li>\n<li><code>objc_getAssociatedObject</code></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"3、weak属性需要在dealloc中置nil么？\"><a href=\"#3、weak属性需要在dealloc中置nil么？\" class=\"headerlink\" title=\"3、weak属性需要在dealloc中置nil么？\"></a>3、weak属性需要在dealloc中置nil么？</h4><p>不需要。ARC 下无论是 strong 还是 weak 都不需要置nil，ARC 会自动帮我们做这件事情。</p>\n<h4 id=\"4、-synthesize和-dynamic分别有什么作用？\"><a href=\"#4、-synthesize和-dynamic分别有什么作用？\" class=\"headerlink\" title=\"4、@synthesize和@dynamic分别有什么作用？\"></a>4、@synthesize和@dynamic分别有什么作用？</h4><p>一般情况下：成员变量 +  @synthesize &#x3D; @property</p>\n<blockquote>\n<ol>\n<li>@property有两个对应的词，一个是 @synthesize，一个是 @dynamic。如果 @synthesize和 @dynamic都没写，那么默认的就是<code>@syntheszie var = _var;</code></li>\n<li>@synthesize 的语义是如果你没有手动实现 setter 方法和 getter 方法，那么编译器会自动为你加上这两个方法。</li>\n<li>@dynamic 告诉编译器：属性的 setter 与 getter 方法由用户自己实现，不自动生成。（当然对于 readonly 的属性只需提供 getter 即可）。假如一个属性被声明为 @dynamic var，然后你没有提供 @setter方法和 @getter 方法，编译的时候没问题，但是当程序运行到 <code>instance.var = someVar</code>，由于缺 setter 方法会导致程序崩溃；或者当运行到 <code>someVar = var</code> 时，由于缺 getter 方法同样会导致崩溃。编译时没问题，运行时才执行相应的方法，这就是所谓的动态绑定。</li>\n</ol>\n</blockquote>\n<h4 id=\"5、什么情况需要-synthesize\"><a href=\"#5、什么情况需要-synthesize\" class=\"headerlink\" title=\"5、什么情况需要@synthesize\"></a>5、什么情况需要@synthesize</h4><ul>\n<li><strong>同时重写了 setter 和 getter 时</strong>（这种情况访问下划线变量会报错）</li>\n<li>重写了<em>只读属性的 getter</em> 时</li>\n<li>使用了 @dynamic 时</li>\n<li>在 @protocol 中定义的所有属性</li>\n<li>在 category 中定义的所有属性</li>\n<li>重载的属性</li>\n</ul>\n<h4 id=\"6、IBOutlet连出来的视图属性为什么可以被设置成weak\"><a href=\"#6、IBOutlet连出来的视图属性为什么可以被设置成weak\" class=\"headerlink\" title=\"6、IBOutlet连出来的视图属性为什么可以被设置成weak?\"></a>6、IBOutlet连出来的视图属性为什么可以被设置成weak?</h4><h3 id=\"五、关于运行时-Runtime\"><a href=\"#五、关于运行时-Runtime\" class=\"headerlink\" title=\"五、关于运行时 Runtime\"></a>五、关于运行时 Runtime</h3><p>Objective-C 是一门动态语言，主要就体现在Runtime 上。</p>\n<h4 id=\"1、向对象发送一个消息和objc-sendMessage-receiver-SEL：MethodID-函数有什么关系？\"><a href=\"#1、向对象发送一个消息和objc-sendMessage-receiver-SEL：MethodID-函数有什么关系？\" class=\"headerlink\" title=\"1、向对象发送一个消息和objc_sendMessage(receiver, SEL：MethodID)函数有什么关系？\"></a>1、向对象发送一个消息和<code>objc_sendMessage(receiver, SEL：MethodID)</code>函数有什么关系？</h4><blockquote>\n<p>[obj foo];在objc编译时，会被转意为：<code>objc_msgSend(obj, @selector(foo));</code>。</p>\n</blockquote>\n<h4 id=\"2、什么时候会报unrecognized（未被承认的）-selector的异常？\"><a href=\"#2、什么时候会报unrecognized（未被承认的）-selector的异常？\" class=\"headerlink\" title=\"2、什么时候会报unrecognized（未被承认的） selector的异常？\"></a>2、什么时候会报unrecognized（未被承认的） selector的异常？</h4><h4 id=\"3、一个objc对象的isa的指针指向什么？有什么作用？\"><a href=\"#3、一个objc对象的isa的指针指向什么？有什么作用？\" class=\"headerlink\" title=\"3、一个objc对象的isa的指针指向什么？有什么作用？\"></a>3、一个objc对象的isa的指针指向什么？有什么作用？</h4><p>指向该对象的类对象。</p>\n<blockquote>\n<p>@interface Chinese : People</p>\n<p>Chinese isa People</p>\n</blockquote>\n<h4 id=\"4、super-和-self-有什么区别？\"><a href=\"#4、super-和-self-有什么区别？\" class=\"headerlink\" title=\"4、super 和 self 有什么区别？\"></a>4、super 和 self 有什么区别？</h4><blockquote>\n<p>super的本质是一个编译器标示符，和 self 是指向的同一个消息接受者！他们两个的不同点在于：super 会告诉编译器，调用 class 这个方法时，要去父类的方法，而不是本类里的。</p>\n</blockquote>\n<p>super：先找父类的方法，没有在找子类；</p>\n<p>self：先从当前类的列表里开始找，如果没有在去父类那找。</p>\n<h4 id=\"5、-runtime如何通过selector找到对应的IMP地址？（分别考虑类方法和实例方法）\"><a href=\"#5、-runtime如何通过selector找到对应的IMP地址？（分别考虑类方法和实例方法）\" class=\"headerlink\" title=\"5、 runtime如何通过selector找到对应的IMP地址？（分别考虑类方法和实例方法）\"></a>5、 runtime如何通过selector找到对应的IMP地址？（分别考虑类方法和实例方法）</h4><blockquote>\n<p>每一个类对象中都一个方法列表,方法列表中记录着方法的名称,方法实现,以及参数类型,其实selector本质就是方法名称,通过这个方法名称就可以在方法列表中找到对应的方法实现。</p>\n</blockquote>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">IMP methodIMP = [<span class=\"keyword\">self</span> methodForSelector:<span class=\"keyword\">@selector</span>(foo:)];</span><br><span class=\"line\">methodIMP(); <span class=\"comment\">// 所以 IMP 实际上是一个指针，此处 IMP 应该是Implementation的缩写</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"6、objc中的类方法和实例方法有什么本质区别和联系？\"><a href=\"#6、objc中的类方法和实例方法有什么本质区别和联系？\" class=\"headerlink\" title=\"6、objc中的类方法和实例方法有什么本质区别和联系？\"></a>6、objc中的类方法和实例方法有什么本质区别和联系？</h4><blockquote>\n<p>类方法：</p>\n<ol>\n<li>类方法是属于类对象的</li>\n<li>类方法只能通过类对象调用</li>\n<li>类方法中的self是类对象</li>\n<li>类方法可以调用其他的类方法</li>\n<li>类方法中不能访问成员变量</li>\n<li>类方法中不能直接调用对象方法</li>\n</ol>\n<p>实例方法：</p>\n<ol>\n<li>实例方法是属于实例对象的</li>\n<li>实例方法只能通过实例对象调用</li>\n<li>实例方法中的self是实例对象</li>\n<li>实例方法中可以访问成员变量</li>\n<li>实例方法中直接调用实例方法</li>\n<li>实例方法中也可以调用类方法(通过类名</li>\n</ol>\n</blockquote>\n<h4 id=\"7、-objc-msgForward函数是做什么的，直接调用它将会发生什么？\"><a href=\"#7、-objc-msgForward函数是做什么的，直接调用它将会发生什么？\" class=\"headerlink\" title=\"7、_objc_msgForward函数是做什么的，直接调用它将会发生什么？\"></a>7、<code>_objc_msgForward</code>函数是做什么的，直接调用它将会发生什么？</h4><h4 id=\"8、-runtime如何实现weak变量的自动置nil？\"><a href=\"#8、-runtime如何实现weak变量的自动置nil？\" class=\"headerlink\" title=\"8、 runtime如何实现weak变量的自动置nil？\"></a>8、 runtime如何实现weak变量的自动置nil？</h4><h4 id=\"9、能否向编译后得到的类中增加实例变量？能否向运行时创建的类中添加实例变量？为什么？\"><a href=\"#9、能否向编译后得到的类中增加实例变量？能否向运行时创建的类中添加实例变量？为什么？\" class=\"headerlink\" title=\"9、能否向编译后得到的类中增加实例变量？能否向运行时创建的类中添加实例变量？为什么？\"></a>9、能否向编译后得到的类中增加实例变量？能否向运行时创建的类中添加实例变量？为什么？</h4><h4 id=\"10、-IB中User-Defined-Runtime-Attributes如何使用？\"><a href=\"#10、-IB中User-Defined-Runtime-Attributes如何使用？\" class=\"headerlink\" title=\"10、 IB中User Defined Runtime Attributes如何使用？\"></a>10、 IB中User Defined Runtime Attributes如何使用？</h4><h3 id=\"六、RunLoop-和多线程\"><a href=\"#六、RunLoop-和多线程\" class=\"headerlink\" title=\"六、RunLoop 和多线程\"></a>六、RunLoop 和多线程</h3><h4 id=\"1、runloop和线程有什么关系？\"><a href=\"#1、runloop和线程有什么关系？\" class=\"headerlink\" title=\"1、runloop和线程有什么关系？\"></a>1、runloop和线程有什么关系？</h4><h4 id=\"2、runloop的mode作用是什么？\"><a href=\"#2、runloop的mode作用是什么？\" class=\"headerlink\" title=\"2、runloop的mode作用是什么？\"></a>2、runloop的mode作用是什么？</h4><h4 id=\"3、-以-scheduledTimerWithTimeInterval…的方式触发的timer，在滑动页面上的列表时，timer会暂定回调，为什么？如何解决？\"><a href=\"#3、-以-scheduledTimerWithTimeInterval…的方式触发的timer，在滑动页面上的列表时，timer会暂定回调，为什么？如何解决？\" class=\"headerlink\" title=\"3、 以+ scheduledTimerWithTimeInterval…的方式触发的timer，在滑动页面上的列表时，timer会暂定回调，为什么？如何解决？\"></a>3、 以+ scheduledTimerWithTimeInterval…的方式触发的timer，在滑动页面上的列表时，timer会暂定回调，为什么？如何解决？</h4><h4 id=\"4、猜想runloop内部是如何实现的？\"><a href=\"#4、猜想runloop内部是如何实现的？\" class=\"headerlink\" title=\"4、猜想runloop内部是如何实现的？\"></a>4、猜想runloop内部是如何实现的？</h4><h4 id=\"5、如何用GCD同步若干个异步调用？（如根据若干个url异步加载多张图片，然后在都下载完成后合成一张整图）\"><a href=\"#5、如何用GCD同步若干个异步调用？（如根据若干个url异步加载多张图片，然后在都下载完成后合成一张整图）\" class=\"headerlink\" title=\"5、如何用GCD同步若干个异步调用？（如根据若干个url异步加载多张图片，然后在都下载完成后合成一张整图）\"></a>5、如何用GCD同步若干个异步调用？（如根据若干个url异步加载多张图片，然后在都下载完成后合成一张整图）</h4><h4 id=\"6、dispatch-barrier-async的作用是什么？\"><a href=\"#6、dispatch-barrier-async的作用是什么？\" class=\"headerlink\" title=\"6、dispatch_barrier_async的作用是什么？\"></a>6、<code>dispatch_barrier_async</code>的作用是什么？</h4><h4 id=\"7、苹果为什么要废弃dispatch-get-current-queue？\"><a href=\"#7、苹果为什么要废弃dispatch-get-current-queue？\" class=\"headerlink\" title=\"7、苹果为什么要废弃dispatch_get_current_queue？\"></a>7、苹果为什么要废弃<code>dispatch_get_current_queue</code>？</h4><p>因为容易造成死锁</p>\n<h4 id=\"8、多线程原子性与非原子性、自旋锁与互斥锁的问题\"><a href=\"#8、多线程原子性与非原子性、自旋锁与互斥锁的问题\" class=\"headerlink\" title=\"8、多线程原子性与非原子性、自旋锁与互斥锁的问题\"></a>8、多线程原子性与非原子性、自旋锁与互斥锁的问题</h4><p>[1]: <a href=\"http://blog.csdn.net/yi_zz32/article/details/49952727\">http://blog.csdn.net/yi_zz32/article/details/49952727</a>\t“多线程——原子、非原子，自旋锁和互斥锁”<br>[2]: <a href=\"http://blog.csdn.net/cg_lueng/article/details/50971465\">http://blog.csdn.net/cg_lueng/article/details/50971465</a>\t“多线程：原子性与非原子性”</p>\n<h3 id=\"七、KVO、单例、代理\"><a href=\"#七、KVO、单例、代理\" class=\"headerlink\" title=\"七、KVO、单例、代理\"></a>七、KVO、单例、代理</h3><h4 id=\"1、addObserver-forKeyPath-options-context-各个参数的作用分别是什么，observer中需要实现哪个方法才能获得KVO回调？\"><a href=\"#1、addObserver-forKeyPath-options-context-各个参数的作用分别是什么，observer中需要实现哪个方法才能获得KVO回调？\" class=\"headerlink\" title=\"1、addObserver:forKeyPath:options:context:各个参数的作用分别是什么，observer中需要实现哪个方法才能获得KVO回调？\"></a>1、addObserver:forKeyPath:options:context:各个参数的作用分别是什么，observer中需要实现哪个方法才能获得KVO回调？</h4><h4 id=\"2、如何手动触发一个value的KVO\"><a href=\"#2、如何手动触发一个value的KVO\" class=\"headerlink\" title=\"2、如何手动触发一个value的KVO\"></a>2、如何手动触发一个value的KVO</h4><h4 id=\"3、-KVC的keyPath中的集合运算符如何使用？\"><a href=\"#3、-KVC的keyPath中的集合运算符如何使用？\" class=\"headerlink\" title=\"3、 KVC的keyPath中的集合运算符如何使用？\"></a>3、 KVC的keyPath中的集合运算符如何使用？</h4><h4 id=\"4、-KVC和KVO的keyPath一定是属性么？\"><a href=\"#4、-KVC和KVO的keyPath一定是属性么？\" class=\"headerlink\" title=\"4、 KVC和KVO的keyPath一定是属性么？\"></a>4、 KVC和KVO的keyPath一定是属性么？</h4><h4 id=\"5、何关闭默认的KVO的默认实现，并进入自定义的KVO实现？\"><a href=\"#5、何关闭默认的KVO的默认实现，并进入自定义的KVO实现？\" class=\"headerlink\" title=\"5、何关闭默认的KVO的默认实现，并进入自定义的KVO实现？\"></a>5、何关闭默认的KVO的默认实现，并进入自定义的KVO实现？</h4><h4 id=\"6、apple用什么方式实现对一个对象的KVO？\"><a href=\"#6、apple用什么方式实现对一个对象的KVO？\" class=\"headerlink\" title=\"6、apple用什么方式实现对一个对象的KVO？\"></a>6、apple用什么方式实现对一个对象的KVO？</h4><h3 id=\"八、调试与-LLDB\"><a href=\"#八、调试与-LLDB\" class=\"headerlink\" title=\"八、调试与 LLDB\"></a>八、调试与 LLDB</h3><h4 id=\"1、如何调试BAD-ACCESS错误\"><a href=\"#1、如何调试BAD-ACCESS错误\" class=\"headerlink\" title=\"1、如何调试BAD_ACCESS错误\"></a>1、如何调试BAD_ACCESS错误</h4><h4 id=\"2、-lldb（gdb）常用的调试命令？\"><a href=\"#2、-lldb（gdb）常用的调试命令？\" class=\"headerlink\" title=\"2、 lldb（gdb）常用的调试命令？\"></a>2、 lldb（gdb）常用的调试命令？</h4><h4 id=\"3、BAD-ACCESS在什么情况下出现？\"><a href=\"#3、BAD-ACCESS在什么情况下出现？\" class=\"headerlink\" title=\"3、BAD_ACCESS在什么情况下出现？\"></a>3、BAD_ACCESS在什么情况下出现？</h4><h3 id=\"九、基础知识\"><a href=\"#九、基础知识\" class=\"headerlink\" title=\"九、基础知识\"></a>九、基础知识</h3><h4 id=\"1、iOS中self-和下划线的区别？\"><a href=\"#1、iOS中self-和下划线的区别？\" class=\"headerlink\" title=\"1、iOS中self.和下划线的区别？\"></a>1、iOS中self.和下划线的区别？</h4><p><a href=\"https://www.jianshu.com/p/4295cd39604e?utm_campaign=maleskine&utm_content=note&utm_medium=seo_notes&utm_source=recommendation\">参考链接</a></p>\n<h4 id=\"2、懒加载与单例模式的区别？\"><a href=\"#2、懒加载与单例模式的区别？\" class=\"headerlink\" title=\"2、懒加载与单例模式的区别？\"></a>2、懒加载与单例模式的区别？</h4><p>懒加载是重写的 get 方法，懒加载也称延迟加载，即在使用的时候才加载，不用在 viewDidLoad 里就全部分配内存，保证了用的时候在分配内存</p>\n<p>单例模式指的是某个类的对象是系统的唯一实例。</p>"},{"title":"Xcode 环境变量","date":"2015-04-13T10:52:04.000Z","_content":"\n在build 过程中，要想观察所有已存在的环境变量，你可以在 Build Phases 中添加一个 “Run Script”，并勾选上 “Show environment variables in build log”。\n<!-- more -->\n\n```sh\nPhaseScriptExecution Run\\ Script /Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/Script-993355071C92B75C004569A0.sh\n    cd \"/Users/home/Desktop/Learning/codebase/My TableView/SelfSizedCellByCodeExample\"\n    export ACTION=build\n    export AD_HOC_CODE_SIGNING_ALLOWED=NO\n    export ALTERNATE_GROUP=staff\n    export ALTERNATE_MODE=u+w,go-w,a+rX\n    export ALTERNATE_OWNER=home\n    export ALWAYS_SEARCH_USER_PATHS=NO\n    export ALWAYS_USE_SEPARATE_HEADERMAPS=NO\n    export APPLE_INTERNAL_DEVELOPER_DIR=/AppleInternal/Developer\n    export APPLE_INTERNAL_DIR=/AppleInternal\n    export APPLE_INTERNAL_DOCUMENTATION_DIR=/AppleInternal/Documentation\n    export APPLE_INTERNAL_LIBRARY_DIR=/AppleInternal/Library\n    export APPLE_INTERNAL_TOOLS=/AppleInternal/Developer/Tools\n    export APPLICATION_EXTENSION_API_ONLY=NO\n    export APPLY_RULES_IN_COPY_FILES=NO\n    export ARCHS=arm64\n    export ARCHS_STANDARD=\"armv7 arm64\"\n    export ARCHS_STANDARD_32_64_BIT=\"armv7 arm64\"\n    export ARCHS_STANDARD_32_BIT=armv7\n    export ARCHS_STANDARD_64_BIT=arm64\n    export ARCHS_STANDARD_INCLUDING_64_BIT=\"armv7 arm64\"\n    export ARCHS_UNIVERSAL_IPHONE_OS=\"armv7 arm64\"\n    export ASSETCATALOG_COMPILER_APPICON_NAME=AppIcon\n    export AVAILABLE_PLATFORMS=\"watchos iphonesimulator macosx appletvsimulator watchsimulator appletvos iphoneos\"\n    export BITCODE_GENERATION_MODE=marker\n    export BUILD_ACTIVE_RESOURCES_ONLY=YES\n    export BUILD_COMPONENTS=\"headers build\"\n    export BUILD_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products\n    export BUILD_ROOT=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products\n    export BUILD_STYLE=\n    export BUILD_VARIANTS=normal\n    export BUILT_PRODUCTS_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products/Debug-iphoneos\n    export CACHE_ROOT=/var/folders/vp/gh5sjvr13k5_r7tb5_n8y92c0000gn/C/com.apple.DeveloperTools/7.2.1-7C1002/Xcode\n    export CCHROOT=/var/folders/vp/gh5sjvr13k5_r7tb5_n8y92c0000gn/C/com.apple.DeveloperTools/7.2.1-7C1002/Xcode\n    export CHMOD=/bin/chmod\n    export CHOWN=/usr/sbin/chown\n    export CLANG_CXX_LANGUAGE_STANDARD=gnu++0x\n    export CLANG_CXX_LIBRARY=libc++\n    export CLANG_ENABLE_MODULES=YES\n    export CLANG_ENABLE_OBJC_ARC=YES\n    export CLANG_MODULES_BUILD_SESSION_FILE=/Users/home/Library/Developer/Xcode/DerivedData/ModuleCache/Session.modulevalidation\n    export CLANG_WARN_BOOL_CONVERSION=YES\n    export CLANG_WARN_CONSTANT_CONVERSION=YES\n    export CLANG_WARN_DIRECT_OBJC_ISA_USAGE=YES_ERROR\n    export CLANG_WARN_EMPTY_BODY=YES\n    export CLANG_WARN_ENUM_CONVERSION=YES\n    export CLANG_WARN_INT_CONVERSION=YES\n    export CLANG_WARN_OBJC_ROOT_CLASS=YES_ERROR\n    export CLANG_WARN_UNREACHABLE_CODE=YES\n    export CLANG_WARN__DUPLICATE_METHOD_MATCH=YES\n    export CLASS_FILE_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/JavaClasses\n    export CLEAN_PRECOMPS=YES\n    export CLONE_HEADERS=NO\n    export CODESIGNING_FOLDER_PATH=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products/Debug-iphoneos/SelfSizedCellByCodeExample.app\n    export CODE_SIGNING_ALLOWED=YES\n    export CODE_SIGNING_REQUIRED=YES\n    export CODE_SIGN_CONTEXT_CLASS=XCiPhoneOSCodeSignContext\n    export CODE_SIGN_IDENTITY=\"iPhone Developer\"\n    export COLOR_DIAGNOSTICS=NO\n    export COMBINE_HIDPI_IMAGES=NO\n    export COMMAND_MODE=legacy\n    export COMPOSITE_SDK_DIRS=/var/folders/vp/gh5sjvr13k5_r7tb5_n8y92c0000gn/C/com.apple.DeveloperTools/7.2.1-7C1002/Xcode/CompositeSDKs\n    export COMPRESS_PNG_FILES=YES\n    export CONFIGURATION=Debug\n    export CONFIGURATION_BUILD_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products/Debug-iphoneos\n    export CONFIGURATION_TEMP_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos\n    export CONTENTS_FOLDER_PATH=SelfSizedCellByCodeExample.app\n    export COPYING_PRESERVES_HFS_DATA=NO\n    export COPY_HEADERS_RUN_UNIFDEF=NO\n    export COPY_PHASE_STRIP=NO\n    export COPY_RESOURCES_FROM_STATIC_FRAMEWORKS=YES\n    export CORRESPONDING_SIMULATOR_PLATFORM_DIR=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform\n    export CORRESPONDING_SIMULATOR_PLATFORM_NAME=iphonesimulator\n    export CORRESPONDING_SIMULATOR_SDK_DIR=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator9.2.sdk\n    export CORRESPONDING_SIMULATOR_SDK_NAME=iphonesimulator9.2\n    export CP=/bin/cp\n    export CREATE_INFOPLIST_SECTION_IN_BINARY=NO\n    export CURRENT_ARCH=arm64\n    export CURRENT_VARIANT=normal\n    export DEAD_CODE_STRIPPING=YES\n    export DEBUGGING_SYMBOLS=YES\n    export DEBUG_INFORMATION_FORMAT=dwarf\n    export DEFAULT_COMPILER=com.apple.compilers.llvm.clang.1_0\n    export DEFAULT_KEXT_INSTALL_PATH=/System/Library/Extensions\n    export DEFINES_MODULE=NO\n    export DEPLOYMENT_LOCATION=NO\n    export DEPLOYMENT_POSTPROCESSING=NO\n    export DEPLOYMENT_TARGET_CLANG_ENV_NAME=IPHONEOS_DEPLOYMENT_TARGET\n    export DEPLOYMENT_TARGET_CLANG_FLAG_NAME=miphoneos-version-min\n    export DEPLOYMENT_TARGET_CLANG_FLAG_PREFIX=-miphoneos-version-min=\n    export DEPLOYMENT_TARGET_SETTING_NAME=IPHONEOS_DEPLOYMENT_TARGET\n    export DEPLOYMENT_TARGET_SUGGESTED_VALUES=\"6.0 6.1 7.0 7.1 8.0 8.1 8.2 8.3 8.4 9.0 9.1 9.2\"\n    export DERIVED_FILES_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/DerivedSources\n    export DERIVED_FILE_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/DerivedSources\n    export DERIVED_SOURCES_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/DerivedSources\n    export DEVELOPER_APPLICATIONS_DIR=/Applications/Xcode.app/Contents/Developer/Applications\n    export DEVELOPER_BIN_DIR=/Applications/Xcode.app/Contents/Developer/usr/bin\n    export DEVELOPER_DIR=/Applications/Xcode.app/Contents/Developer\n    export DEVELOPER_FRAMEWORKS_DIR=/Applications/Xcode.app/Contents/Developer/Library/Frameworks\n    export DEVELOPER_FRAMEWORKS_DIR_QUOTED=/Applications/Xcode.app/Contents/Developer/Library/Frameworks\n    export DEVELOPER_LIBRARY_DIR=/Applications/Xcode.app/Contents/Developer/Library\n    export DEVELOPER_SDK_DIR=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs\n    export DEVELOPER_TOOLS_DIR=/Applications/Xcode.app/Contents/Developer/Tools\n    export DEVELOPER_USR_DIR=/Applications/Xcode.app/Contents/Developer/usr\n    export DEVELOPMENT_LANGUAGE=English\n    export DOCUMENTATION_FOLDER_PATH=SelfSizedCellByCodeExample.app/English.lproj/Documentation\n    export DO_HEADER_SCANNING_IN_JAM=NO\n    export DSTROOT=/tmp/SelfSizedCellByCodeExample.dst\n    export DT_TOOLCHAIN_DIR=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain\n    export DWARF_DSYM_FILE_NAME=SelfSizedCellByCodeExample.app.dSYM\n    export DWARF_DSYM_FILE_SHOULD_ACCOMPANY_PRODUCT=NO\n    export DWARF_DSYM_FOLDER_PATH=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products/Debug-iphoneos\n    export EFFECTIVE_PLATFORM_NAME=-iphoneos\n    export EMBEDDED_CONTENT_CONTAINS_SWIFT=NO\n    export EMBEDDED_PROFILE_NAME=embedded.mobileprovision\n    export EMBED_ASSET_PACKS_IN_PRODUCT_BUNDLE=NO\n    export ENABLE_BITCODE=YES\n    export ENABLE_HEADER_DEPENDENCIES=YES\n    export ENABLE_ON_DEMAND_RESOURCES=YES\n    export ENABLE_STRICT_OBJC_MSGSEND=YES\n    export ENABLE_TESTABILITY=YES\n    export ENTITLEMENTS_ALLOWED=YES\n    export ENTITLEMENTS_REQUIRED=YES\n    export EXCLUDED_INSTALLSRC_SUBDIRECTORY_PATTERNS=\".DS_Store .svn .git .hg CVS\"\n    export EXCLUDED_RECURSIVE_SEARCH_PATH_SUBDIRECTORIES=\"*.nib *.lproj *.framework *.gch *.xcode* *.xcassets (*) .DS_Store CVS .svn .git .hg *.pbproj *.pbxproj\"\n    export EXECUTABLES_FOLDER_PATH=SelfSizedCellByCodeExample.app/Executables\n    export EXECUTABLE_FOLDER_PATH=SelfSizedCellByCodeExample.app\n    export EXECUTABLE_NAME=SelfSizedCellByCodeExample\n    export EXECUTABLE_PATH=SelfSizedCellByCodeExample.app/SelfSizedCellByCodeExample\n    export EXPANDED_CODE_SIGN_IDENTITY=54D2584F0CDFF507E70F191FC851A7D39B24F29B\n    export EXPANDED_CODE_SIGN_IDENTITY_NAME=\"iPhone Developer: Jing Yang (KEPL6DZH42)\"\n    export EXPANDED_PROVISIONING_PROFILE=f2d6f047-08d8-4627-a967-585e63aa876a\n    export FILE_LIST=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/Objects/LinkFileList\n    export FIXED_FILES_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/FixedFiles\n    export FRAMEWORKS_FOLDER_PATH=SelfSizedCellByCodeExample.app/Frameworks\n    export FRAMEWORK_FLAG_PREFIX=-framework\n    export FRAMEWORK_SEARCH_PATHS=\"/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products/Debug-iphoneos \"\n    export FRAMEWORK_VERSION=A\n    export FULL_PRODUCT_NAME=SelfSizedCellByCodeExample.app\n    export GCC3_VERSION=3.3\n    export GCC_C_LANGUAGE_STANDARD=gnu99\n    export GCC_DYNAMIC_NO_PIC=NO\n    export GCC_INLINES_ARE_PRIVATE_EXTERN=YES\n    export GCC_NO_COMMON_BLOCKS=YES\n    export GCC_OPTIMIZATION_LEVEL=0\n    export GCC_PFE_FILE_C_DIALECTS=\"c objective-c c++ objective-c++\"\n    export GCC_PREPROCESSOR_DEFINITIONS=\"DEBUG=1 \"\n    export GCC_SYMBOLS_PRIVATE_EXTERN=NO\n    export GCC_THUMB_SUPPORT=YES\n    export GCC_TREAT_WARNINGS_AS_ERRORS=NO\n    export GCC_VERSION=com.apple.compilers.llvm.clang.1_0\n    export GCC_VERSION_IDENTIFIER=com_apple_compilers_llvm_clang_1_0\n    export GCC_WARN_64_TO_32_BIT_CONVERSION=YES\n    export GCC_WARN_ABOUT_RETURN_TYPE=YES_ERROR\n    export GCC_WARN_UNDECLARED_SELECTOR=YES\n    export GCC_WARN_UNINITIALIZED_AUTOS=YES_AGGRESSIVE\n    export GCC_WARN_UNUSED_FUNCTION=YES\n    export GCC_WARN_UNUSED_VARIABLE=YES\n    export GENERATE_MASTER_OBJECT_FILE=NO\n    export GENERATE_PKGINFO_FILE=YES\n    export GENERATE_PROFILING_CODE=NO\n    export GID=20\n    export GROUP=staff\n    export HEADERMAP_INCLUDES_FLAT_ENTRIES_FOR_TARGET_BEING_BUILT=YES\n    export HEADERMAP_INCLUDES_FRAMEWORK_ENTRIES_FOR_ALL_PRODUCT_TYPES=YES\n    export HEADERMAP_INCLUDES_NONPUBLIC_NONPRIVATE_HEADERS=YES\n    export HEADERMAP_INCLUDES_PROJECT_HEADERS=YES\n    export HEADERMAP_USES_FRAMEWORK_PREFIX_ENTRIES=YES\n    export HEADERMAP_USES_VFS=NO\n    export HEADER_SEARCH_PATHS=\"/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products/Debug-iphoneos/include \"\n    export HIDE_BITCODE_SYMBOLS=YES\n    export HOME=/Users/home\n    export ICONV=/usr/bin/iconv\n    export INFOPLIST_EXPAND_BUILD_SETTINGS=YES\n    export INFOPLIST_FILE=SelfSizedCellByCodeExample/Info.plist\n    export INFOPLIST_OUTPUT_FORMAT=binary\n    export INFOPLIST_PATH=SelfSizedCellByCodeExample.app/Info.plist\n    export INFOPLIST_PREPROCESS=NO\n    export INFOSTRINGS_PATH=SelfSizedCellByCodeExample.app/English.lproj/InfoPlist.strings\n    export INSTALL_DIR=/tmp/SelfSizedCellByCodeExample.dst/Applications\n    export INSTALL_GROUP=staff\n    export INSTALL_MODE_FLAG=u+w,go-w,a+rX\n    export INSTALL_OWNER=home\n    export INSTALL_PATH=/Applications\n    export INSTALL_ROOT=/tmp/SelfSizedCellByCodeExample.dst\n    export IPHONEOS_DEPLOYMENT_TARGET=7.0\n    export JAVAC_DEFAULT_FLAGS=\"-J-Xms64m -J-XX:NewSize=4M -J-Dfile.encoding=UTF8\"\n    export JAVA_APP_STUB=/System/Library/Frameworks/JavaVM.framework/Resources/MacOS/JavaApplicationStub\n    export JAVA_ARCHIVE_CLASSES=YES\n    export JAVA_ARCHIVE_TYPE=JAR\n    export JAVA_COMPILER=/usr/bin/javac\n    export JAVA_FOLDER_PATH=SelfSizedCellByCodeExample.app/Java\n    export JAVA_FRAMEWORK_RESOURCES_DIRS=Resources\n    export JAVA_JAR_FLAGS=cv\n    export JAVA_SOURCE_SUBDIR=.\n    export JAVA_USE_DEPENDENCIES=YES\n    export JAVA_ZIP_FLAGS=-urg\n    export JIKES_DEFAULT_FLAGS=\"+E +OLDCSO\"\n    export KEEP_PRIVATE_EXTERNS=NO\n    export LD_DEPENDENCY_INFO_FILE=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/Objects-normal/arm64/SelfSizedCellByCodeExample_dependency_info.dat\n    export LD_GENERATE_MAP_FILE=NO\n    export LD_MAP_FILE_PATH=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/SelfSizedCellByCodeExample-LinkMap-normal-arm64.txt\n    export LD_NO_PIE=NO\n    export LD_QUOTE_LINKER_ARGUMENTS_FOR_COMPILER_DRIVER=YES\n    export LD_RUNPATH_SEARCH_PATHS=\" @executable_path/Frameworks\"\n    export LEGACY_DEVELOPER_DIR=/Applications/Xcode.app/Contents/PlugIns/Xcode3Core.ideplugin/Contents/SharedSupport/Developer\n    export LEX=lex\n    export LIBRARY_FLAG_NOSPACE=YES\n    export LIBRARY_FLAG_PREFIX=-l\n    export LIBRARY_KEXT_INSTALL_PATH=/Library/Extensions\n    export LIBRARY_SEARCH_PATHS=\"/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products/Debug-iphoneos \"\n    export LINKER_DISPLAYS_MANGLED_NAMES=NO\n    export LINK_FILE_LIST_normal_arm64=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/Objects-normal/arm64/SelfSizedCellByCodeExample.LinkFileList\n    export LINK_WITH_STANDARD_LIBRARIES=YES\n    export LOCALIZABLE_CONTENT_DIR=\n    export LOCALIZED_RESOURCES_FOLDER_PATH=SelfSizedCellByCodeExample.app/English.lproj\n    export LOCAL_ADMIN_APPS_DIR=/Applications/Utilities\n    export LOCAL_APPS_DIR=/Applications\n    export LOCAL_DEVELOPER_DIR=/Library/Developer\n    export LOCAL_LIBRARY_DIR=/Library\n    export LOCROOT=\n    export LOCSYMROOT=\n    export MACH_O_TYPE=mh_execute\n    export MAC_OS_X_PRODUCT_BUILD_VERSION=15D21\n    export MAC_OS_X_VERSION_ACTUAL=101103\n    export MAC_OS_X_VERSION_MAJOR=101100\n    export MAC_OS_X_VERSION_MINOR=1103\n    export MODULE_CACHE_DIR=/Users/home/Library/Developer/Xcode/DerivedData/ModuleCache\n    export MTL_ENABLE_DEBUG_INFO=YES\n    export NATIVE_ARCH=armv7\n    export NATIVE_ARCH_32_BIT=i386\n    export NATIVE_ARCH_64_BIT=x86_64\n    export NATIVE_ARCH_ACTUAL=x86_64\n    export NO_COMMON=YES\n    export OBJECT_FILE_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/Objects\n    export OBJECT_FILE_DIR_normal=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/Objects-normal\n    export OBJROOT=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates\n    export ONLY_ACTIVE_ARCH=YES\n    export OPTIMIZATION_LEVEL=0\n    export OS=MACOS\n    export OSAC=/usr/bin/osacompile\n    export PACKAGE_TYPE=com.apple.package-type.wrapper.application\n    export PASCAL_STRINGS=YES\n    export PATH=\"/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin:/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/libexec:/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin:/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/local/bin:/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/usr/bin:/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/usr/local/bin:/Applications/Xcode.app/Contents/Developer/usr/bin:/Applications/Xcode.app/Contents/Developer/usr/local/bin:/Applications/Xcode.app/Contents/Developer/Tools:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin\"\n    export PATH_PREFIXES_EXCLUDED_FROM_HEADER_DEPENDENCIES=\"/usr/include /usr/local/include /System/Library/Frameworks /System/Library/PrivateFrameworks /Applications/Xcode.app/Contents/Developer/Headers /Applications/Xcode.app/Contents/Developer/SDKs /Applications/Xcode.app/Contents/Developer/Platforms\"\n    export PBDEVELOPMENTPLIST_PATH=SelfSizedCellByCodeExample.app/pbdevelopment.plist\n    export PFE_FILE_C_DIALECTS=objective-c\n    export PKGINFO_FILE_PATH=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/PkgInfo\n    export PKGINFO_PATH=SelfSizedCellByCodeExample.app/PkgInfo\n    export PLATFORM_DEVELOPER_APPLICATIONS_DIR=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/Applications\n    export PLATFORM_DEVELOPER_BIN_DIR=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin\n    export PLATFORM_DEVELOPER_LIBRARY_DIR=/Applications/Xcode.app/Contents/PlugIns/Xcode3Core.ideplugin/Contents/SharedSupport/Developer/Library\n    export PLATFORM_DEVELOPER_SDK_DIR=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs\n    export PLATFORM_DEVELOPER_TOOLS_DIR=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/Tools\n    export PLATFORM_DEVELOPER_USR_DIR=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr\n    export PLATFORM_DIR=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform\n    export PLATFORM_DISPLAY_NAME=iOS\n    export PLATFORM_NAME=iphoneos\n    export PLATFORM_PREFERRED_ARCH=arm64\n    export PLATFORM_PRODUCT_BUILD_VERSION=13C75\n    export PLIST_FILE_OUTPUT_FORMAT=binary\n    export PLUGINS_FOLDER_PATH=SelfSizedCellByCodeExample.app/PlugIns\n    export PRECOMPS_INCLUDE_HEADERS_FROM_BUILT_PRODUCTS_DIR=YES\n    export PRECOMP_DESTINATION_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/PrefixHeaders\n    export PRESERVE_DEAD_CODE_INITS_AND_TERMS=NO\n    export PRIVATE_HEADERS_FOLDER_PATH=SelfSizedCellByCodeExample.app/PrivateHeaders\n    export PRODUCT_BUNDLE_IDENTIFIER=tv.douyu.SelfSizedCellByCodeExample\n    export PRODUCT_MODULE_NAME=SelfSizedCellByCodeExample\n    export PRODUCT_NAME=SelfSizedCellByCodeExample\n    export PRODUCT_SETTINGS_PATH=\"/Users/home/Desktop/Learning/codebase/My TableView/SelfSizedCellByCodeExample/SelfSizedCellByCodeExample/Info.plist\"\n    export PRODUCT_TYPE=com.apple.product-type.application\n    export PROFILING_CODE=NO\n    export PROJECT=SelfSizedCellByCodeExample\n    export PROJECT_DERIVED_FILE_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/DerivedSources\n    export PROJECT_DIR=\"/Users/home/Desktop/Learning/codebase/My TableView/SelfSizedCellByCodeExample\"\n    export PROJECT_FILE_PATH=\"/Users/home/Desktop/Learning/codebase/My TableView/SelfSizedCellByCodeExample/SelfSizedCellByCodeExample.xcodeproj\"\n    export PROJECT_NAME=SelfSizedCellByCodeExample\n    export PROJECT_TEMP_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build\n    export PROJECT_TEMP_ROOT=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates\n    export PROVISIONING_PROFILE_REQUIRED=YES\n    export PUBLIC_HEADERS_FOLDER_PATH=SelfSizedCellByCodeExample.app/Headers\n    export RECURSIVE_SEARCH_PATHS_FOLLOW_SYMLINKS=YES\n    export REMOVE_CVS_FROM_RESOURCES=YES\n    export REMOVE_GIT_FROM_RESOURCES=YES\n    export REMOVE_HEADERS_FROM_EMBEDDED_BUNDLES=YES\n    export REMOVE_HG_FROM_RESOURCES=YES\n    export REMOVE_SVN_FROM_RESOURCES=YES\n    export RESOURCE_RULES_REQUIRED=YES\n    export REZ_COLLECTOR_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/ResourceManagerResources\n    export REZ_OBJECTS_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/ResourceManagerResources/Objects\n    export REZ_SEARCH_PATHS=\"/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products/Debug-iphoneos \"\n    export SCAN_ALL_SOURCE_FILES_FOR_INCLUDES=NO\n    export SCRIPTS_FOLDER_PATH=SelfSizedCellByCodeExample.app/Scripts\n    export SCRIPT_INPUT_FILE_COUNT=0\n    export SCRIPT_OUTPUT_FILE_0=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/DerivedSources/myfile\n    export SCRIPT_OUTPUT_FILE_COUNT=1\n    export SDKROOT=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS9.2.sdk\n    export SDK_DIR=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS9.2.sdk\n    export SDK_DIR_iphoneos9_2=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS9.2.sdk\n    export SDK_NAME=iphoneos9.2\n    export SDK_NAMES=iphoneos9.2\n    export SDK_PRODUCT_BUILD_VERSION=13C75\n    export SDK_VERSION=9.2\n    export SDK_VERSION_ACTUAL=90200\n    export SDK_VERSION_MAJOR=90000\n    export SDK_VERSION_MINOR=200\n    export SED=/usr/bin/sed\n    export SEPARATE_STRIP=NO\n    export SEPARATE_SYMBOL_EDIT=NO\n    export SET_DIR_MODE_OWNER_GROUP=YES\n    export SET_FILE_MODE_OWNER_GROUP=NO\n    export SHALLOW_BUNDLE=YES\n    export SHARED_DERIVED_FILE_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products/Debug-iphoneos/DerivedSources\n    export SHARED_FRAMEWORKS_FOLDER_PATH=SelfSizedCellByCodeExample.app/SharedFrameworks\n    export SHARED_PRECOMPS_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/PrecompiledHeaders\n    export SHARED_SUPPORT_FOLDER_PATH=SelfSizedCellByCodeExample.app/SharedSupport\n    export SKIP_INSTALL=NO\n    export SOURCE_ROOT=\"/Users/home/Desktop/Learning/codebase/My TableView/SelfSizedCellByCodeExample\"\n    export SRCROOT=\"/Users/home/Desktop/Learning/codebase/My TableView/SelfSizedCellByCodeExample\"\n    export STRINGS_FILE_OUTPUT_ENCODING=binary\n    export STRIP_BITCODE_FROM_COPIED_FILES=YES\n    export STRIP_INSTALLED_PRODUCT=YES\n    export STRIP_STYLE=all\n    export SUPPORTED_DEVICE_FAMILIES=1,2\n    export SUPPORTED_PLATFORMS=\"iphonesimulator iphoneos\"\n    export SUPPORTS_TEXT_BASED_API=NO\n    export SWIFT_PLATFORM_TARGET_PREFIX=ios\n    export SYMROOT=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products\n    export SYSTEM_ADMIN_APPS_DIR=/Applications/Utilities\n    export SYSTEM_APPS_DIR=/Applications\n    export SYSTEM_CORE_SERVICES_DIR=/System/Library/CoreServices\n    export SYSTEM_DEMOS_DIR=/Applications/Extras\n    export SYSTEM_DEVELOPER_APPS_DIR=/Applications/Xcode.app/Contents/Developer/Applications\n    export SYSTEM_DEVELOPER_BIN_DIR=/Applications/Xcode.app/Contents/Developer/usr/bin\n    export SYSTEM_DEVELOPER_DEMOS_DIR=\"/Applications/Xcode.app/Contents/Developer/Applications/Utilities/Built Examples\"\n    export SYSTEM_DEVELOPER_DIR=/Applications/Xcode.app/Contents/Developer\n    export SYSTEM_DEVELOPER_DOC_DIR=\"/Applications/Xcode.app/Contents/Developer/ADC Reference Library\"\n    export SYSTEM_DEVELOPER_GRAPHICS_TOOLS_DIR=\"/Applications/Xcode.app/Contents/Developer/Applications/Graphics Tools\"\n    export SYSTEM_DEVELOPER_JAVA_TOOLS_DIR=\"/Applications/Xcode.app/Contents/Developer/Applications/Java Tools\"\n    export SYSTEM_DEVELOPER_PERFORMANCE_TOOLS_DIR=\"/Applications/Xcode.app/Contents/Developer/Applications/Performance Tools\"\n    export SYSTEM_DEVELOPER_RELEASENOTES_DIR=\"/Applications/Xcode.app/Contents/Developer/ADC Reference Library/releasenotes\"\n    export SYSTEM_DEVELOPER_TOOLS=/Applications/Xcode.app/Contents/Developer/Tools\n    export SYSTEM_DEVELOPER_TOOLS_DOC_DIR=\"/Applications/Xcode.app/Contents/Developer/ADC Reference Library/documentation/DeveloperTools\"\n    export SYSTEM_DEVELOPER_TOOLS_RELEASENOTES_DIR=\"/Applications/Xcode.app/Contents/Developer/ADC Reference Library/releasenotes/DeveloperTools\"\n    export SYSTEM_DEVELOPER_USR_DIR=/Applications/Xcode.app/Contents/Developer/usr\n    export SYSTEM_DEVELOPER_UTILITIES_DIR=/Applications/Xcode.app/Contents/Developer/Applications/Utilities\n    export SYSTEM_DOCUMENTATION_DIR=/Library/Documentation\n    export SYSTEM_KEXT_INSTALL_PATH=/System/Library/Extensions\n    export SYSTEM_LIBRARY_DIR=/System/Library\n    export TARGETED_DEVICE_FAMILY=1,2\n    export TARGETNAME=SelfSizedCellByCodeExample\n    export TARGET_BUILD_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products/Debug-iphoneos\n    export TARGET_DEVICE_MODEL=iPhone7,2\n    export TARGET_DEVICE_OS_VERSION=9.0.2\n    export TARGET_NAME=SelfSizedCellByCodeExample\n    export TARGET_TEMP_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build\n    export TEMP_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build\n    export TEMP_FILES_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build\n    export TEMP_FILE_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build\n    export TEMP_ROOT=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates\n    export TOOLCHAINS=com.apple.dt.toolchain.XcodeDefault\n    export TOOLCHAIN_DIR=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain\n    export TREAT_MISSING_BASELINES_AS_TEST_FAILURES=NO\n    export UID=501\n    export UNLOCALIZED_RESOURCES_FOLDER_PATH=SelfSizedCellByCodeExample.app\n    export UNSTRIPPED_PRODUCT=NO\n    export USER=home\n    export USER_APPS_DIR=/Users/home/Applications\n    export USER_LIBRARY_DIR=/Users/home/Library\n    export USE_DYNAMIC_NO_PIC=YES\n    export USE_HEADERMAP=YES\n    export USE_HEADER_SYMLINKS=NO\n    export VALIDATE_PRODUCT=NO\n    export VALID_ARCHS=\"arm64 armv7 armv7s\"\n    export VERBOSE_PBXCP=NO\n    export VERSIONPLIST_PATH=SelfSizedCellByCodeExample.app/version.plist\n    export VERSION_INFO_BUILDER=home\n    export VERSION_INFO_FILE=SelfSizedCellByCodeExample_vers.c\n    export VERSION_INFO_STRING=\"\\\"@(#)PROGRAM:SelfSizedCellByCodeExample  PROJECT:SelfSizedCellByCodeExample-\\\"\"\n    export WRAPPER_EXTENSION=app\n    export WRAPPER_NAME=SelfSizedCellByCodeExample.app\n    export WRAPPER_SUFFIX=.app\n    export WRAP_ASSET_PACKS_IN_SEPARATE_DIRECTORIES=NO\n    export XCODE_APP_SUPPORT_DIR=/Applications/Xcode.app/Contents/Developer/Library/Xcode\n    export XCODE_PRODUCT_BUILD_VERSION=7C1002\n    export XCODE_VERSION_ACTUAL=0721\n    export XCODE_VERSION_MAJOR=0700\n    export XCODE_VERSION_MINOR=0720\n    export XPCSERVICES_FOLDER_PATH=SelfSizedCellByCodeExample.app/XPCServices\n    export YACC=yacc\n    export arch=arm64\n    export variant=normal\n    /bin/sh -c /Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/Script-993355071C92B75C004569A0.sh\n```\n\n","source":"_posts/2015/Xcode-环境变量.md","raw":"---\ntitle: Xcode 环境变量\ndate: 2015-04-13 18:52:04\ntags:\ncategories: iOS-Dev\n---\n\n在build 过程中，要想观察所有已存在的环境变量，你可以在 Build Phases 中添加一个 “Run Script”，并勾选上 “Show environment variables in build log”。\n<!-- more -->\n\n```sh\nPhaseScriptExecution Run\\ Script /Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/Script-993355071C92B75C004569A0.sh\n    cd \"/Users/home/Desktop/Learning/codebase/My TableView/SelfSizedCellByCodeExample\"\n    export ACTION=build\n    export AD_HOC_CODE_SIGNING_ALLOWED=NO\n    export ALTERNATE_GROUP=staff\n    export ALTERNATE_MODE=u+w,go-w,a+rX\n    export ALTERNATE_OWNER=home\n    export ALWAYS_SEARCH_USER_PATHS=NO\n    export ALWAYS_USE_SEPARATE_HEADERMAPS=NO\n    export APPLE_INTERNAL_DEVELOPER_DIR=/AppleInternal/Developer\n    export APPLE_INTERNAL_DIR=/AppleInternal\n    export APPLE_INTERNAL_DOCUMENTATION_DIR=/AppleInternal/Documentation\n    export APPLE_INTERNAL_LIBRARY_DIR=/AppleInternal/Library\n    export APPLE_INTERNAL_TOOLS=/AppleInternal/Developer/Tools\n    export APPLICATION_EXTENSION_API_ONLY=NO\n    export APPLY_RULES_IN_COPY_FILES=NO\n    export ARCHS=arm64\n    export ARCHS_STANDARD=\"armv7 arm64\"\n    export ARCHS_STANDARD_32_64_BIT=\"armv7 arm64\"\n    export ARCHS_STANDARD_32_BIT=armv7\n    export ARCHS_STANDARD_64_BIT=arm64\n    export ARCHS_STANDARD_INCLUDING_64_BIT=\"armv7 arm64\"\n    export ARCHS_UNIVERSAL_IPHONE_OS=\"armv7 arm64\"\n    export ASSETCATALOG_COMPILER_APPICON_NAME=AppIcon\n    export AVAILABLE_PLATFORMS=\"watchos iphonesimulator macosx appletvsimulator watchsimulator appletvos iphoneos\"\n    export BITCODE_GENERATION_MODE=marker\n    export BUILD_ACTIVE_RESOURCES_ONLY=YES\n    export BUILD_COMPONENTS=\"headers build\"\n    export BUILD_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products\n    export BUILD_ROOT=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products\n    export BUILD_STYLE=\n    export BUILD_VARIANTS=normal\n    export BUILT_PRODUCTS_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products/Debug-iphoneos\n    export CACHE_ROOT=/var/folders/vp/gh5sjvr13k5_r7tb5_n8y92c0000gn/C/com.apple.DeveloperTools/7.2.1-7C1002/Xcode\n    export CCHROOT=/var/folders/vp/gh5sjvr13k5_r7tb5_n8y92c0000gn/C/com.apple.DeveloperTools/7.2.1-7C1002/Xcode\n    export CHMOD=/bin/chmod\n    export CHOWN=/usr/sbin/chown\n    export CLANG_CXX_LANGUAGE_STANDARD=gnu++0x\n    export CLANG_CXX_LIBRARY=libc++\n    export CLANG_ENABLE_MODULES=YES\n    export CLANG_ENABLE_OBJC_ARC=YES\n    export CLANG_MODULES_BUILD_SESSION_FILE=/Users/home/Library/Developer/Xcode/DerivedData/ModuleCache/Session.modulevalidation\n    export CLANG_WARN_BOOL_CONVERSION=YES\n    export CLANG_WARN_CONSTANT_CONVERSION=YES\n    export CLANG_WARN_DIRECT_OBJC_ISA_USAGE=YES_ERROR\n    export CLANG_WARN_EMPTY_BODY=YES\n    export CLANG_WARN_ENUM_CONVERSION=YES\n    export CLANG_WARN_INT_CONVERSION=YES\n    export CLANG_WARN_OBJC_ROOT_CLASS=YES_ERROR\n    export CLANG_WARN_UNREACHABLE_CODE=YES\n    export CLANG_WARN__DUPLICATE_METHOD_MATCH=YES\n    export CLASS_FILE_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/JavaClasses\n    export CLEAN_PRECOMPS=YES\n    export CLONE_HEADERS=NO\n    export CODESIGNING_FOLDER_PATH=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products/Debug-iphoneos/SelfSizedCellByCodeExample.app\n    export CODE_SIGNING_ALLOWED=YES\n    export CODE_SIGNING_REQUIRED=YES\n    export CODE_SIGN_CONTEXT_CLASS=XCiPhoneOSCodeSignContext\n    export CODE_SIGN_IDENTITY=\"iPhone Developer\"\n    export COLOR_DIAGNOSTICS=NO\n    export COMBINE_HIDPI_IMAGES=NO\n    export COMMAND_MODE=legacy\n    export COMPOSITE_SDK_DIRS=/var/folders/vp/gh5sjvr13k5_r7tb5_n8y92c0000gn/C/com.apple.DeveloperTools/7.2.1-7C1002/Xcode/CompositeSDKs\n    export COMPRESS_PNG_FILES=YES\n    export CONFIGURATION=Debug\n    export CONFIGURATION_BUILD_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products/Debug-iphoneos\n    export CONFIGURATION_TEMP_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos\n    export CONTENTS_FOLDER_PATH=SelfSizedCellByCodeExample.app\n    export COPYING_PRESERVES_HFS_DATA=NO\n    export COPY_HEADERS_RUN_UNIFDEF=NO\n    export COPY_PHASE_STRIP=NO\n    export COPY_RESOURCES_FROM_STATIC_FRAMEWORKS=YES\n    export CORRESPONDING_SIMULATOR_PLATFORM_DIR=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform\n    export CORRESPONDING_SIMULATOR_PLATFORM_NAME=iphonesimulator\n    export CORRESPONDING_SIMULATOR_SDK_DIR=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator9.2.sdk\n    export CORRESPONDING_SIMULATOR_SDK_NAME=iphonesimulator9.2\n    export CP=/bin/cp\n    export CREATE_INFOPLIST_SECTION_IN_BINARY=NO\n    export CURRENT_ARCH=arm64\n    export CURRENT_VARIANT=normal\n    export DEAD_CODE_STRIPPING=YES\n    export DEBUGGING_SYMBOLS=YES\n    export DEBUG_INFORMATION_FORMAT=dwarf\n    export DEFAULT_COMPILER=com.apple.compilers.llvm.clang.1_0\n    export DEFAULT_KEXT_INSTALL_PATH=/System/Library/Extensions\n    export DEFINES_MODULE=NO\n    export DEPLOYMENT_LOCATION=NO\n    export DEPLOYMENT_POSTPROCESSING=NO\n    export DEPLOYMENT_TARGET_CLANG_ENV_NAME=IPHONEOS_DEPLOYMENT_TARGET\n    export DEPLOYMENT_TARGET_CLANG_FLAG_NAME=miphoneos-version-min\n    export DEPLOYMENT_TARGET_CLANG_FLAG_PREFIX=-miphoneos-version-min=\n    export DEPLOYMENT_TARGET_SETTING_NAME=IPHONEOS_DEPLOYMENT_TARGET\n    export DEPLOYMENT_TARGET_SUGGESTED_VALUES=\"6.0 6.1 7.0 7.1 8.0 8.1 8.2 8.3 8.4 9.0 9.1 9.2\"\n    export DERIVED_FILES_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/DerivedSources\n    export DERIVED_FILE_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/DerivedSources\n    export DERIVED_SOURCES_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/DerivedSources\n    export DEVELOPER_APPLICATIONS_DIR=/Applications/Xcode.app/Contents/Developer/Applications\n    export DEVELOPER_BIN_DIR=/Applications/Xcode.app/Contents/Developer/usr/bin\n    export DEVELOPER_DIR=/Applications/Xcode.app/Contents/Developer\n    export DEVELOPER_FRAMEWORKS_DIR=/Applications/Xcode.app/Contents/Developer/Library/Frameworks\n    export DEVELOPER_FRAMEWORKS_DIR_QUOTED=/Applications/Xcode.app/Contents/Developer/Library/Frameworks\n    export DEVELOPER_LIBRARY_DIR=/Applications/Xcode.app/Contents/Developer/Library\n    export DEVELOPER_SDK_DIR=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs\n    export DEVELOPER_TOOLS_DIR=/Applications/Xcode.app/Contents/Developer/Tools\n    export DEVELOPER_USR_DIR=/Applications/Xcode.app/Contents/Developer/usr\n    export DEVELOPMENT_LANGUAGE=English\n    export DOCUMENTATION_FOLDER_PATH=SelfSizedCellByCodeExample.app/English.lproj/Documentation\n    export DO_HEADER_SCANNING_IN_JAM=NO\n    export DSTROOT=/tmp/SelfSizedCellByCodeExample.dst\n    export DT_TOOLCHAIN_DIR=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain\n    export DWARF_DSYM_FILE_NAME=SelfSizedCellByCodeExample.app.dSYM\n    export DWARF_DSYM_FILE_SHOULD_ACCOMPANY_PRODUCT=NO\n    export DWARF_DSYM_FOLDER_PATH=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products/Debug-iphoneos\n    export EFFECTIVE_PLATFORM_NAME=-iphoneos\n    export EMBEDDED_CONTENT_CONTAINS_SWIFT=NO\n    export EMBEDDED_PROFILE_NAME=embedded.mobileprovision\n    export EMBED_ASSET_PACKS_IN_PRODUCT_BUNDLE=NO\n    export ENABLE_BITCODE=YES\n    export ENABLE_HEADER_DEPENDENCIES=YES\n    export ENABLE_ON_DEMAND_RESOURCES=YES\n    export ENABLE_STRICT_OBJC_MSGSEND=YES\n    export ENABLE_TESTABILITY=YES\n    export ENTITLEMENTS_ALLOWED=YES\n    export ENTITLEMENTS_REQUIRED=YES\n    export EXCLUDED_INSTALLSRC_SUBDIRECTORY_PATTERNS=\".DS_Store .svn .git .hg CVS\"\n    export EXCLUDED_RECURSIVE_SEARCH_PATH_SUBDIRECTORIES=\"*.nib *.lproj *.framework *.gch *.xcode* *.xcassets (*) .DS_Store CVS .svn .git .hg *.pbproj *.pbxproj\"\n    export EXECUTABLES_FOLDER_PATH=SelfSizedCellByCodeExample.app/Executables\n    export EXECUTABLE_FOLDER_PATH=SelfSizedCellByCodeExample.app\n    export EXECUTABLE_NAME=SelfSizedCellByCodeExample\n    export EXECUTABLE_PATH=SelfSizedCellByCodeExample.app/SelfSizedCellByCodeExample\n    export EXPANDED_CODE_SIGN_IDENTITY=54D2584F0CDFF507E70F191FC851A7D39B24F29B\n    export EXPANDED_CODE_SIGN_IDENTITY_NAME=\"iPhone Developer: Jing Yang (KEPL6DZH42)\"\n    export EXPANDED_PROVISIONING_PROFILE=f2d6f047-08d8-4627-a967-585e63aa876a\n    export FILE_LIST=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/Objects/LinkFileList\n    export FIXED_FILES_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/FixedFiles\n    export FRAMEWORKS_FOLDER_PATH=SelfSizedCellByCodeExample.app/Frameworks\n    export FRAMEWORK_FLAG_PREFIX=-framework\n    export FRAMEWORK_SEARCH_PATHS=\"/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products/Debug-iphoneos \"\n    export FRAMEWORK_VERSION=A\n    export FULL_PRODUCT_NAME=SelfSizedCellByCodeExample.app\n    export GCC3_VERSION=3.3\n    export GCC_C_LANGUAGE_STANDARD=gnu99\n    export GCC_DYNAMIC_NO_PIC=NO\n    export GCC_INLINES_ARE_PRIVATE_EXTERN=YES\n    export GCC_NO_COMMON_BLOCKS=YES\n    export GCC_OPTIMIZATION_LEVEL=0\n    export GCC_PFE_FILE_C_DIALECTS=\"c objective-c c++ objective-c++\"\n    export GCC_PREPROCESSOR_DEFINITIONS=\"DEBUG=1 \"\n    export GCC_SYMBOLS_PRIVATE_EXTERN=NO\n    export GCC_THUMB_SUPPORT=YES\n    export GCC_TREAT_WARNINGS_AS_ERRORS=NO\n    export GCC_VERSION=com.apple.compilers.llvm.clang.1_0\n    export GCC_VERSION_IDENTIFIER=com_apple_compilers_llvm_clang_1_0\n    export GCC_WARN_64_TO_32_BIT_CONVERSION=YES\n    export GCC_WARN_ABOUT_RETURN_TYPE=YES_ERROR\n    export GCC_WARN_UNDECLARED_SELECTOR=YES\n    export GCC_WARN_UNINITIALIZED_AUTOS=YES_AGGRESSIVE\n    export GCC_WARN_UNUSED_FUNCTION=YES\n    export GCC_WARN_UNUSED_VARIABLE=YES\n    export GENERATE_MASTER_OBJECT_FILE=NO\n    export GENERATE_PKGINFO_FILE=YES\n    export GENERATE_PROFILING_CODE=NO\n    export GID=20\n    export GROUP=staff\n    export HEADERMAP_INCLUDES_FLAT_ENTRIES_FOR_TARGET_BEING_BUILT=YES\n    export HEADERMAP_INCLUDES_FRAMEWORK_ENTRIES_FOR_ALL_PRODUCT_TYPES=YES\n    export HEADERMAP_INCLUDES_NONPUBLIC_NONPRIVATE_HEADERS=YES\n    export HEADERMAP_INCLUDES_PROJECT_HEADERS=YES\n    export HEADERMAP_USES_FRAMEWORK_PREFIX_ENTRIES=YES\n    export HEADERMAP_USES_VFS=NO\n    export HEADER_SEARCH_PATHS=\"/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products/Debug-iphoneos/include \"\n    export HIDE_BITCODE_SYMBOLS=YES\n    export HOME=/Users/home\n    export ICONV=/usr/bin/iconv\n    export INFOPLIST_EXPAND_BUILD_SETTINGS=YES\n    export INFOPLIST_FILE=SelfSizedCellByCodeExample/Info.plist\n    export INFOPLIST_OUTPUT_FORMAT=binary\n    export INFOPLIST_PATH=SelfSizedCellByCodeExample.app/Info.plist\n    export INFOPLIST_PREPROCESS=NO\n    export INFOSTRINGS_PATH=SelfSizedCellByCodeExample.app/English.lproj/InfoPlist.strings\n    export INSTALL_DIR=/tmp/SelfSizedCellByCodeExample.dst/Applications\n    export INSTALL_GROUP=staff\n    export INSTALL_MODE_FLAG=u+w,go-w,a+rX\n    export INSTALL_OWNER=home\n    export INSTALL_PATH=/Applications\n    export INSTALL_ROOT=/tmp/SelfSizedCellByCodeExample.dst\n    export IPHONEOS_DEPLOYMENT_TARGET=7.0\n    export JAVAC_DEFAULT_FLAGS=\"-J-Xms64m -J-XX:NewSize=4M -J-Dfile.encoding=UTF8\"\n    export JAVA_APP_STUB=/System/Library/Frameworks/JavaVM.framework/Resources/MacOS/JavaApplicationStub\n    export JAVA_ARCHIVE_CLASSES=YES\n    export JAVA_ARCHIVE_TYPE=JAR\n    export JAVA_COMPILER=/usr/bin/javac\n    export JAVA_FOLDER_PATH=SelfSizedCellByCodeExample.app/Java\n    export JAVA_FRAMEWORK_RESOURCES_DIRS=Resources\n    export JAVA_JAR_FLAGS=cv\n    export JAVA_SOURCE_SUBDIR=.\n    export JAVA_USE_DEPENDENCIES=YES\n    export JAVA_ZIP_FLAGS=-urg\n    export JIKES_DEFAULT_FLAGS=\"+E +OLDCSO\"\n    export KEEP_PRIVATE_EXTERNS=NO\n    export LD_DEPENDENCY_INFO_FILE=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/Objects-normal/arm64/SelfSizedCellByCodeExample_dependency_info.dat\n    export LD_GENERATE_MAP_FILE=NO\n    export LD_MAP_FILE_PATH=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/SelfSizedCellByCodeExample-LinkMap-normal-arm64.txt\n    export LD_NO_PIE=NO\n    export LD_QUOTE_LINKER_ARGUMENTS_FOR_COMPILER_DRIVER=YES\n    export LD_RUNPATH_SEARCH_PATHS=\" @executable_path/Frameworks\"\n    export LEGACY_DEVELOPER_DIR=/Applications/Xcode.app/Contents/PlugIns/Xcode3Core.ideplugin/Contents/SharedSupport/Developer\n    export LEX=lex\n    export LIBRARY_FLAG_NOSPACE=YES\n    export LIBRARY_FLAG_PREFIX=-l\n    export LIBRARY_KEXT_INSTALL_PATH=/Library/Extensions\n    export LIBRARY_SEARCH_PATHS=\"/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products/Debug-iphoneos \"\n    export LINKER_DISPLAYS_MANGLED_NAMES=NO\n    export LINK_FILE_LIST_normal_arm64=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/Objects-normal/arm64/SelfSizedCellByCodeExample.LinkFileList\n    export LINK_WITH_STANDARD_LIBRARIES=YES\n    export LOCALIZABLE_CONTENT_DIR=\n    export LOCALIZED_RESOURCES_FOLDER_PATH=SelfSizedCellByCodeExample.app/English.lproj\n    export LOCAL_ADMIN_APPS_DIR=/Applications/Utilities\n    export LOCAL_APPS_DIR=/Applications\n    export LOCAL_DEVELOPER_DIR=/Library/Developer\n    export LOCAL_LIBRARY_DIR=/Library\n    export LOCROOT=\n    export LOCSYMROOT=\n    export MACH_O_TYPE=mh_execute\n    export MAC_OS_X_PRODUCT_BUILD_VERSION=15D21\n    export MAC_OS_X_VERSION_ACTUAL=101103\n    export MAC_OS_X_VERSION_MAJOR=101100\n    export MAC_OS_X_VERSION_MINOR=1103\n    export MODULE_CACHE_DIR=/Users/home/Library/Developer/Xcode/DerivedData/ModuleCache\n    export MTL_ENABLE_DEBUG_INFO=YES\n    export NATIVE_ARCH=armv7\n    export NATIVE_ARCH_32_BIT=i386\n    export NATIVE_ARCH_64_BIT=x86_64\n    export NATIVE_ARCH_ACTUAL=x86_64\n    export NO_COMMON=YES\n    export OBJECT_FILE_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/Objects\n    export OBJECT_FILE_DIR_normal=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/Objects-normal\n    export OBJROOT=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates\n    export ONLY_ACTIVE_ARCH=YES\n    export OPTIMIZATION_LEVEL=0\n    export OS=MACOS\n    export OSAC=/usr/bin/osacompile\n    export PACKAGE_TYPE=com.apple.package-type.wrapper.application\n    export PASCAL_STRINGS=YES\n    export PATH=\"/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin:/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/libexec:/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin:/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/local/bin:/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/usr/bin:/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/usr/local/bin:/Applications/Xcode.app/Contents/Developer/usr/bin:/Applications/Xcode.app/Contents/Developer/usr/local/bin:/Applications/Xcode.app/Contents/Developer/Tools:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin\"\n    export PATH_PREFIXES_EXCLUDED_FROM_HEADER_DEPENDENCIES=\"/usr/include /usr/local/include /System/Library/Frameworks /System/Library/PrivateFrameworks /Applications/Xcode.app/Contents/Developer/Headers /Applications/Xcode.app/Contents/Developer/SDKs /Applications/Xcode.app/Contents/Developer/Platforms\"\n    export PBDEVELOPMENTPLIST_PATH=SelfSizedCellByCodeExample.app/pbdevelopment.plist\n    export PFE_FILE_C_DIALECTS=objective-c\n    export PKGINFO_FILE_PATH=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/PkgInfo\n    export PKGINFO_PATH=SelfSizedCellByCodeExample.app/PkgInfo\n    export PLATFORM_DEVELOPER_APPLICATIONS_DIR=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/Applications\n    export PLATFORM_DEVELOPER_BIN_DIR=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin\n    export PLATFORM_DEVELOPER_LIBRARY_DIR=/Applications/Xcode.app/Contents/PlugIns/Xcode3Core.ideplugin/Contents/SharedSupport/Developer/Library\n    export PLATFORM_DEVELOPER_SDK_DIR=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs\n    export PLATFORM_DEVELOPER_TOOLS_DIR=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/Tools\n    export PLATFORM_DEVELOPER_USR_DIR=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr\n    export PLATFORM_DIR=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform\n    export PLATFORM_DISPLAY_NAME=iOS\n    export PLATFORM_NAME=iphoneos\n    export PLATFORM_PREFERRED_ARCH=arm64\n    export PLATFORM_PRODUCT_BUILD_VERSION=13C75\n    export PLIST_FILE_OUTPUT_FORMAT=binary\n    export PLUGINS_FOLDER_PATH=SelfSizedCellByCodeExample.app/PlugIns\n    export PRECOMPS_INCLUDE_HEADERS_FROM_BUILT_PRODUCTS_DIR=YES\n    export PRECOMP_DESTINATION_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/PrefixHeaders\n    export PRESERVE_DEAD_CODE_INITS_AND_TERMS=NO\n    export PRIVATE_HEADERS_FOLDER_PATH=SelfSizedCellByCodeExample.app/PrivateHeaders\n    export PRODUCT_BUNDLE_IDENTIFIER=tv.douyu.SelfSizedCellByCodeExample\n    export PRODUCT_MODULE_NAME=SelfSizedCellByCodeExample\n    export PRODUCT_NAME=SelfSizedCellByCodeExample\n    export PRODUCT_SETTINGS_PATH=\"/Users/home/Desktop/Learning/codebase/My TableView/SelfSizedCellByCodeExample/SelfSizedCellByCodeExample/Info.plist\"\n    export PRODUCT_TYPE=com.apple.product-type.application\n    export PROFILING_CODE=NO\n    export PROJECT=SelfSizedCellByCodeExample\n    export PROJECT_DERIVED_FILE_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/DerivedSources\n    export PROJECT_DIR=\"/Users/home/Desktop/Learning/codebase/My TableView/SelfSizedCellByCodeExample\"\n    export PROJECT_FILE_PATH=\"/Users/home/Desktop/Learning/codebase/My TableView/SelfSizedCellByCodeExample/SelfSizedCellByCodeExample.xcodeproj\"\n    export PROJECT_NAME=SelfSizedCellByCodeExample\n    export PROJECT_TEMP_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build\n    export PROJECT_TEMP_ROOT=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates\n    export PROVISIONING_PROFILE_REQUIRED=YES\n    export PUBLIC_HEADERS_FOLDER_PATH=SelfSizedCellByCodeExample.app/Headers\n    export RECURSIVE_SEARCH_PATHS_FOLLOW_SYMLINKS=YES\n    export REMOVE_CVS_FROM_RESOURCES=YES\n    export REMOVE_GIT_FROM_RESOURCES=YES\n    export REMOVE_HEADERS_FROM_EMBEDDED_BUNDLES=YES\n    export REMOVE_HG_FROM_RESOURCES=YES\n    export REMOVE_SVN_FROM_RESOURCES=YES\n    export RESOURCE_RULES_REQUIRED=YES\n    export REZ_COLLECTOR_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/ResourceManagerResources\n    export REZ_OBJECTS_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/ResourceManagerResources/Objects\n    export REZ_SEARCH_PATHS=\"/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products/Debug-iphoneos \"\n    export SCAN_ALL_SOURCE_FILES_FOR_INCLUDES=NO\n    export SCRIPTS_FOLDER_PATH=SelfSizedCellByCodeExample.app/Scripts\n    export SCRIPT_INPUT_FILE_COUNT=0\n    export SCRIPT_OUTPUT_FILE_0=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/DerivedSources/myfile\n    export SCRIPT_OUTPUT_FILE_COUNT=1\n    export SDKROOT=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS9.2.sdk\n    export SDK_DIR=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS9.2.sdk\n    export SDK_DIR_iphoneos9_2=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS9.2.sdk\n    export SDK_NAME=iphoneos9.2\n    export SDK_NAMES=iphoneos9.2\n    export SDK_PRODUCT_BUILD_VERSION=13C75\n    export SDK_VERSION=9.2\n    export SDK_VERSION_ACTUAL=90200\n    export SDK_VERSION_MAJOR=90000\n    export SDK_VERSION_MINOR=200\n    export SED=/usr/bin/sed\n    export SEPARATE_STRIP=NO\n    export SEPARATE_SYMBOL_EDIT=NO\n    export SET_DIR_MODE_OWNER_GROUP=YES\n    export SET_FILE_MODE_OWNER_GROUP=NO\n    export SHALLOW_BUNDLE=YES\n    export SHARED_DERIVED_FILE_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products/Debug-iphoneos/DerivedSources\n    export SHARED_FRAMEWORKS_FOLDER_PATH=SelfSizedCellByCodeExample.app/SharedFrameworks\n    export SHARED_PRECOMPS_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/PrecompiledHeaders\n    export SHARED_SUPPORT_FOLDER_PATH=SelfSizedCellByCodeExample.app/SharedSupport\n    export SKIP_INSTALL=NO\n    export SOURCE_ROOT=\"/Users/home/Desktop/Learning/codebase/My TableView/SelfSizedCellByCodeExample\"\n    export SRCROOT=\"/Users/home/Desktop/Learning/codebase/My TableView/SelfSizedCellByCodeExample\"\n    export STRINGS_FILE_OUTPUT_ENCODING=binary\n    export STRIP_BITCODE_FROM_COPIED_FILES=YES\n    export STRIP_INSTALLED_PRODUCT=YES\n    export STRIP_STYLE=all\n    export SUPPORTED_DEVICE_FAMILIES=1,2\n    export SUPPORTED_PLATFORMS=\"iphonesimulator iphoneos\"\n    export SUPPORTS_TEXT_BASED_API=NO\n    export SWIFT_PLATFORM_TARGET_PREFIX=ios\n    export SYMROOT=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products\n    export SYSTEM_ADMIN_APPS_DIR=/Applications/Utilities\n    export SYSTEM_APPS_DIR=/Applications\n    export SYSTEM_CORE_SERVICES_DIR=/System/Library/CoreServices\n    export SYSTEM_DEMOS_DIR=/Applications/Extras\n    export SYSTEM_DEVELOPER_APPS_DIR=/Applications/Xcode.app/Contents/Developer/Applications\n    export SYSTEM_DEVELOPER_BIN_DIR=/Applications/Xcode.app/Contents/Developer/usr/bin\n    export SYSTEM_DEVELOPER_DEMOS_DIR=\"/Applications/Xcode.app/Contents/Developer/Applications/Utilities/Built Examples\"\n    export SYSTEM_DEVELOPER_DIR=/Applications/Xcode.app/Contents/Developer\n    export SYSTEM_DEVELOPER_DOC_DIR=\"/Applications/Xcode.app/Contents/Developer/ADC Reference Library\"\n    export SYSTEM_DEVELOPER_GRAPHICS_TOOLS_DIR=\"/Applications/Xcode.app/Contents/Developer/Applications/Graphics Tools\"\n    export SYSTEM_DEVELOPER_JAVA_TOOLS_DIR=\"/Applications/Xcode.app/Contents/Developer/Applications/Java Tools\"\n    export SYSTEM_DEVELOPER_PERFORMANCE_TOOLS_DIR=\"/Applications/Xcode.app/Contents/Developer/Applications/Performance Tools\"\n    export SYSTEM_DEVELOPER_RELEASENOTES_DIR=\"/Applications/Xcode.app/Contents/Developer/ADC Reference Library/releasenotes\"\n    export SYSTEM_DEVELOPER_TOOLS=/Applications/Xcode.app/Contents/Developer/Tools\n    export SYSTEM_DEVELOPER_TOOLS_DOC_DIR=\"/Applications/Xcode.app/Contents/Developer/ADC Reference Library/documentation/DeveloperTools\"\n    export SYSTEM_DEVELOPER_TOOLS_RELEASENOTES_DIR=\"/Applications/Xcode.app/Contents/Developer/ADC Reference Library/releasenotes/DeveloperTools\"\n    export SYSTEM_DEVELOPER_USR_DIR=/Applications/Xcode.app/Contents/Developer/usr\n    export SYSTEM_DEVELOPER_UTILITIES_DIR=/Applications/Xcode.app/Contents/Developer/Applications/Utilities\n    export SYSTEM_DOCUMENTATION_DIR=/Library/Documentation\n    export SYSTEM_KEXT_INSTALL_PATH=/System/Library/Extensions\n    export SYSTEM_LIBRARY_DIR=/System/Library\n    export TARGETED_DEVICE_FAMILY=1,2\n    export TARGETNAME=SelfSizedCellByCodeExample\n    export TARGET_BUILD_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products/Debug-iphoneos\n    export TARGET_DEVICE_MODEL=iPhone7,2\n    export TARGET_DEVICE_OS_VERSION=9.0.2\n    export TARGET_NAME=SelfSizedCellByCodeExample\n    export TARGET_TEMP_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build\n    export TEMP_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build\n    export TEMP_FILES_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build\n    export TEMP_FILE_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build\n    export TEMP_ROOT=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates\n    export TOOLCHAINS=com.apple.dt.toolchain.XcodeDefault\n    export TOOLCHAIN_DIR=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain\n    export TREAT_MISSING_BASELINES_AS_TEST_FAILURES=NO\n    export UID=501\n    export UNLOCALIZED_RESOURCES_FOLDER_PATH=SelfSizedCellByCodeExample.app\n    export UNSTRIPPED_PRODUCT=NO\n    export USER=home\n    export USER_APPS_DIR=/Users/home/Applications\n    export USER_LIBRARY_DIR=/Users/home/Library\n    export USE_DYNAMIC_NO_PIC=YES\n    export USE_HEADERMAP=YES\n    export USE_HEADER_SYMLINKS=NO\n    export VALIDATE_PRODUCT=NO\n    export VALID_ARCHS=\"arm64 armv7 armv7s\"\n    export VERBOSE_PBXCP=NO\n    export VERSIONPLIST_PATH=SelfSizedCellByCodeExample.app/version.plist\n    export VERSION_INFO_BUILDER=home\n    export VERSION_INFO_FILE=SelfSizedCellByCodeExample_vers.c\n    export VERSION_INFO_STRING=\"\\\"@(#)PROGRAM:SelfSizedCellByCodeExample  PROJECT:SelfSizedCellByCodeExample-\\\"\"\n    export WRAPPER_EXTENSION=app\n    export WRAPPER_NAME=SelfSizedCellByCodeExample.app\n    export WRAPPER_SUFFIX=.app\n    export WRAP_ASSET_PACKS_IN_SEPARATE_DIRECTORIES=NO\n    export XCODE_APP_SUPPORT_DIR=/Applications/Xcode.app/Contents/Developer/Library/Xcode\n    export XCODE_PRODUCT_BUILD_VERSION=7C1002\n    export XCODE_VERSION_ACTUAL=0721\n    export XCODE_VERSION_MAJOR=0700\n    export XCODE_VERSION_MINOR=0720\n    export XPCSERVICES_FOLDER_PATH=SelfSizedCellByCodeExample.app/XPCServices\n    export YACC=yacc\n    export arch=arm64\n    export variant=normal\n    /bin/sh -c /Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/Script-993355071C92B75C004569A0.sh\n```\n\n","slug":"2015/Xcode-环境变量","published":1,"updated":"2024-01-02T16:09:25.080Z","_id":"clqwlt7ws000tuc7tg0i0hxa4","comments":1,"layout":"post","photos":[],"link":"","content":"<p>在build 过程中，要想观察所有已存在的环境变量，你可以在 Build Phases 中添加一个 “Run Script”，并勾选上 “Show environment variables in build log”。</p>\n<span id=\"more\"></span>\n\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PhaseScriptExecution Run\\ Script /Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/Script-993355071C92B75C004569A0.sh</span><br><span class=\"line\">    <span class=\"built_in\">cd</span> <span class=\"string\">&quot;/Users/home/Desktop/Learning/codebase/My TableView/SelfSizedCellByCodeExample&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> ACTION=build</span><br><span class=\"line\">    <span class=\"built_in\">export</span> AD_HOC_CODE_SIGNING_ALLOWED=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> ALTERNATE_GROUP=staff</span><br><span class=\"line\">    <span class=\"built_in\">export</span> ALTERNATE_MODE=u+w,go-w,a+rX</span><br><span class=\"line\">    <span class=\"built_in\">export</span> ALTERNATE_OWNER=home</span><br><span class=\"line\">    <span class=\"built_in\">export</span> ALWAYS_SEARCH_USER_PATHS=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> ALWAYS_USE_SEPARATE_HEADERMAPS=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> APPLE_INTERNAL_DEVELOPER_DIR=/AppleInternal/Developer</span><br><span class=\"line\">    <span class=\"built_in\">export</span> APPLE_INTERNAL_DIR=/AppleInternal</span><br><span class=\"line\">    <span class=\"built_in\">export</span> APPLE_INTERNAL_DOCUMENTATION_DIR=/AppleInternal/Documentation</span><br><span class=\"line\">    <span class=\"built_in\">export</span> APPLE_INTERNAL_LIBRARY_DIR=/AppleInternal/Library</span><br><span class=\"line\">    <span class=\"built_in\">export</span> APPLE_INTERNAL_TOOLS=/AppleInternal/Developer/Tools</span><br><span class=\"line\">    <span class=\"built_in\">export</span> APPLICATION_EXTENSION_API_ONLY=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> APPLY_RULES_IN_COPY_FILES=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> ARCHS=arm64</span><br><span class=\"line\">    <span class=\"built_in\">export</span> ARCHS_STANDARD=<span class=\"string\">&quot;armv7 arm64&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> ARCHS_STANDARD_32_64_BIT=<span class=\"string\">&quot;armv7 arm64&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> ARCHS_STANDARD_32_BIT=armv7</span><br><span class=\"line\">    <span class=\"built_in\">export</span> ARCHS_STANDARD_64_BIT=arm64</span><br><span class=\"line\">    <span class=\"built_in\">export</span> ARCHS_STANDARD_INCLUDING_64_BIT=<span class=\"string\">&quot;armv7 arm64&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> ARCHS_UNIVERSAL_IPHONE_OS=<span class=\"string\">&quot;armv7 arm64&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> ASSETCATALOG_COMPILER_APPICON_NAME=AppIcon</span><br><span class=\"line\">    <span class=\"built_in\">export</span> AVAILABLE_PLATFORMS=<span class=\"string\">&quot;watchos iphonesimulator macosx appletvsimulator watchsimulator appletvos iphoneos&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> BITCODE_GENERATION_MODE=marker</span><br><span class=\"line\">    <span class=\"built_in\">export</span> BUILD_ACTIVE_RESOURCES_ONLY=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> BUILD_COMPONENTS=<span class=\"string\">&quot;headers build&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> BUILD_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products</span><br><span class=\"line\">    <span class=\"built_in\">export</span> BUILD_ROOT=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products</span><br><span class=\"line\">    <span class=\"built_in\">export</span> BUILD_STYLE=</span><br><span class=\"line\">    <span class=\"built_in\">export</span> BUILD_VARIANTS=normal</span><br><span class=\"line\">    <span class=\"built_in\">export</span> BUILT_PRODUCTS_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products/Debug-iphoneos</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CACHE_ROOT=/var/folders/vp/gh5sjvr13k5_r7tb5_n8y92c0000gn/C/com.apple.DeveloperTools/7.2.1-7C1002/Xcode</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CCHROOT=/var/folders/vp/gh5sjvr13k5_r7tb5_n8y92c0000gn/C/com.apple.DeveloperTools/7.2.1-7C1002/Xcode</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CHMOD=/bin/chmod</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CHOWN=/usr/sbin/chown</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CLANG_CXX_LANGUAGE_STANDARD=gnu++0x</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CLANG_CXX_LIBRARY=libc++</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CLANG_ENABLE_MODULES=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CLANG_ENABLE_OBJC_ARC=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CLANG_MODULES_BUILD_SESSION_FILE=/Users/home/Library/Developer/Xcode/DerivedData/ModuleCache/Session.modulevalidation</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CLANG_WARN_BOOL_CONVERSION=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CLANG_WARN_CONSTANT_CONVERSION=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CLANG_WARN_DIRECT_OBJC_ISA_USAGE=YES_ERROR</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CLANG_WARN_EMPTY_BODY=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CLANG_WARN_ENUM_CONVERSION=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CLANG_WARN_INT_CONVERSION=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CLANG_WARN_OBJC_ROOT_CLASS=YES_ERROR</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CLANG_WARN_UNREACHABLE_CODE=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CLANG_WARN__DUPLICATE_METHOD_MATCH=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CLASS_FILE_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/JavaClasses</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CLEAN_PRECOMPS=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CLONE_HEADERS=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CODESIGNING_FOLDER_PATH=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products/Debug-iphoneos/SelfSizedCellByCodeExample.app</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CODE_SIGNING_ALLOWED=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CODE_SIGNING_REQUIRED=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CODE_SIGN_CONTEXT_CLASS=XCiPhoneOSCodeSignContext</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CODE_SIGN_IDENTITY=<span class=\"string\">&quot;iPhone Developer&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> COLOR_DIAGNOSTICS=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> COMBINE_HIDPI_IMAGES=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> COMMAND_MODE=legacy</span><br><span class=\"line\">    <span class=\"built_in\">export</span> COMPOSITE_SDK_DIRS=/var/folders/vp/gh5sjvr13k5_r7tb5_n8y92c0000gn/C/com.apple.DeveloperTools/7.2.1-7C1002/Xcode/CompositeSDKs</span><br><span class=\"line\">    <span class=\"built_in\">export</span> COMPRESS_PNG_FILES=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CONFIGURATION=Debug</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CONFIGURATION_BUILD_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products/Debug-iphoneos</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CONFIGURATION_TEMP_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CONTENTS_FOLDER_PATH=SelfSizedCellByCodeExample.app</span><br><span class=\"line\">    <span class=\"built_in\">export</span> COPYING_PRESERVES_HFS_DATA=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> COPY_HEADERS_RUN_UNIFDEF=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> COPY_PHASE_STRIP=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> COPY_RESOURCES_FROM_STATIC_FRAMEWORKS=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CORRESPONDING_SIMULATOR_PLATFORM_DIR=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CORRESPONDING_SIMULATOR_PLATFORM_NAME=iphonesimulator</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CORRESPONDING_SIMULATOR_SDK_DIR=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator9.2.sdk</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CORRESPONDING_SIMULATOR_SDK_NAME=iphonesimulator9.2</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CP=/bin/cp</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CREATE_INFOPLIST_SECTION_IN_BINARY=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CURRENT_ARCH=arm64</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CURRENT_VARIANT=normal</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DEAD_CODE_STRIPPING=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DEBUGGING_SYMBOLS=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DEBUG_INFORMATION_FORMAT=dwarf</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DEFAULT_COMPILER=com.apple.compilers.llvm.clang.1_0</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DEFAULT_KEXT_INSTALL_PATH=/System/Library/Extensions</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DEFINES_MODULE=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DEPLOYMENT_LOCATION=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DEPLOYMENT_POSTPROCESSING=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DEPLOYMENT_TARGET_CLANG_ENV_NAME=IPHONEOS_DEPLOYMENT_TARGET</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DEPLOYMENT_TARGET_CLANG_FLAG_NAME=miphoneos-version-min</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DEPLOYMENT_TARGET_CLANG_FLAG_PREFIX=-miphoneos-version-min=</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DEPLOYMENT_TARGET_SETTING_NAME=IPHONEOS_DEPLOYMENT_TARGET</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DEPLOYMENT_TARGET_SUGGESTED_VALUES=<span class=\"string\">&quot;6.0 6.1 7.0 7.1 8.0 8.1 8.2 8.3 8.4 9.0 9.1 9.2&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> DERIVED_FILES_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/DerivedSources</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DERIVED_FILE_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/DerivedSources</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DERIVED_SOURCES_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/DerivedSources</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DEVELOPER_APPLICATIONS_DIR=/Applications/Xcode.app/Contents/Developer/Applications</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DEVELOPER_BIN_DIR=/Applications/Xcode.app/Contents/Developer/usr/bin</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DEVELOPER_DIR=/Applications/Xcode.app/Contents/Developer</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DEVELOPER_FRAMEWORKS_DIR=/Applications/Xcode.app/Contents/Developer/Library/Frameworks</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DEVELOPER_FRAMEWORKS_DIR_QUOTED=/Applications/Xcode.app/Contents/Developer/Library/Frameworks</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DEVELOPER_LIBRARY_DIR=/Applications/Xcode.app/Contents/Developer/Library</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DEVELOPER_SDK_DIR=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DEVELOPER_TOOLS_DIR=/Applications/Xcode.app/Contents/Developer/Tools</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DEVELOPER_USR_DIR=/Applications/Xcode.app/Contents/Developer/usr</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DEVELOPMENT_LANGUAGE=English</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DOCUMENTATION_FOLDER_PATH=SelfSizedCellByCodeExample.app/English.lproj/Documentation</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DO_HEADER_SCANNING_IN_JAM=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DSTROOT=/tmp/SelfSizedCellByCodeExample.dst</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DT_TOOLCHAIN_DIR=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DWARF_DSYM_FILE_NAME=SelfSizedCellByCodeExample.app.dSYM</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DWARF_DSYM_FILE_SHOULD_ACCOMPANY_PRODUCT=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DWARF_DSYM_FOLDER_PATH=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products/Debug-iphoneos</span><br><span class=\"line\">    <span class=\"built_in\">export</span> EFFECTIVE_PLATFORM_NAME=-iphoneos</span><br><span class=\"line\">    <span class=\"built_in\">export</span> EMBEDDED_CONTENT_CONTAINS_SWIFT=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> EMBEDDED_PROFILE_NAME=embedded.mobileprovision</span><br><span class=\"line\">    <span class=\"built_in\">export</span> EMBED_ASSET_PACKS_IN_PRODUCT_BUNDLE=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> ENABLE_BITCODE=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> ENABLE_HEADER_DEPENDENCIES=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> ENABLE_ON_DEMAND_RESOURCES=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> ENABLE_STRICT_OBJC_MSGSEND=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> ENABLE_TESTABILITY=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> ENTITLEMENTS_ALLOWED=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> ENTITLEMENTS_REQUIRED=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> EXCLUDED_INSTALLSRC_SUBDIRECTORY_PATTERNS=<span class=\"string\">&quot;.DS_Store .svn .git .hg CVS&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> EXCLUDED_RECURSIVE_SEARCH_PATH_SUBDIRECTORIES=<span class=\"string\">&quot;*.nib *.lproj *.framework *.gch *.xcode* *.xcassets (*) .DS_Store CVS .svn .git .hg *.pbproj *.pbxproj&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> EXECUTABLES_FOLDER_PATH=SelfSizedCellByCodeExample.app/Executables</span><br><span class=\"line\">    <span class=\"built_in\">export</span> EXECUTABLE_FOLDER_PATH=SelfSizedCellByCodeExample.app</span><br><span class=\"line\">    <span class=\"built_in\">export</span> EXECUTABLE_NAME=SelfSizedCellByCodeExample</span><br><span class=\"line\">    <span class=\"built_in\">export</span> EXECUTABLE_PATH=SelfSizedCellByCodeExample.app/SelfSizedCellByCodeExample</span><br><span class=\"line\">    <span class=\"built_in\">export</span> EXPANDED_CODE_SIGN_IDENTITY=54D2584F0CDFF507E70F191FC851A7D39B24F29B</span><br><span class=\"line\">    <span class=\"built_in\">export</span> EXPANDED_CODE_SIGN_IDENTITY_NAME=<span class=\"string\">&quot;iPhone Developer: Jing Yang (KEPL6DZH42)&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> EXPANDED_PROVISIONING_PROFILE=f2d6f047-08d8-4627-a967-585e63aa876a</span><br><span class=\"line\">    <span class=\"built_in\">export</span> FILE_LIST=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/Objects/LinkFileList</span><br><span class=\"line\">    <span class=\"built_in\">export</span> FIXED_FILES_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/FixedFiles</span><br><span class=\"line\">    <span class=\"built_in\">export</span> FRAMEWORKS_FOLDER_PATH=SelfSizedCellByCodeExample.app/Frameworks</span><br><span class=\"line\">    <span class=\"built_in\">export</span> FRAMEWORK_FLAG_PREFIX=-framework</span><br><span class=\"line\">    <span class=\"built_in\">export</span> FRAMEWORK_SEARCH_PATHS=<span class=\"string\">&quot;/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products/Debug-iphoneos &quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> FRAMEWORK_VERSION=A</span><br><span class=\"line\">    <span class=\"built_in\">export</span> FULL_PRODUCT_NAME=SelfSizedCellByCodeExample.app</span><br><span class=\"line\">    <span class=\"built_in\">export</span> GCC3_VERSION=3.3</span><br><span class=\"line\">    <span class=\"built_in\">export</span> GCC_C_LANGUAGE_STANDARD=gnu99</span><br><span class=\"line\">    <span class=\"built_in\">export</span> GCC_DYNAMIC_NO_PIC=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> GCC_INLINES_ARE_PRIVATE_EXTERN=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> GCC_NO_COMMON_BLOCKS=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> GCC_OPTIMIZATION_LEVEL=0</span><br><span class=\"line\">    <span class=\"built_in\">export</span> GCC_PFE_FILE_C_DIALECTS=<span class=\"string\">&quot;c objective-c c++ objective-c++&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> GCC_PREPROCESSOR_DEFINITIONS=<span class=\"string\">&quot;DEBUG=1 &quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> GCC_SYMBOLS_PRIVATE_EXTERN=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> GCC_THUMB_SUPPORT=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> GCC_TREAT_WARNINGS_AS_ERRORS=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> GCC_VERSION=com.apple.compilers.llvm.clang.1_0</span><br><span class=\"line\">    <span class=\"built_in\">export</span> GCC_VERSION_IDENTIFIER=com_apple_compilers_llvm_clang_1_0</span><br><span class=\"line\">    <span class=\"built_in\">export</span> GCC_WARN_64_TO_32_BIT_CONVERSION=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> GCC_WARN_ABOUT_RETURN_TYPE=YES_ERROR</span><br><span class=\"line\">    <span class=\"built_in\">export</span> GCC_WARN_UNDECLARED_SELECTOR=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> GCC_WARN_UNINITIALIZED_AUTOS=YES_AGGRESSIVE</span><br><span class=\"line\">    <span class=\"built_in\">export</span> GCC_WARN_UNUSED_FUNCTION=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> GCC_WARN_UNUSED_VARIABLE=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> GENERATE_MASTER_OBJECT_FILE=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> GENERATE_PKGINFO_FILE=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> GENERATE_PROFILING_CODE=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> GID=20</span><br><span class=\"line\">    <span class=\"built_in\">export</span> GROUP=staff</span><br><span class=\"line\">    <span class=\"built_in\">export</span> HEADERMAP_INCLUDES_FLAT_ENTRIES_FOR_TARGET_BEING_BUILT=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> HEADERMAP_INCLUDES_FRAMEWORK_ENTRIES_FOR_ALL_PRODUCT_TYPES=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> HEADERMAP_INCLUDES_NONPUBLIC_NONPRIVATE_HEADERS=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> HEADERMAP_INCLUDES_PROJECT_HEADERS=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> HEADERMAP_USES_FRAMEWORK_PREFIX_ENTRIES=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> HEADERMAP_USES_VFS=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> HEADER_SEARCH_PATHS=<span class=\"string\">&quot;/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products/Debug-iphoneos/include &quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> HIDE_BITCODE_SYMBOLS=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> HOME=/Users/home</span><br><span class=\"line\">    <span class=\"built_in\">export</span> ICONV=/usr/bin/iconv</span><br><span class=\"line\">    <span class=\"built_in\">export</span> INFOPLIST_EXPAND_BUILD_SETTINGS=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> INFOPLIST_FILE=SelfSizedCellByCodeExample/Info.plist</span><br><span class=\"line\">    <span class=\"built_in\">export</span> INFOPLIST_OUTPUT_FORMAT=binary</span><br><span class=\"line\">    <span class=\"built_in\">export</span> INFOPLIST_PATH=SelfSizedCellByCodeExample.app/Info.plist</span><br><span class=\"line\">    <span class=\"built_in\">export</span> INFOPLIST_PREPROCESS=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> INFOSTRINGS_PATH=SelfSizedCellByCodeExample.app/English.lproj/InfoPlist.strings</span><br><span class=\"line\">    <span class=\"built_in\">export</span> INSTALL_DIR=/tmp/SelfSizedCellByCodeExample.dst/Applications</span><br><span class=\"line\">    <span class=\"built_in\">export</span> INSTALL_GROUP=staff</span><br><span class=\"line\">    <span class=\"built_in\">export</span> INSTALL_MODE_FLAG=u+w,go-w,a+rX</span><br><span class=\"line\">    <span class=\"built_in\">export</span> INSTALL_OWNER=home</span><br><span class=\"line\">    <span class=\"built_in\">export</span> INSTALL_PATH=/Applications</span><br><span class=\"line\">    <span class=\"built_in\">export</span> INSTALL_ROOT=/tmp/SelfSizedCellByCodeExample.dst</span><br><span class=\"line\">    <span class=\"built_in\">export</span> IPHONEOS_DEPLOYMENT_TARGET=7.0</span><br><span class=\"line\">    <span class=\"built_in\">export</span> JAVAC_DEFAULT_FLAGS=<span class=\"string\">&quot;-J-Xms64m -J-XX:NewSize=4M -J-Dfile.encoding=UTF8&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> JAVA_APP_STUB=/System/Library/Frameworks/JavaVM.framework/Resources/MacOS/JavaApplicationStub</span><br><span class=\"line\">    <span class=\"built_in\">export</span> JAVA_ARCHIVE_CLASSES=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> JAVA_ARCHIVE_TYPE=JAR</span><br><span class=\"line\">    <span class=\"built_in\">export</span> JAVA_COMPILER=/usr/bin/javac</span><br><span class=\"line\">    <span class=\"built_in\">export</span> JAVA_FOLDER_PATH=SelfSizedCellByCodeExample.app/Java</span><br><span class=\"line\">    <span class=\"built_in\">export</span> JAVA_FRAMEWORK_RESOURCES_DIRS=Resources</span><br><span class=\"line\">    <span class=\"built_in\">export</span> JAVA_JAR_FLAGS=cv</span><br><span class=\"line\">    <span class=\"built_in\">export</span> JAVA_SOURCE_SUBDIR=.</span><br><span class=\"line\">    <span class=\"built_in\">export</span> JAVA_USE_DEPENDENCIES=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> JAVA_ZIP_FLAGS=-urg</span><br><span class=\"line\">    <span class=\"built_in\">export</span> JIKES_DEFAULT_FLAGS=<span class=\"string\">&quot;+E +OLDCSO&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> KEEP_PRIVATE_EXTERNS=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> LD_DEPENDENCY_INFO_FILE=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/Objects-normal/arm64/SelfSizedCellByCodeExample_dependency_info.dat</span><br><span class=\"line\">    <span class=\"built_in\">export</span> LD_GENERATE_MAP_FILE=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> LD_MAP_FILE_PATH=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/SelfSizedCellByCodeExample-LinkMap-normal-arm64.txt</span><br><span class=\"line\">    <span class=\"built_in\">export</span> LD_NO_PIE=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> LD_QUOTE_LINKER_ARGUMENTS_FOR_COMPILER_DRIVER=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> LD_RUNPATH_SEARCH_PATHS=<span class=\"string\">&quot; @executable_path/Frameworks&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> LEGACY_DEVELOPER_DIR=/Applications/Xcode.app/Contents/PlugIns/Xcode3Core.ideplugin/Contents/SharedSupport/Developer</span><br><span class=\"line\">    <span class=\"built_in\">export</span> LEX=lex</span><br><span class=\"line\">    <span class=\"built_in\">export</span> LIBRARY_FLAG_NOSPACE=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> LIBRARY_FLAG_PREFIX=-l</span><br><span class=\"line\">    <span class=\"built_in\">export</span> LIBRARY_KEXT_INSTALL_PATH=/Library/Extensions</span><br><span class=\"line\">    <span class=\"built_in\">export</span> LIBRARY_SEARCH_PATHS=<span class=\"string\">&quot;/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products/Debug-iphoneos &quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> LINKER_DISPLAYS_MANGLED_NAMES=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> LINK_FILE_LIST_normal_arm64=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/Objects-normal/arm64/SelfSizedCellByCodeExample.LinkFileList</span><br><span class=\"line\">    <span class=\"built_in\">export</span> LINK_WITH_STANDARD_LIBRARIES=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> LOCALIZABLE_CONTENT_DIR=</span><br><span class=\"line\">    <span class=\"built_in\">export</span> LOCALIZED_RESOURCES_FOLDER_PATH=SelfSizedCellByCodeExample.app/English.lproj</span><br><span class=\"line\">    <span class=\"built_in\">export</span> LOCAL_ADMIN_APPS_DIR=/Applications/Utilities</span><br><span class=\"line\">    <span class=\"built_in\">export</span> LOCAL_APPS_DIR=/Applications</span><br><span class=\"line\">    <span class=\"built_in\">export</span> LOCAL_DEVELOPER_DIR=/Library/Developer</span><br><span class=\"line\">    <span class=\"built_in\">export</span> LOCAL_LIBRARY_DIR=/Library</span><br><span class=\"line\">    <span class=\"built_in\">export</span> LOCROOT=</span><br><span class=\"line\">    <span class=\"built_in\">export</span> LOCSYMROOT=</span><br><span class=\"line\">    <span class=\"built_in\">export</span> MACH_O_TYPE=mh_execute</span><br><span class=\"line\">    <span class=\"built_in\">export</span> MAC_OS_X_PRODUCT_BUILD_VERSION=15D21</span><br><span class=\"line\">    <span class=\"built_in\">export</span> MAC_OS_X_VERSION_ACTUAL=101103</span><br><span class=\"line\">    <span class=\"built_in\">export</span> MAC_OS_X_VERSION_MAJOR=101100</span><br><span class=\"line\">    <span class=\"built_in\">export</span> MAC_OS_X_VERSION_MINOR=1103</span><br><span class=\"line\">    <span class=\"built_in\">export</span> MODULE_CACHE_DIR=/Users/home/Library/Developer/Xcode/DerivedData/ModuleCache</span><br><span class=\"line\">    <span class=\"built_in\">export</span> MTL_ENABLE_DEBUG_INFO=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> NATIVE_ARCH=armv7</span><br><span class=\"line\">    <span class=\"built_in\">export</span> NATIVE_ARCH_32_BIT=i386</span><br><span class=\"line\">    <span class=\"built_in\">export</span> NATIVE_ARCH_64_BIT=x86_64</span><br><span class=\"line\">    <span class=\"built_in\">export</span> NATIVE_ARCH_ACTUAL=x86_64</span><br><span class=\"line\">    <span class=\"built_in\">export</span> NO_COMMON=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> OBJECT_FILE_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/Objects</span><br><span class=\"line\">    <span class=\"built_in\">export</span> OBJECT_FILE_DIR_normal=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/Objects-normal</span><br><span class=\"line\">    <span class=\"built_in\">export</span> OBJROOT=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates</span><br><span class=\"line\">    <span class=\"built_in\">export</span> ONLY_ACTIVE_ARCH=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> OPTIMIZATION_LEVEL=0</span><br><span class=\"line\">    <span class=\"built_in\">export</span> OS=MACOS</span><br><span class=\"line\">    <span class=\"built_in\">export</span> OSAC=/usr/bin/osacompile</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PACKAGE_TYPE=com.apple.package-type.wrapper.application</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PASCAL_STRINGS=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PATH=<span class=\"string\">&quot;/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin:/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/libexec:/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin:/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/local/bin:/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/usr/bin:/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/usr/local/bin:/Applications/Xcode.app/Contents/Developer/usr/bin:/Applications/Xcode.app/Contents/Developer/usr/local/bin:/Applications/Xcode.app/Contents/Developer/Tools:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> PATH_PREFIXES_EXCLUDED_FROM_HEADER_DEPENDENCIES=<span class=\"string\">&quot;/usr/include /usr/local/include /System/Library/Frameworks /System/Library/PrivateFrameworks /Applications/Xcode.app/Contents/Developer/Headers /Applications/Xcode.app/Contents/Developer/SDKs /Applications/Xcode.app/Contents/Developer/Platforms&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> PBDEVELOPMENTPLIST_PATH=SelfSizedCellByCodeExample.app/pbdevelopment.plist</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PFE_FILE_C_DIALECTS=objective-c</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PKGINFO_FILE_PATH=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/PkgInfo</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PKGINFO_PATH=SelfSizedCellByCodeExample.app/PkgInfo</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PLATFORM_DEVELOPER_APPLICATIONS_DIR=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/Applications</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PLATFORM_DEVELOPER_BIN_DIR=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PLATFORM_DEVELOPER_LIBRARY_DIR=/Applications/Xcode.app/Contents/PlugIns/Xcode3Core.ideplugin/Contents/SharedSupport/Developer/Library</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PLATFORM_DEVELOPER_SDK_DIR=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PLATFORM_DEVELOPER_TOOLS_DIR=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/Tools</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PLATFORM_DEVELOPER_USR_DIR=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PLATFORM_DIR=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PLATFORM_DISPLAY_NAME=iOS</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PLATFORM_NAME=iphoneos</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PLATFORM_PREFERRED_ARCH=arm64</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PLATFORM_PRODUCT_BUILD_VERSION=13C75</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PLIST_FILE_OUTPUT_FORMAT=binary</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PLUGINS_FOLDER_PATH=SelfSizedCellByCodeExample.app/PlugIns</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PRECOMPS_INCLUDE_HEADERS_FROM_BUILT_PRODUCTS_DIR=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PRECOMP_DESTINATION_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/PrefixHeaders</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PRESERVE_DEAD_CODE_INITS_AND_TERMS=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PRIVATE_HEADERS_FOLDER_PATH=SelfSizedCellByCodeExample.app/PrivateHeaders</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PRODUCT_BUNDLE_IDENTIFIER=tv.douyu.SelfSizedCellByCodeExample</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PRODUCT_MODULE_NAME=SelfSizedCellByCodeExample</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PRODUCT_NAME=SelfSizedCellByCodeExample</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PRODUCT_SETTINGS_PATH=<span class=\"string\">&quot;/Users/home/Desktop/Learning/codebase/My TableView/SelfSizedCellByCodeExample/SelfSizedCellByCodeExample/Info.plist&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> PRODUCT_TYPE=com.apple.product-type.application</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PROFILING_CODE=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PROJECT=SelfSizedCellByCodeExample</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PROJECT_DERIVED_FILE_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/DerivedSources</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PROJECT_DIR=<span class=\"string\">&quot;/Users/home/Desktop/Learning/codebase/My TableView/SelfSizedCellByCodeExample&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> PROJECT_FILE_PATH=<span class=\"string\">&quot;/Users/home/Desktop/Learning/codebase/My TableView/SelfSizedCellByCodeExample/SelfSizedCellByCodeExample.xcodeproj&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> PROJECT_NAME=SelfSizedCellByCodeExample</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PROJECT_TEMP_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PROJECT_TEMP_ROOT=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PROVISIONING_PROFILE_REQUIRED=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PUBLIC_HEADERS_FOLDER_PATH=SelfSizedCellByCodeExample.app/Headers</span><br><span class=\"line\">    <span class=\"built_in\">export</span> RECURSIVE_SEARCH_PATHS_FOLLOW_SYMLINKS=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> REMOVE_CVS_FROM_RESOURCES=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> REMOVE_GIT_FROM_RESOURCES=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> REMOVE_HEADERS_FROM_EMBEDDED_BUNDLES=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> REMOVE_HG_FROM_RESOURCES=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> REMOVE_SVN_FROM_RESOURCES=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> RESOURCE_RULES_REQUIRED=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> REZ_COLLECTOR_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/ResourceManagerResources</span><br><span class=\"line\">    <span class=\"built_in\">export</span> REZ_OBJECTS_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/ResourceManagerResources/Objects</span><br><span class=\"line\">    <span class=\"built_in\">export</span> REZ_SEARCH_PATHS=<span class=\"string\">&quot;/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products/Debug-iphoneos &quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> SCAN_ALL_SOURCE_FILES_FOR_INCLUDES=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SCRIPTS_FOLDER_PATH=SelfSizedCellByCodeExample.app/Scripts</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SCRIPT_INPUT_FILE_COUNT=0</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SCRIPT_OUTPUT_FILE_0=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/DerivedSources/myfile</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SCRIPT_OUTPUT_FILE_COUNT=1</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SDKROOT=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS9.2.sdk</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SDK_DIR=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS9.2.sdk</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SDK_DIR_iphoneos9_2=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS9.2.sdk</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SDK_NAME=iphoneos9.2</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SDK_NAMES=iphoneos9.2</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SDK_PRODUCT_BUILD_VERSION=13C75</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SDK_VERSION=9.2</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SDK_VERSION_ACTUAL=90200</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SDK_VERSION_MAJOR=90000</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SDK_VERSION_MINOR=200</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SED=/usr/bin/sed</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SEPARATE_STRIP=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SEPARATE_SYMBOL_EDIT=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SET_DIR_MODE_OWNER_GROUP=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SET_FILE_MODE_OWNER_GROUP=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SHALLOW_BUNDLE=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SHARED_DERIVED_FILE_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products/Debug-iphoneos/DerivedSources</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SHARED_FRAMEWORKS_FOLDER_PATH=SelfSizedCellByCodeExample.app/SharedFrameworks</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SHARED_PRECOMPS_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/PrecompiledHeaders</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SHARED_SUPPORT_FOLDER_PATH=SelfSizedCellByCodeExample.app/SharedSupport</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SKIP_INSTALL=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SOURCE_ROOT=<span class=\"string\">&quot;/Users/home/Desktop/Learning/codebase/My TableView/SelfSizedCellByCodeExample&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> SRCROOT=<span class=\"string\">&quot;/Users/home/Desktop/Learning/codebase/My TableView/SelfSizedCellByCodeExample&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> STRINGS_FILE_OUTPUT_ENCODING=binary</span><br><span class=\"line\">    <span class=\"built_in\">export</span> STRIP_BITCODE_FROM_COPIED_FILES=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> STRIP_INSTALLED_PRODUCT=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> STRIP_STYLE=all</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SUPPORTED_DEVICE_FAMILIES=1,2</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SUPPORTED_PLATFORMS=<span class=\"string\">&quot;iphonesimulator iphoneos&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> SUPPORTS_TEXT_BASED_API=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SWIFT_PLATFORM_TARGET_PREFIX=ios</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SYMROOT=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SYSTEM_ADMIN_APPS_DIR=/Applications/Utilities</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SYSTEM_APPS_DIR=/Applications</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SYSTEM_CORE_SERVICES_DIR=/System/Library/CoreServices</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SYSTEM_DEMOS_DIR=/Applications/Extras</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SYSTEM_DEVELOPER_APPS_DIR=/Applications/Xcode.app/Contents/Developer/Applications</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SYSTEM_DEVELOPER_BIN_DIR=/Applications/Xcode.app/Contents/Developer/usr/bin</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SYSTEM_DEVELOPER_DEMOS_DIR=<span class=\"string\">&quot;/Applications/Xcode.app/Contents/Developer/Applications/Utilities/Built Examples&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> SYSTEM_DEVELOPER_DIR=/Applications/Xcode.app/Contents/Developer</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SYSTEM_DEVELOPER_DOC_DIR=<span class=\"string\">&quot;/Applications/Xcode.app/Contents/Developer/ADC Reference Library&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> SYSTEM_DEVELOPER_GRAPHICS_TOOLS_DIR=<span class=\"string\">&quot;/Applications/Xcode.app/Contents/Developer/Applications/Graphics Tools&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> SYSTEM_DEVELOPER_JAVA_TOOLS_DIR=<span class=\"string\">&quot;/Applications/Xcode.app/Contents/Developer/Applications/Java Tools&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> SYSTEM_DEVELOPER_PERFORMANCE_TOOLS_DIR=<span class=\"string\">&quot;/Applications/Xcode.app/Contents/Developer/Applications/Performance Tools&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> SYSTEM_DEVELOPER_RELEASENOTES_DIR=<span class=\"string\">&quot;/Applications/Xcode.app/Contents/Developer/ADC Reference Library/releasenotes&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> SYSTEM_DEVELOPER_TOOLS=/Applications/Xcode.app/Contents/Developer/Tools</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SYSTEM_DEVELOPER_TOOLS_DOC_DIR=<span class=\"string\">&quot;/Applications/Xcode.app/Contents/Developer/ADC Reference Library/documentation/DeveloperTools&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> SYSTEM_DEVELOPER_TOOLS_RELEASENOTES_DIR=<span class=\"string\">&quot;/Applications/Xcode.app/Contents/Developer/ADC Reference Library/releasenotes/DeveloperTools&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> SYSTEM_DEVELOPER_USR_DIR=/Applications/Xcode.app/Contents/Developer/usr</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SYSTEM_DEVELOPER_UTILITIES_DIR=/Applications/Xcode.app/Contents/Developer/Applications/Utilities</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SYSTEM_DOCUMENTATION_DIR=/Library/Documentation</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SYSTEM_KEXT_INSTALL_PATH=/System/Library/Extensions</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SYSTEM_LIBRARY_DIR=/System/Library</span><br><span class=\"line\">    <span class=\"built_in\">export</span> TARGETED_DEVICE_FAMILY=1,2</span><br><span class=\"line\">    <span class=\"built_in\">export</span> TARGETNAME=SelfSizedCellByCodeExample</span><br><span class=\"line\">    <span class=\"built_in\">export</span> TARGET_BUILD_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products/Debug-iphoneos</span><br><span class=\"line\">    <span class=\"built_in\">export</span> TARGET_DEVICE_MODEL=iPhone7,2</span><br><span class=\"line\">    <span class=\"built_in\">export</span> TARGET_DEVICE_OS_VERSION=9.0.2</span><br><span class=\"line\">    <span class=\"built_in\">export</span> TARGET_NAME=SelfSizedCellByCodeExample</span><br><span class=\"line\">    <span class=\"built_in\">export</span> TARGET_TEMP_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build</span><br><span class=\"line\">    <span class=\"built_in\">export</span> TEMP_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build</span><br><span class=\"line\">    <span class=\"built_in\">export</span> TEMP_FILES_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build</span><br><span class=\"line\">    <span class=\"built_in\">export</span> TEMP_FILE_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build</span><br><span class=\"line\">    <span class=\"built_in\">export</span> TEMP_ROOT=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates</span><br><span class=\"line\">    <span class=\"built_in\">export</span> TOOLCHAINS=com.apple.dt.toolchain.XcodeDefault</span><br><span class=\"line\">    <span class=\"built_in\">export</span> TOOLCHAIN_DIR=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain</span><br><span class=\"line\">    <span class=\"built_in\">export</span> TREAT_MISSING_BASELINES_AS_TEST_FAILURES=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> UID=501</span><br><span class=\"line\">    <span class=\"built_in\">export</span> UNLOCALIZED_RESOURCES_FOLDER_PATH=SelfSizedCellByCodeExample.app</span><br><span class=\"line\">    <span class=\"built_in\">export</span> UNSTRIPPED_PRODUCT=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> USER=home</span><br><span class=\"line\">    <span class=\"built_in\">export</span> USER_APPS_DIR=/Users/home/Applications</span><br><span class=\"line\">    <span class=\"built_in\">export</span> USER_LIBRARY_DIR=/Users/home/Library</span><br><span class=\"line\">    <span class=\"built_in\">export</span> USE_DYNAMIC_NO_PIC=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> USE_HEADERMAP=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> USE_HEADER_SYMLINKS=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> VALIDATE_PRODUCT=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> VALID_ARCHS=<span class=\"string\">&quot;arm64 armv7 armv7s&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> VERBOSE_PBXCP=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> VERSIONPLIST_PATH=SelfSizedCellByCodeExample.app/version.plist</span><br><span class=\"line\">    <span class=\"built_in\">export</span> VERSION_INFO_BUILDER=home</span><br><span class=\"line\">    <span class=\"built_in\">export</span> VERSION_INFO_FILE=SelfSizedCellByCodeExample_vers.c</span><br><span class=\"line\">    <span class=\"built_in\">export</span> VERSION_INFO_STRING=<span class=\"string\">&quot;\\&quot;@(#)PROGRAM:SelfSizedCellByCodeExample  PROJECT:SelfSizedCellByCodeExample-\\&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> WRAPPER_EXTENSION=app</span><br><span class=\"line\">    <span class=\"built_in\">export</span> WRAPPER_NAME=SelfSizedCellByCodeExample.app</span><br><span class=\"line\">    <span class=\"built_in\">export</span> WRAPPER_SUFFIX=.app</span><br><span class=\"line\">    <span class=\"built_in\">export</span> WRAP_ASSET_PACKS_IN_SEPARATE_DIRECTORIES=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> XCODE_APP_SUPPORT_DIR=/Applications/Xcode.app/Contents/Developer/Library/Xcode</span><br><span class=\"line\">    <span class=\"built_in\">export</span> XCODE_PRODUCT_BUILD_VERSION=7C1002</span><br><span class=\"line\">    <span class=\"built_in\">export</span> XCODE_VERSION_ACTUAL=0721</span><br><span class=\"line\">    <span class=\"built_in\">export</span> XCODE_VERSION_MAJOR=0700</span><br><span class=\"line\">    <span class=\"built_in\">export</span> XCODE_VERSION_MINOR=0720</span><br><span class=\"line\">    <span class=\"built_in\">export</span> XPCSERVICES_FOLDER_PATH=SelfSizedCellByCodeExample.app/XPCServices</span><br><span class=\"line\">    <span class=\"built_in\">export</span> YACC=yacc</span><br><span class=\"line\">    <span class=\"built_in\">export</span> <span class=\"built_in\">arch</span>=arm64</span><br><span class=\"line\">    <span class=\"built_in\">export</span> variant=normal</span><br><span class=\"line\">    /bin/sh -c /Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/Script-993355071C92B75C004569A0.sh</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{"gallery":{"图片名称":{"full_link":"http://miccall.tech/img/twx.jpg","thumb_link":"http://miccall.tech/img/twx.jpg","descr":"图片描述"}},"links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}},"_links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}}}},"excerpt":"<p>在build 过程中，要想观察所有已存在的环境变量，你可以在 Build Phases 中添加一个 “Run Script”，并勾选上 “Show environment variables in build log”。</p>","more":"<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PhaseScriptExecution Run\\ Script /Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/Script-993355071C92B75C004569A0.sh</span><br><span class=\"line\">    <span class=\"built_in\">cd</span> <span class=\"string\">&quot;/Users/home/Desktop/Learning/codebase/My TableView/SelfSizedCellByCodeExample&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> ACTION=build</span><br><span class=\"line\">    <span class=\"built_in\">export</span> AD_HOC_CODE_SIGNING_ALLOWED=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> ALTERNATE_GROUP=staff</span><br><span class=\"line\">    <span class=\"built_in\">export</span> ALTERNATE_MODE=u+w,go-w,a+rX</span><br><span class=\"line\">    <span class=\"built_in\">export</span> ALTERNATE_OWNER=home</span><br><span class=\"line\">    <span class=\"built_in\">export</span> ALWAYS_SEARCH_USER_PATHS=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> ALWAYS_USE_SEPARATE_HEADERMAPS=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> APPLE_INTERNAL_DEVELOPER_DIR=/AppleInternal/Developer</span><br><span class=\"line\">    <span class=\"built_in\">export</span> APPLE_INTERNAL_DIR=/AppleInternal</span><br><span class=\"line\">    <span class=\"built_in\">export</span> APPLE_INTERNAL_DOCUMENTATION_DIR=/AppleInternal/Documentation</span><br><span class=\"line\">    <span class=\"built_in\">export</span> APPLE_INTERNAL_LIBRARY_DIR=/AppleInternal/Library</span><br><span class=\"line\">    <span class=\"built_in\">export</span> APPLE_INTERNAL_TOOLS=/AppleInternal/Developer/Tools</span><br><span class=\"line\">    <span class=\"built_in\">export</span> APPLICATION_EXTENSION_API_ONLY=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> APPLY_RULES_IN_COPY_FILES=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> ARCHS=arm64</span><br><span class=\"line\">    <span class=\"built_in\">export</span> ARCHS_STANDARD=<span class=\"string\">&quot;armv7 arm64&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> ARCHS_STANDARD_32_64_BIT=<span class=\"string\">&quot;armv7 arm64&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> ARCHS_STANDARD_32_BIT=armv7</span><br><span class=\"line\">    <span class=\"built_in\">export</span> ARCHS_STANDARD_64_BIT=arm64</span><br><span class=\"line\">    <span class=\"built_in\">export</span> ARCHS_STANDARD_INCLUDING_64_BIT=<span class=\"string\">&quot;armv7 arm64&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> ARCHS_UNIVERSAL_IPHONE_OS=<span class=\"string\">&quot;armv7 arm64&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> ASSETCATALOG_COMPILER_APPICON_NAME=AppIcon</span><br><span class=\"line\">    <span class=\"built_in\">export</span> AVAILABLE_PLATFORMS=<span class=\"string\">&quot;watchos iphonesimulator macosx appletvsimulator watchsimulator appletvos iphoneos&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> BITCODE_GENERATION_MODE=marker</span><br><span class=\"line\">    <span class=\"built_in\">export</span> BUILD_ACTIVE_RESOURCES_ONLY=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> BUILD_COMPONENTS=<span class=\"string\">&quot;headers build&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> BUILD_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products</span><br><span class=\"line\">    <span class=\"built_in\">export</span> BUILD_ROOT=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products</span><br><span class=\"line\">    <span class=\"built_in\">export</span> BUILD_STYLE=</span><br><span class=\"line\">    <span class=\"built_in\">export</span> BUILD_VARIANTS=normal</span><br><span class=\"line\">    <span class=\"built_in\">export</span> BUILT_PRODUCTS_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products/Debug-iphoneos</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CACHE_ROOT=/var/folders/vp/gh5sjvr13k5_r7tb5_n8y92c0000gn/C/com.apple.DeveloperTools/7.2.1-7C1002/Xcode</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CCHROOT=/var/folders/vp/gh5sjvr13k5_r7tb5_n8y92c0000gn/C/com.apple.DeveloperTools/7.2.1-7C1002/Xcode</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CHMOD=/bin/chmod</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CHOWN=/usr/sbin/chown</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CLANG_CXX_LANGUAGE_STANDARD=gnu++0x</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CLANG_CXX_LIBRARY=libc++</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CLANG_ENABLE_MODULES=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CLANG_ENABLE_OBJC_ARC=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CLANG_MODULES_BUILD_SESSION_FILE=/Users/home/Library/Developer/Xcode/DerivedData/ModuleCache/Session.modulevalidation</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CLANG_WARN_BOOL_CONVERSION=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CLANG_WARN_CONSTANT_CONVERSION=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CLANG_WARN_DIRECT_OBJC_ISA_USAGE=YES_ERROR</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CLANG_WARN_EMPTY_BODY=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CLANG_WARN_ENUM_CONVERSION=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CLANG_WARN_INT_CONVERSION=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CLANG_WARN_OBJC_ROOT_CLASS=YES_ERROR</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CLANG_WARN_UNREACHABLE_CODE=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CLANG_WARN__DUPLICATE_METHOD_MATCH=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CLASS_FILE_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/JavaClasses</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CLEAN_PRECOMPS=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CLONE_HEADERS=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CODESIGNING_FOLDER_PATH=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products/Debug-iphoneos/SelfSizedCellByCodeExample.app</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CODE_SIGNING_ALLOWED=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CODE_SIGNING_REQUIRED=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CODE_SIGN_CONTEXT_CLASS=XCiPhoneOSCodeSignContext</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CODE_SIGN_IDENTITY=<span class=\"string\">&quot;iPhone Developer&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> COLOR_DIAGNOSTICS=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> COMBINE_HIDPI_IMAGES=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> COMMAND_MODE=legacy</span><br><span class=\"line\">    <span class=\"built_in\">export</span> COMPOSITE_SDK_DIRS=/var/folders/vp/gh5sjvr13k5_r7tb5_n8y92c0000gn/C/com.apple.DeveloperTools/7.2.1-7C1002/Xcode/CompositeSDKs</span><br><span class=\"line\">    <span class=\"built_in\">export</span> COMPRESS_PNG_FILES=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CONFIGURATION=Debug</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CONFIGURATION_BUILD_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products/Debug-iphoneos</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CONFIGURATION_TEMP_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CONTENTS_FOLDER_PATH=SelfSizedCellByCodeExample.app</span><br><span class=\"line\">    <span class=\"built_in\">export</span> COPYING_PRESERVES_HFS_DATA=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> COPY_HEADERS_RUN_UNIFDEF=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> COPY_PHASE_STRIP=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> COPY_RESOURCES_FROM_STATIC_FRAMEWORKS=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CORRESPONDING_SIMULATOR_PLATFORM_DIR=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CORRESPONDING_SIMULATOR_PLATFORM_NAME=iphonesimulator</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CORRESPONDING_SIMULATOR_SDK_DIR=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator9.2.sdk</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CORRESPONDING_SIMULATOR_SDK_NAME=iphonesimulator9.2</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CP=/bin/cp</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CREATE_INFOPLIST_SECTION_IN_BINARY=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CURRENT_ARCH=arm64</span><br><span class=\"line\">    <span class=\"built_in\">export</span> CURRENT_VARIANT=normal</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DEAD_CODE_STRIPPING=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DEBUGGING_SYMBOLS=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DEBUG_INFORMATION_FORMAT=dwarf</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DEFAULT_COMPILER=com.apple.compilers.llvm.clang.1_0</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DEFAULT_KEXT_INSTALL_PATH=/System/Library/Extensions</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DEFINES_MODULE=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DEPLOYMENT_LOCATION=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DEPLOYMENT_POSTPROCESSING=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DEPLOYMENT_TARGET_CLANG_ENV_NAME=IPHONEOS_DEPLOYMENT_TARGET</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DEPLOYMENT_TARGET_CLANG_FLAG_NAME=miphoneos-version-min</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DEPLOYMENT_TARGET_CLANG_FLAG_PREFIX=-miphoneos-version-min=</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DEPLOYMENT_TARGET_SETTING_NAME=IPHONEOS_DEPLOYMENT_TARGET</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DEPLOYMENT_TARGET_SUGGESTED_VALUES=<span class=\"string\">&quot;6.0 6.1 7.0 7.1 8.0 8.1 8.2 8.3 8.4 9.0 9.1 9.2&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> DERIVED_FILES_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/DerivedSources</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DERIVED_FILE_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/DerivedSources</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DERIVED_SOURCES_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/DerivedSources</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DEVELOPER_APPLICATIONS_DIR=/Applications/Xcode.app/Contents/Developer/Applications</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DEVELOPER_BIN_DIR=/Applications/Xcode.app/Contents/Developer/usr/bin</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DEVELOPER_DIR=/Applications/Xcode.app/Contents/Developer</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DEVELOPER_FRAMEWORKS_DIR=/Applications/Xcode.app/Contents/Developer/Library/Frameworks</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DEVELOPER_FRAMEWORKS_DIR_QUOTED=/Applications/Xcode.app/Contents/Developer/Library/Frameworks</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DEVELOPER_LIBRARY_DIR=/Applications/Xcode.app/Contents/Developer/Library</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DEVELOPER_SDK_DIR=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DEVELOPER_TOOLS_DIR=/Applications/Xcode.app/Contents/Developer/Tools</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DEVELOPER_USR_DIR=/Applications/Xcode.app/Contents/Developer/usr</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DEVELOPMENT_LANGUAGE=English</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DOCUMENTATION_FOLDER_PATH=SelfSizedCellByCodeExample.app/English.lproj/Documentation</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DO_HEADER_SCANNING_IN_JAM=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DSTROOT=/tmp/SelfSizedCellByCodeExample.dst</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DT_TOOLCHAIN_DIR=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DWARF_DSYM_FILE_NAME=SelfSizedCellByCodeExample.app.dSYM</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DWARF_DSYM_FILE_SHOULD_ACCOMPANY_PRODUCT=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> DWARF_DSYM_FOLDER_PATH=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products/Debug-iphoneos</span><br><span class=\"line\">    <span class=\"built_in\">export</span> EFFECTIVE_PLATFORM_NAME=-iphoneos</span><br><span class=\"line\">    <span class=\"built_in\">export</span> EMBEDDED_CONTENT_CONTAINS_SWIFT=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> EMBEDDED_PROFILE_NAME=embedded.mobileprovision</span><br><span class=\"line\">    <span class=\"built_in\">export</span> EMBED_ASSET_PACKS_IN_PRODUCT_BUNDLE=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> ENABLE_BITCODE=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> ENABLE_HEADER_DEPENDENCIES=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> ENABLE_ON_DEMAND_RESOURCES=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> ENABLE_STRICT_OBJC_MSGSEND=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> ENABLE_TESTABILITY=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> ENTITLEMENTS_ALLOWED=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> ENTITLEMENTS_REQUIRED=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> EXCLUDED_INSTALLSRC_SUBDIRECTORY_PATTERNS=<span class=\"string\">&quot;.DS_Store .svn .git .hg CVS&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> EXCLUDED_RECURSIVE_SEARCH_PATH_SUBDIRECTORIES=<span class=\"string\">&quot;*.nib *.lproj *.framework *.gch *.xcode* *.xcassets (*) .DS_Store CVS .svn .git .hg *.pbproj *.pbxproj&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> EXECUTABLES_FOLDER_PATH=SelfSizedCellByCodeExample.app/Executables</span><br><span class=\"line\">    <span class=\"built_in\">export</span> EXECUTABLE_FOLDER_PATH=SelfSizedCellByCodeExample.app</span><br><span class=\"line\">    <span class=\"built_in\">export</span> EXECUTABLE_NAME=SelfSizedCellByCodeExample</span><br><span class=\"line\">    <span class=\"built_in\">export</span> EXECUTABLE_PATH=SelfSizedCellByCodeExample.app/SelfSizedCellByCodeExample</span><br><span class=\"line\">    <span class=\"built_in\">export</span> EXPANDED_CODE_SIGN_IDENTITY=54D2584F0CDFF507E70F191FC851A7D39B24F29B</span><br><span class=\"line\">    <span class=\"built_in\">export</span> EXPANDED_CODE_SIGN_IDENTITY_NAME=<span class=\"string\">&quot;iPhone Developer: Jing Yang (KEPL6DZH42)&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> EXPANDED_PROVISIONING_PROFILE=f2d6f047-08d8-4627-a967-585e63aa876a</span><br><span class=\"line\">    <span class=\"built_in\">export</span> FILE_LIST=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/Objects/LinkFileList</span><br><span class=\"line\">    <span class=\"built_in\">export</span> FIXED_FILES_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/FixedFiles</span><br><span class=\"line\">    <span class=\"built_in\">export</span> FRAMEWORKS_FOLDER_PATH=SelfSizedCellByCodeExample.app/Frameworks</span><br><span class=\"line\">    <span class=\"built_in\">export</span> FRAMEWORK_FLAG_PREFIX=-framework</span><br><span class=\"line\">    <span class=\"built_in\">export</span> FRAMEWORK_SEARCH_PATHS=<span class=\"string\">&quot;/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products/Debug-iphoneos &quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> FRAMEWORK_VERSION=A</span><br><span class=\"line\">    <span class=\"built_in\">export</span> FULL_PRODUCT_NAME=SelfSizedCellByCodeExample.app</span><br><span class=\"line\">    <span class=\"built_in\">export</span> GCC3_VERSION=3.3</span><br><span class=\"line\">    <span class=\"built_in\">export</span> GCC_C_LANGUAGE_STANDARD=gnu99</span><br><span class=\"line\">    <span class=\"built_in\">export</span> GCC_DYNAMIC_NO_PIC=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> GCC_INLINES_ARE_PRIVATE_EXTERN=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> GCC_NO_COMMON_BLOCKS=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> GCC_OPTIMIZATION_LEVEL=0</span><br><span class=\"line\">    <span class=\"built_in\">export</span> GCC_PFE_FILE_C_DIALECTS=<span class=\"string\">&quot;c objective-c c++ objective-c++&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> GCC_PREPROCESSOR_DEFINITIONS=<span class=\"string\">&quot;DEBUG=1 &quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> GCC_SYMBOLS_PRIVATE_EXTERN=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> GCC_THUMB_SUPPORT=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> GCC_TREAT_WARNINGS_AS_ERRORS=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> GCC_VERSION=com.apple.compilers.llvm.clang.1_0</span><br><span class=\"line\">    <span class=\"built_in\">export</span> GCC_VERSION_IDENTIFIER=com_apple_compilers_llvm_clang_1_0</span><br><span class=\"line\">    <span class=\"built_in\">export</span> GCC_WARN_64_TO_32_BIT_CONVERSION=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> GCC_WARN_ABOUT_RETURN_TYPE=YES_ERROR</span><br><span class=\"line\">    <span class=\"built_in\">export</span> GCC_WARN_UNDECLARED_SELECTOR=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> GCC_WARN_UNINITIALIZED_AUTOS=YES_AGGRESSIVE</span><br><span class=\"line\">    <span class=\"built_in\">export</span> GCC_WARN_UNUSED_FUNCTION=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> GCC_WARN_UNUSED_VARIABLE=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> GENERATE_MASTER_OBJECT_FILE=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> GENERATE_PKGINFO_FILE=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> GENERATE_PROFILING_CODE=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> GID=20</span><br><span class=\"line\">    <span class=\"built_in\">export</span> GROUP=staff</span><br><span class=\"line\">    <span class=\"built_in\">export</span> HEADERMAP_INCLUDES_FLAT_ENTRIES_FOR_TARGET_BEING_BUILT=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> HEADERMAP_INCLUDES_FRAMEWORK_ENTRIES_FOR_ALL_PRODUCT_TYPES=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> HEADERMAP_INCLUDES_NONPUBLIC_NONPRIVATE_HEADERS=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> HEADERMAP_INCLUDES_PROJECT_HEADERS=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> HEADERMAP_USES_FRAMEWORK_PREFIX_ENTRIES=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> HEADERMAP_USES_VFS=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> HEADER_SEARCH_PATHS=<span class=\"string\">&quot;/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products/Debug-iphoneos/include &quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> HIDE_BITCODE_SYMBOLS=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> HOME=/Users/home</span><br><span class=\"line\">    <span class=\"built_in\">export</span> ICONV=/usr/bin/iconv</span><br><span class=\"line\">    <span class=\"built_in\">export</span> INFOPLIST_EXPAND_BUILD_SETTINGS=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> INFOPLIST_FILE=SelfSizedCellByCodeExample/Info.plist</span><br><span class=\"line\">    <span class=\"built_in\">export</span> INFOPLIST_OUTPUT_FORMAT=binary</span><br><span class=\"line\">    <span class=\"built_in\">export</span> INFOPLIST_PATH=SelfSizedCellByCodeExample.app/Info.plist</span><br><span class=\"line\">    <span class=\"built_in\">export</span> INFOPLIST_PREPROCESS=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> INFOSTRINGS_PATH=SelfSizedCellByCodeExample.app/English.lproj/InfoPlist.strings</span><br><span class=\"line\">    <span class=\"built_in\">export</span> INSTALL_DIR=/tmp/SelfSizedCellByCodeExample.dst/Applications</span><br><span class=\"line\">    <span class=\"built_in\">export</span> INSTALL_GROUP=staff</span><br><span class=\"line\">    <span class=\"built_in\">export</span> INSTALL_MODE_FLAG=u+w,go-w,a+rX</span><br><span class=\"line\">    <span class=\"built_in\">export</span> INSTALL_OWNER=home</span><br><span class=\"line\">    <span class=\"built_in\">export</span> INSTALL_PATH=/Applications</span><br><span class=\"line\">    <span class=\"built_in\">export</span> INSTALL_ROOT=/tmp/SelfSizedCellByCodeExample.dst</span><br><span class=\"line\">    <span class=\"built_in\">export</span> IPHONEOS_DEPLOYMENT_TARGET=7.0</span><br><span class=\"line\">    <span class=\"built_in\">export</span> JAVAC_DEFAULT_FLAGS=<span class=\"string\">&quot;-J-Xms64m -J-XX:NewSize=4M -J-Dfile.encoding=UTF8&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> JAVA_APP_STUB=/System/Library/Frameworks/JavaVM.framework/Resources/MacOS/JavaApplicationStub</span><br><span class=\"line\">    <span class=\"built_in\">export</span> JAVA_ARCHIVE_CLASSES=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> JAVA_ARCHIVE_TYPE=JAR</span><br><span class=\"line\">    <span class=\"built_in\">export</span> JAVA_COMPILER=/usr/bin/javac</span><br><span class=\"line\">    <span class=\"built_in\">export</span> JAVA_FOLDER_PATH=SelfSizedCellByCodeExample.app/Java</span><br><span class=\"line\">    <span class=\"built_in\">export</span> JAVA_FRAMEWORK_RESOURCES_DIRS=Resources</span><br><span class=\"line\">    <span class=\"built_in\">export</span> JAVA_JAR_FLAGS=cv</span><br><span class=\"line\">    <span class=\"built_in\">export</span> JAVA_SOURCE_SUBDIR=.</span><br><span class=\"line\">    <span class=\"built_in\">export</span> JAVA_USE_DEPENDENCIES=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> JAVA_ZIP_FLAGS=-urg</span><br><span class=\"line\">    <span class=\"built_in\">export</span> JIKES_DEFAULT_FLAGS=<span class=\"string\">&quot;+E +OLDCSO&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> KEEP_PRIVATE_EXTERNS=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> LD_DEPENDENCY_INFO_FILE=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/Objects-normal/arm64/SelfSizedCellByCodeExample_dependency_info.dat</span><br><span class=\"line\">    <span class=\"built_in\">export</span> LD_GENERATE_MAP_FILE=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> LD_MAP_FILE_PATH=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/SelfSizedCellByCodeExample-LinkMap-normal-arm64.txt</span><br><span class=\"line\">    <span class=\"built_in\">export</span> LD_NO_PIE=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> LD_QUOTE_LINKER_ARGUMENTS_FOR_COMPILER_DRIVER=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> LD_RUNPATH_SEARCH_PATHS=<span class=\"string\">&quot; @executable_path/Frameworks&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> LEGACY_DEVELOPER_DIR=/Applications/Xcode.app/Contents/PlugIns/Xcode3Core.ideplugin/Contents/SharedSupport/Developer</span><br><span class=\"line\">    <span class=\"built_in\">export</span> LEX=lex</span><br><span class=\"line\">    <span class=\"built_in\">export</span> LIBRARY_FLAG_NOSPACE=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> LIBRARY_FLAG_PREFIX=-l</span><br><span class=\"line\">    <span class=\"built_in\">export</span> LIBRARY_KEXT_INSTALL_PATH=/Library/Extensions</span><br><span class=\"line\">    <span class=\"built_in\">export</span> LIBRARY_SEARCH_PATHS=<span class=\"string\">&quot;/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products/Debug-iphoneos &quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> LINKER_DISPLAYS_MANGLED_NAMES=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> LINK_FILE_LIST_normal_arm64=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/Objects-normal/arm64/SelfSizedCellByCodeExample.LinkFileList</span><br><span class=\"line\">    <span class=\"built_in\">export</span> LINK_WITH_STANDARD_LIBRARIES=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> LOCALIZABLE_CONTENT_DIR=</span><br><span class=\"line\">    <span class=\"built_in\">export</span> LOCALIZED_RESOURCES_FOLDER_PATH=SelfSizedCellByCodeExample.app/English.lproj</span><br><span class=\"line\">    <span class=\"built_in\">export</span> LOCAL_ADMIN_APPS_DIR=/Applications/Utilities</span><br><span class=\"line\">    <span class=\"built_in\">export</span> LOCAL_APPS_DIR=/Applications</span><br><span class=\"line\">    <span class=\"built_in\">export</span> LOCAL_DEVELOPER_DIR=/Library/Developer</span><br><span class=\"line\">    <span class=\"built_in\">export</span> LOCAL_LIBRARY_DIR=/Library</span><br><span class=\"line\">    <span class=\"built_in\">export</span> LOCROOT=</span><br><span class=\"line\">    <span class=\"built_in\">export</span> LOCSYMROOT=</span><br><span class=\"line\">    <span class=\"built_in\">export</span> MACH_O_TYPE=mh_execute</span><br><span class=\"line\">    <span class=\"built_in\">export</span> MAC_OS_X_PRODUCT_BUILD_VERSION=15D21</span><br><span class=\"line\">    <span class=\"built_in\">export</span> MAC_OS_X_VERSION_ACTUAL=101103</span><br><span class=\"line\">    <span class=\"built_in\">export</span> MAC_OS_X_VERSION_MAJOR=101100</span><br><span class=\"line\">    <span class=\"built_in\">export</span> MAC_OS_X_VERSION_MINOR=1103</span><br><span class=\"line\">    <span class=\"built_in\">export</span> MODULE_CACHE_DIR=/Users/home/Library/Developer/Xcode/DerivedData/ModuleCache</span><br><span class=\"line\">    <span class=\"built_in\">export</span> MTL_ENABLE_DEBUG_INFO=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> NATIVE_ARCH=armv7</span><br><span class=\"line\">    <span class=\"built_in\">export</span> NATIVE_ARCH_32_BIT=i386</span><br><span class=\"line\">    <span class=\"built_in\">export</span> NATIVE_ARCH_64_BIT=x86_64</span><br><span class=\"line\">    <span class=\"built_in\">export</span> NATIVE_ARCH_ACTUAL=x86_64</span><br><span class=\"line\">    <span class=\"built_in\">export</span> NO_COMMON=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> OBJECT_FILE_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/Objects</span><br><span class=\"line\">    <span class=\"built_in\">export</span> OBJECT_FILE_DIR_normal=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/Objects-normal</span><br><span class=\"line\">    <span class=\"built_in\">export</span> OBJROOT=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates</span><br><span class=\"line\">    <span class=\"built_in\">export</span> ONLY_ACTIVE_ARCH=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> OPTIMIZATION_LEVEL=0</span><br><span class=\"line\">    <span class=\"built_in\">export</span> OS=MACOS</span><br><span class=\"line\">    <span class=\"built_in\">export</span> OSAC=/usr/bin/osacompile</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PACKAGE_TYPE=com.apple.package-type.wrapper.application</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PASCAL_STRINGS=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PATH=<span class=\"string\">&quot;/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin:/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/libexec:/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin:/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/local/bin:/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/usr/bin:/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/usr/local/bin:/Applications/Xcode.app/Contents/Developer/usr/bin:/Applications/Xcode.app/Contents/Developer/usr/local/bin:/Applications/Xcode.app/Contents/Developer/Tools:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> PATH_PREFIXES_EXCLUDED_FROM_HEADER_DEPENDENCIES=<span class=\"string\">&quot;/usr/include /usr/local/include /System/Library/Frameworks /System/Library/PrivateFrameworks /Applications/Xcode.app/Contents/Developer/Headers /Applications/Xcode.app/Contents/Developer/SDKs /Applications/Xcode.app/Contents/Developer/Platforms&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> PBDEVELOPMENTPLIST_PATH=SelfSizedCellByCodeExample.app/pbdevelopment.plist</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PFE_FILE_C_DIALECTS=objective-c</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PKGINFO_FILE_PATH=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/PkgInfo</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PKGINFO_PATH=SelfSizedCellByCodeExample.app/PkgInfo</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PLATFORM_DEVELOPER_APPLICATIONS_DIR=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/Applications</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PLATFORM_DEVELOPER_BIN_DIR=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PLATFORM_DEVELOPER_LIBRARY_DIR=/Applications/Xcode.app/Contents/PlugIns/Xcode3Core.ideplugin/Contents/SharedSupport/Developer/Library</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PLATFORM_DEVELOPER_SDK_DIR=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PLATFORM_DEVELOPER_TOOLS_DIR=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/Tools</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PLATFORM_DEVELOPER_USR_DIR=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PLATFORM_DIR=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PLATFORM_DISPLAY_NAME=iOS</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PLATFORM_NAME=iphoneos</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PLATFORM_PREFERRED_ARCH=arm64</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PLATFORM_PRODUCT_BUILD_VERSION=13C75</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PLIST_FILE_OUTPUT_FORMAT=binary</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PLUGINS_FOLDER_PATH=SelfSizedCellByCodeExample.app/PlugIns</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PRECOMPS_INCLUDE_HEADERS_FROM_BUILT_PRODUCTS_DIR=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PRECOMP_DESTINATION_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/PrefixHeaders</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PRESERVE_DEAD_CODE_INITS_AND_TERMS=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PRIVATE_HEADERS_FOLDER_PATH=SelfSizedCellByCodeExample.app/PrivateHeaders</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PRODUCT_BUNDLE_IDENTIFIER=tv.douyu.SelfSizedCellByCodeExample</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PRODUCT_MODULE_NAME=SelfSizedCellByCodeExample</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PRODUCT_NAME=SelfSizedCellByCodeExample</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PRODUCT_SETTINGS_PATH=<span class=\"string\">&quot;/Users/home/Desktop/Learning/codebase/My TableView/SelfSizedCellByCodeExample/SelfSizedCellByCodeExample/Info.plist&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> PRODUCT_TYPE=com.apple.product-type.application</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PROFILING_CODE=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PROJECT=SelfSizedCellByCodeExample</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PROJECT_DERIVED_FILE_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/DerivedSources</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PROJECT_DIR=<span class=\"string\">&quot;/Users/home/Desktop/Learning/codebase/My TableView/SelfSizedCellByCodeExample&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> PROJECT_FILE_PATH=<span class=\"string\">&quot;/Users/home/Desktop/Learning/codebase/My TableView/SelfSizedCellByCodeExample/SelfSizedCellByCodeExample.xcodeproj&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> PROJECT_NAME=SelfSizedCellByCodeExample</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PROJECT_TEMP_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PROJECT_TEMP_ROOT=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PROVISIONING_PROFILE_REQUIRED=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> PUBLIC_HEADERS_FOLDER_PATH=SelfSizedCellByCodeExample.app/Headers</span><br><span class=\"line\">    <span class=\"built_in\">export</span> RECURSIVE_SEARCH_PATHS_FOLLOW_SYMLINKS=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> REMOVE_CVS_FROM_RESOURCES=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> REMOVE_GIT_FROM_RESOURCES=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> REMOVE_HEADERS_FROM_EMBEDDED_BUNDLES=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> REMOVE_HG_FROM_RESOURCES=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> REMOVE_SVN_FROM_RESOURCES=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> RESOURCE_RULES_REQUIRED=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> REZ_COLLECTOR_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/ResourceManagerResources</span><br><span class=\"line\">    <span class=\"built_in\">export</span> REZ_OBJECTS_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/ResourceManagerResources/Objects</span><br><span class=\"line\">    <span class=\"built_in\">export</span> REZ_SEARCH_PATHS=<span class=\"string\">&quot;/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products/Debug-iphoneos &quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> SCAN_ALL_SOURCE_FILES_FOR_INCLUDES=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SCRIPTS_FOLDER_PATH=SelfSizedCellByCodeExample.app/Scripts</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SCRIPT_INPUT_FILE_COUNT=0</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SCRIPT_OUTPUT_FILE_0=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/DerivedSources/myfile</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SCRIPT_OUTPUT_FILE_COUNT=1</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SDKROOT=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS9.2.sdk</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SDK_DIR=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS9.2.sdk</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SDK_DIR_iphoneos9_2=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS9.2.sdk</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SDK_NAME=iphoneos9.2</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SDK_NAMES=iphoneos9.2</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SDK_PRODUCT_BUILD_VERSION=13C75</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SDK_VERSION=9.2</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SDK_VERSION_ACTUAL=90200</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SDK_VERSION_MAJOR=90000</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SDK_VERSION_MINOR=200</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SED=/usr/bin/sed</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SEPARATE_STRIP=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SEPARATE_SYMBOL_EDIT=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SET_DIR_MODE_OWNER_GROUP=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SET_FILE_MODE_OWNER_GROUP=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SHALLOW_BUNDLE=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SHARED_DERIVED_FILE_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products/Debug-iphoneos/DerivedSources</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SHARED_FRAMEWORKS_FOLDER_PATH=SelfSizedCellByCodeExample.app/SharedFrameworks</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SHARED_PRECOMPS_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/PrecompiledHeaders</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SHARED_SUPPORT_FOLDER_PATH=SelfSizedCellByCodeExample.app/SharedSupport</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SKIP_INSTALL=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SOURCE_ROOT=<span class=\"string\">&quot;/Users/home/Desktop/Learning/codebase/My TableView/SelfSizedCellByCodeExample&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> SRCROOT=<span class=\"string\">&quot;/Users/home/Desktop/Learning/codebase/My TableView/SelfSizedCellByCodeExample&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> STRINGS_FILE_OUTPUT_ENCODING=binary</span><br><span class=\"line\">    <span class=\"built_in\">export</span> STRIP_BITCODE_FROM_COPIED_FILES=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> STRIP_INSTALLED_PRODUCT=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> STRIP_STYLE=all</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SUPPORTED_DEVICE_FAMILIES=1,2</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SUPPORTED_PLATFORMS=<span class=\"string\">&quot;iphonesimulator iphoneos&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> SUPPORTS_TEXT_BASED_API=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SWIFT_PLATFORM_TARGET_PREFIX=ios</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SYMROOT=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SYSTEM_ADMIN_APPS_DIR=/Applications/Utilities</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SYSTEM_APPS_DIR=/Applications</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SYSTEM_CORE_SERVICES_DIR=/System/Library/CoreServices</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SYSTEM_DEMOS_DIR=/Applications/Extras</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SYSTEM_DEVELOPER_APPS_DIR=/Applications/Xcode.app/Contents/Developer/Applications</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SYSTEM_DEVELOPER_BIN_DIR=/Applications/Xcode.app/Contents/Developer/usr/bin</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SYSTEM_DEVELOPER_DEMOS_DIR=<span class=\"string\">&quot;/Applications/Xcode.app/Contents/Developer/Applications/Utilities/Built Examples&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> SYSTEM_DEVELOPER_DIR=/Applications/Xcode.app/Contents/Developer</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SYSTEM_DEVELOPER_DOC_DIR=<span class=\"string\">&quot;/Applications/Xcode.app/Contents/Developer/ADC Reference Library&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> SYSTEM_DEVELOPER_GRAPHICS_TOOLS_DIR=<span class=\"string\">&quot;/Applications/Xcode.app/Contents/Developer/Applications/Graphics Tools&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> SYSTEM_DEVELOPER_JAVA_TOOLS_DIR=<span class=\"string\">&quot;/Applications/Xcode.app/Contents/Developer/Applications/Java Tools&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> SYSTEM_DEVELOPER_PERFORMANCE_TOOLS_DIR=<span class=\"string\">&quot;/Applications/Xcode.app/Contents/Developer/Applications/Performance Tools&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> SYSTEM_DEVELOPER_RELEASENOTES_DIR=<span class=\"string\">&quot;/Applications/Xcode.app/Contents/Developer/ADC Reference Library/releasenotes&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> SYSTEM_DEVELOPER_TOOLS=/Applications/Xcode.app/Contents/Developer/Tools</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SYSTEM_DEVELOPER_TOOLS_DOC_DIR=<span class=\"string\">&quot;/Applications/Xcode.app/Contents/Developer/ADC Reference Library/documentation/DeveloperTools&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> SYSTEM_DEVELOPER_TOOLS_RELEASENOTES_DIR=<span class=\"string\">&quot;/Applications/Xcode.app/Contents/Developer/ADC Reference Library/releasenotes/DeveloperTools&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> SYSTEM_DEVELOPER_USR_DIR=/Applications/Xcode.app/Contents/Developer/usr</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SYSTEM_DEVELOPER_UTILITIES_DIR=/Applications/Xcode.app/Contents/Developer/Applications/Utilities</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SYSTEM_DOCUMENTATION_DIR=/Library/Documentation</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SYSTEM_KEXT_INSTALL_PATH=/System/Library/Extensions</span><br><span class=\"line\">    <span class=\"built_in\">export</span> SYSTEM_LIBRARY_DIR=/System/Library</span><br><span class=\"line\">    <span class=\"built_in\">export</span> TARGETED_DEVICE_FAMILY=1,2</span><br><span class=\"line\">    <span class=\"built_in\">export</span> TARGETNAME=SelfSizedCellByCodeExample</span><br><span class=\"line\">    <span class=\"built_in\">export</span> TARGET_BUILD_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Products/Debug-iphoneos</span><br><span class=\"line\">    <span class=\"built_in\">export</span> TARGET_DEVICE_MODEL=iPhone7,2</span><br><span class=\"line\">    <span class=\"built_in\">export</span> TARGET_DEVICE_OS_VERSION=9.0.2</span><br><span class=\"line\">    <span class=\"built_in\">export</span> TARGET_NAME=SelfSizedCellByCodeExample</span><br><span class=\"line\">    <span class=\"built_in\">export</span> TARGET_TEMP_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build</span><br><span class=\"line\">    <span class=\"built_in\">export</span> TEMP_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build</span><br><span class=\"line\">    <span class=\"built_in\">export</span> TEMP_FILES_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build</span><br><span class=\"line\">    <span class=\"built_in\">export</span> TEMP_FILE_DIR=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build</span><br><span class=\"line\">    <span class=\"built_in\">export</span> TEMP_ROOT=/Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates</span><br><span class=\"line\">    <span class=\"built_in\">export</span> TOOLCHAINS=com.apple.dt.toolchain.XcodeDefault</span><br><span class=\"line\">    <span class=\"built_in\">export</span> TOOLCHAIN_DIR=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain</span><br><span class=\"line\">    <span class=\"built_in\">export</span> TREAT_MISSING_BASELINES_AS_TEST_FAILURES=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> UID=501</span><br><span class=\"line\">    <span class=\"built_in\">export</span> UNLOCALIZED_RESOURCES_FOLDER_PATH=SelfSizedCellByCodeExample.app</span><br><span class=\"line\">    <span class=\"built_in\">export</span> UNSTRIPPED_PRODUCT=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> USER=home</span><br><span class=\"line\">    <span class=\"built_in\">export</span> USER_APPS_DIR=/Users/home/Applications</span><br><span class=\"line\">    <span class=\"built_in\">export</span> USER_LIBRARY_DIR=/Users/home/Library</span><br><span class=\"line\">    <span class=\"built_in\">export</span> USE_DYNAMIC_NO_PIC=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> USE_HEADERMAP=YES</span><br><span class=\"line\">    <span class=\"built_in\">export</span> USE_HEADER_SYMLINKS=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> VALIDATE_PRODUCT=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> VALID_ARCHS=<span class=\"string\">&quot;arm64 armv7 armv7s&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> VERBOSE_PBXCP=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> VERSIONPLIST_PATH=SelfSizedCellByCodeExample.app/version.plist</span><br><span class=\"line\">    <span class=\"built_in\">export</span> VERSION_INFO_BUILDER=home</span><br><span class=\"line\">    <span class=\"built_in\">export</span> VERSION_INFO_FILE=SelfSizedCellByCodeExample_vers.c</span><br><span class=\"line\">    <span class=\"built_in\">export</span> VERSION_INFO_STRING=<span class=\"string\">&quot;\\&quot;@(#)PROGRAM:SelfSizedCellByCodeExample  PROJECT:SelfSizedCellByCodeExample-\\&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">export</span> WRAPPER_EXTENSION=app</span><br><span class=\"line\">    <span class=\"built_in\">export</span> WRAPPER_NAME=SelfSizedCellByCodeExample.app</span><br><span class=\"line\">    <span class=\"built_in\">export</span> WRAPPER_SUFFIX=.app</span><br><span class=\"line\">    <span class=\"built_in\">export</span> WRAP_ASSET_PACKS_IN_SEPARATE_DIRECTORIES=NO</span><br><span class=\"line\">    <span class=\"built_in\">export</span> XCODE_APP_SUPPORT_DIR=/Applications/Xcode.app/Contents/Developer/Library/Xcode</span><br><span class=\"line\">    <span class=\"built_in\">export</span> XCODE_PRODUCT_BUILD_VERSION=7C1002</span><br><span class=\"line\">    <span class=\"built_in\">export</span> XCODE_VERSION_ACTUAL=0721</span><br><span class=\"line\">    <span class=\"built_in\">export</span> XCODE_VERSION_MAJOR=0700</span><br><span class=\"line\">    <span class=\"built_in\">export</span> XCODE_VERSION_MINOR=0720</span><br><span class=\"line\">    <span class=\"built_in\">export</span> XPCSERVICES_FOLDER_PATH=SelfSizedCellByCodeExample.app/XPCServices</span><br><span class=\"line\">    <span class=\"built_in\">export</span> YACC=yacc</span><br><span class=\"line\">    <span class=\"built_in\">export</span> <span class=\"built_in\">arch</span>=arm64</span><br><span class=\"line\">    <span class=\"built_in\">export</span> variant=normal</span><br><span class=\"line\">    /bin/sh -c /Users/home/Library/Developer/Xcode/DerivedData/SelfSizedCellByCodeExample-hcqrqdritrqaldddhuundxfypgvk/Build/Intermediates/SelfSizedCellByCodeExample.build/Debug-iphoneos/SelfSizedCellByCodeExample.build/Script-993355071C92B75C004569A0.sh</span><br></pre></td></tr></table></figure>"},{"title":" 闭包、lambda 计算、block","date":"2014-05-15T07:07:23.000Z","thumbnail":"https://i0.hdslb.com/bfs/vc/493788433bf17760555a4881fcfbf2c24fbec23e.jpg","_content":"\n导读：\n\n* 什么是 block？\n* block 基本原理是什么？\n* 使用 block 需要避免哪些问题？\n\n<!-- more -->\n\n## 什么是 block\n\n### Block\n\nblock 概念：block是带有**自动变量值**的**匿名函数**。也称为闭包（closure）、lambda 计算。\n\nC语言的标注不允许存在这样的函数，但是可以通过函数指针来直接调用函数。\n\n```c \n// 声明一个函数\nint func(int count);      \n\n// 声明一个函数指针，并取出 func 的地址赋给 *funcP\nint (*funcP)(int count) = &func;   //注：函数形参可有可无，视情况而定\n\n// 通过函数名访问这个函数\nint result1 = func(10);   \n\n// 通过函数的指针访问这个函数\nint result2 = (*funcP)(10);\n```\n\n\n\n### 函数指针的用途：\n\n函数指针的用途有两个：\n\n* 调用函数\n* 作为函数的参数\n\n```c++\nClass* a; // a 是个对象，类型是指针\nClass *a; // a 是个指针，类型是类\n\n/* \n *  虽然上述写法均表示声明一个指针型变量，但是着重点不同。\n *  前者意在声明一个变量，后者意在声明一个指针。\n *  这种自行体会就好，不要拘泥于写法。\n */\n```\n\n\n\n### 悬浮指针的出现及避免\n\n声明一个指针需要注意的问题：\n\n* 避免出现**悬浮指针**（也称迷途指针、失控指针）\n\n悬浮指针的出现：dealloc 一个指针后，没有把指针置空（nil）。\n\n*如果再次调用该指针并没有重新赋值，就会出现问题*。\n\n> 注意：空指针 ！= 迷途指针。空指针指向的地址为空。\n\n> 指针的指针即本身\n\n\n\n### 函数中可能使用的变量：\n\n* 函数的参数\n\n* 局部变量（自动变量）\n\n* 静态变量（静态局部变量）\n\n* 全局变量\n\n* 静态全局变量\n\n  > 使用全局变量会占用更多的内存（因为其生命期长），不过在计算机配置很高的今天，这个不应该算什么问题，除非使用的是巨大对象的全局变量，能避免就一定要避免。\n\n\n\n### OC 中函数和方法的区别\n\n函数和对象无关，方法和对象有关。最主要的是，函数和方法写法不一样啊！\n\n> 函数是指把一个值通过一系列计算得到一个新的值。\n>\n> 而方法更多考虑的是事情。如让一个人通过一系列动作制造一个新的东西。\n\n\n\n### 为什么 Block 可以作为函数参数和返回值？\n\n函数的参数和返回值可以是 void、int，也可以是一个类对象，当然也可以是指针（int* char*）。而 block 为什么可以作为函数的参数甚至是返回值呢？\n\n**因为block的本质是 OC 对象。**（OC 的 层面）\n\nblock的实质是**栈**上 block 的结构体实例。（C 的层面）这里也可以理解为是一个函数指针。\n\n```objc\n// 声明一个参数为 int 型、返回值为 int 型的 blk_t类型\ntypedef int(^blk_t)(int); \n\n// 声明一个 blk 变量 int (^blk)(int) = ^(int count){return count+1;};\n blk_t blk = ^(int count){return count+1;};// 等价于第二行\n\n// 声明一个名为 blkptr 的 blk_t型的指针，并指向 blk 的地址。\nblk_t *blkptr = &blk;\n(*blkptr)(10); // 利用指针调用这个 blk\nblk(10); // 直接调用这个 blk\n```\n\n\n\n### __block 说明符\n\n引入`__block`的目的是用来声明变量的作用域的，意思就是 block 外用`__block`声明的变量，block 内也能访问到。虽然这货和全局变量有些类似，但是老机器全局变量用多了会导致浪费内存啊！（因为全局变量生命周期比较长）。\n\n吐槽：乖乖用__block吧，特大的对象做全局变量的时候，也是会出现问题的。\n\n\n\n### block 的实质\n\nblock的实质是**栈**上 block 的结构体实例。（吐槽，说白了就是通过指针访问的）\n\n（写一个代码用 clang rewrite 一下就明白了，因为有 Foundation 框架，一个5行的代码能重写成将近10万行。。不过核心代码在最后几行，翻到最后看就可以了）\n\n> 重写代码的时候会发现有三个结构体，一个是`__block_imp1 `另一个是`__main_block_imp1_0`还有一个是`__main_block_desc_0`\n>\n> 这里面引申一个概念就是 IMP 和SEL，具体以后再分析(runtime)，知道SEL 表示（选择器） IMP 表示*函数指针*就可以了。\n\n\n\n`__block`的实质是栈上`__block`变量的结构体实例。\n\n```objc\n// block的实质结构\ntypedef objc_class *Class; //Class 为 objc_class 结构体的指针类型\n\ntypedef struct objc_object{\n  Class isa;\n} *id; //id为 objc_objec 结构体的指针类型\n```\n\n\n\n将 block源码转换为 C++源码：`clang -rewrite-objc filename`\n\n| __block变量的配置存储域 | Block 从栈复制到堆是的影响  |\n| --------------- | ----------------- |\n| 栈（stack）        | 从栈复制到堆并被 Block 持有 |\n| 堆（heap/maclloc） | 被 Block 持有        |\n\n栈上的 block ：变量作用域结束时，栈上的 __block变量和 block 被废弃\n\n堆上的 block：变量作用域结束时不受影响，需要手动释放。 \n\n\n\n## block 循环引用的问题\n\n如果在 Block 中使用__strong修饰的对象和变量，那么当 Block 从栈复制到堆上的时候，该对象就会被 Block所持有。这样就会引起循环引用。\n\n> 循环引用这里有个重点，Block 是存储在栈上的，普通对象和变量是存储在堆上的。堆（malloc）上的内存需要我们手动管理（需要 dealloc），而栈上的内存顾名思义是按照数据结构中栈的方式管理，即由系统进行分配。\n\n\n\n**对象持有 block => block持有 self => self 持有对象，即形成循环引用。**（这里的 self 也包含当前类的其他属性，因为在调用属性的同时也截获了 self）。\n\n> 编译器能查出循环引用。\n\n## copy release\n\nARC 无效的时候，我们需要手动将 Block 从栈复制到堆。\n\n因为 ARC 无效，所以需要我们手动释放复制的 Block。\n\n这个时候我们用 copy 方法来复制，release 方法来释放。\n\n```objc\nvoid (^block_on_heap)(void) = [block_on_stack copy];//正常复制\n\n[block_on_heap release];//正常释放\n\n[block_on_heap retain]; // 因为block 在堆上，所以可以被 retain\n\n[block_on_stack retain];// 因为现在 block 在栈上，所以这个方法没用\n```\n\n\n\n> ARC 是苹果公司在iOS 5 以后推出的内存管理机制。。iOS 5以前是手动管理的。。如果还问我 ARC 的话，那我基本不考虑你们公司了。。。。\n\n\n\n## __block的作用\n\nARC 无效__block用来避免 Block 中出现的循环引用。\n\n栈——>堆时：__block修饰的变量不会被 retain。没用它修饰的就会被 retain。\n\n\n\n## ARC\n\n| 对象操作    | OC 方法                          |\n| ------- | ------------------------------ |\n| 生成并持有对象 | + alloc、+ new、copy、mutableCopy |\n| 持有对象    | - retain                       |\n| 释放对象    | - release                      |\n| 废弃对象    | - dealloc                      |\n\n\n\n## `__strong` 和 `__weak`\n\n__strong：表示对对象的强引用。即在超出其作用域被废弃时，随着强引用的释放，引用的对象也会被释放。\n\n\n\n## 内存泄露\n\n循环引用容易导致内存泄露。内存泄露就是应当废弃的对象在超出其生存周期后继续存在。\n\n","source":"_posts/2014/闭包、lambda-计算、block.md","raw":"---\ntitle: ' 闭包、lambda 计算、block'\ndate: 2014-05-15 15:07:23\ntags:\ncategories: iOS-Dev\nthumbnail: \"https://i0.hdslb.com/bfs/vc/493788433bf17760555a4881fcfbf2c24fbec23e.jpg\"\n---\n\n导读：\n\n* 什么是 block？\n* block 基本原理是什么？\n* 使用 block 需要避免哪些问题？\n\n<!-- more -->\n\n## 什么是 block\n\n### Block\n\nblock 概念：block是带有**自动变量值**的**匿名函数**。也称为闭包（closure）、lambda 计算。\n\nC语言的标注不允许存在这样的函数，但是可以通过函数指针来直接调用函数。\n\n```c \n// 声明一个函数\nint func(int count);      \n\n// 声明一个函数指针，并取出 func 的地址赋给 *funcP\nint (*funcP)(int count) = &func;   //注：函数形参可有可无，视情况而定\n\n// 通过函数名访问这个函数\nint result1 = func(10);   \n\n// 通过函数的指针访问这个函数\nint result2 = (*funcP)(10);\n```\n\n\n\n### 函数指针的用途：\n\n函数指针的用途有两个：\n\n* 调用函数\n* 作为函数的参数\n\n```c++\nClass* a; // a 是个对象，类型是指针\nClass *a; // a 是个指针，类型是类\n\n/* \n *  虽然上述写法均表示声明一个指针型变量，但是着重点不同。\n *  前者意在声明一个变量，后者意在声明一个指针。\n *  这种自行体会就好，不要拘泥于写法。\n */\n```\n\n\n\n### 悬浮指针的出现及避免\n\n声明一个指针需要注意的问题：\n\n* 避免出现**悬浮指针**（也称迷途指针、失控指针）\n\n悬浮指针的出现：dealloc 一个指针后，没有把指针置空（nil）。\n\n*如果再次调用该指针并没有重新赋值，就会出现问题*。\n\n> 注意：空指针 ！= 迷途指针。空指针指向的地址为空。\n\n> 指针的指针即本身\n\n\n\n### 函数中可能使用的变量：\n\n* 函数的参数\n\n* 局部变量（自动变量）\n\n* 静态变量（静态局部变量）\n\n* 全局变量\n\n* 静态全局变量\n\n  > 使用全局变量会占用更多的内存（因为其生命期长），不过在计算机配置很高的今天，这个不应该算什么问题，除非使用的是巨大对象的全局变量，能避免就一定要避免。\n\n\n\n### OC 中函数和方法的区别\n\n函数和对象无关，方法和对象有关。最主要的是，函数和方法写法不一样啊！\n\n> 函数是指把一个值通过一系列计算得到一个新的值。\n>\n> 而方法更多考虑的是事情。如让一个人通过一系列动作制造一个新的东西。\n\n\n\n### 为什么 Block 可以作为函数参数和返回值？\n\n函数的参数和返回值可以是 void、int，也可以是一个类对象，当然也可以是指针（int* char*）。而 block 为什么可以作为函数的参数甚至是返回值呢？\n\n**因为block的本质是 OC 对象。**（OC 的 层面）\n\nblock的实质是**栈**上 block 的结构体实例。（C 的层面）这里也可以理解为是一个函数指针。\n\n```objc\n// 声明一个参数为 int 型、返回值为 int 型的 blk_t类型\ntypedef int(^blk_t)(int); \n\n// 声明一个 blk 变量 int (^blk)(int) = ^(int count){return count+1;};\n blk_t blk = ^(int count){return count+1;};// 等价于第二行\n\n// 声明一个名为 blkptr 的 blk_t型的指针，并指向 blk 的地址。\nblk_t *blkptr = &blk;\n(*blkptr)(10); // 利用指针调用这个 blk\nblk(10); // 直接调用这个 blk\n```\n\n\n\n### __block 说明符\n\n引入`__block`的目的是用来声明变量的作用域的，意思就是 block 外用`__block`声明的变量，block 内也能访问到。虽然这货和全局变量有些类似，但是老机器全局变量用多了会导致浪费内存啊！（因为全局变量生命周期比较长）。\n\n吐槽：乖乖用__block吧，特大的对象做全局变量的时候，也是会出现问题的。\n\n\n\n### block 的实质\n\nblock的实质是**栈**上 block 的结构体实例。（吐槽，说白了就是通过指针访问的）\n\n（写一个代码用 clang rewrite 一下就明白了，因为有 Foundation 框架，一个5行的代码能重写成将近10万行。。不过核心代码在最后几行，翻到最后看就可以了）\n\n> 重写代码的时候会发现有三个结构体，一个是`__block_imp1 `另一个是`__main_block_imp1_0`还有一个是`__main_block_desc_0`\n>\n> 这里面引申一个概念就是 IMP 和SEL，具体以后再分析(runtime)，知道SEL 表示（选择器） IMP 表示*函数指针*就可以了。\n\n\n\n`__block`的实质是栈上`__block`变量的结构体实例。\n\n```objc\n// block的实质结构\ntypedef objc_class *Class; //Class 为 objc_class 结构体的指针类型\n\ntypedef struct objc_object{\n  Class isa;\n} *id; //id为 objc_objec 结构体的指针类型\n```\n\n\n\n将 block源码转换为 C++源码：`clang -rewrite-objc filename`\n\n| __block变量的配置存储域 | Block 从栈复制到堆是的影响  |\n| --------------- | ----------------- |\n| 栈（stack）        | 从栈复制到堆并被 Block 持有 |\n| 堆（heap/maclloc） | 被 Block 持有        |\n\n栈上的 block ：变量作用域结束时，栈上的 __block变量和 block 被废弃\n\n堆上的 block：变量作用域结束时不受影响，需要手动释放。 \n\n\n\n## block 循环引用的问题\n\n如果在 Block 中使用__strong修饰的对象和变量，那么当 Block 从栈复制到堆上的时候，该对象就会被 Block所持有。这样就会引起循环引用。\n\n> 循环引用这里有个重点，Block 是存储在栈上的，普通对象和变量是存储在堆上的。堆（malloc）上的内存需要我们手动管理（需要 dealloc），而栈上的内存顾名思义是按照数据结构中栈的方式管理，即由系统进行分配。\n\n\n\n**对象持有 block => block持有 self => self 持有对象，即形成循环引用。**（这里的 self 也包含当前类的其他属性，因为在调用属性的同时也截获了 self）。\n\n> 编译器能查出循环引用。\n\n## copy release\n\nARC 无效的时候，我们需要手动将 Block 从栈复制到堆。\n\n因为 ARC 无效，所以需要我们手动释放复制的 Block。\n\n这个时候我们用 copy 方法来复制，release 方法来释放。\n\n```objc\nvoid (^block_on_heap)(void) = [block_on_stack copy];//正常复制\n\n[block_on_heap release];//正常释放\n\n[block_on_heap retain]; // 因为block 在堆上，所以可以被 retain\n\n[block_on_stack retain];// 因为现在 block 在栈上，所以这个方法没用\n```\n\n\n\n> ARC 是苹果公司在iOS 5 以后推出的内存管理机制。。iOS 5以前是手动管理的。。如果还问我 ARC 的话，那我基本不考虑你们公司了。。。。\n\n\n\n## __block的作用\n\nARC 无效__block用来避免 Block 中出现的循环引用。\n\n栈——>堆时：__block修饰的变量不会被 retain。没用它修饰的就会被 retain。\n\n\n\n## ARC\n\n| 对象操作    | OC 方法                          |\n| ------- | ------------------------------ |\n| 生成并持有对象 | + alloc、+ new、copy、mutableCopy |\n| 持有对象    | - retain                       |\n| 释放对象    | - release                      |\n| 废弃对象    | - dealloc                      |\n\n\n\n## `__strong` 和 `__weak`\n\n__strong：表示对对象的强引用。即在超出其作用域被废弃时，随着强引用的释放，引用的对象也会被释放。\n\n\n\n## 内存泄露\n\n循环引用容易导致内存泄露。内存泄露就是应当废弃的对象在超出其生存周期后继续存在。\n\n","slug":"2014/闭包、lambda-计算、block","published":1,"updated":"2024-01-02T16:09:25.080Z","_id":"clqwlt7wt000uuc7t74zi9b7e","comments":1,"layout":"post","photos":[],"link":"","content":"<p>导读：</p>\n<ul>\n<li>什么是 block？</li>\n<li>block 基本原理是什么？</li>\n<li>使用 block 需要避免哪些问题？</li>\n</ul>\n<span id=\"more\"></span>\n\n<h2 id=\"什么是-block\"><a href=\"#什么是-block\" class=\"headerlink\" title=\"什么是 block\"></a>什么是 block</h2><h3 id=\"Block\"><a href=\"#Block\" class=\"headerlink\" title=\"Block\"></a>Block</h3><p>block 概念：block是带有<strong>自动变量值</strong>的<strong>匿名函数</strong>。也称为闭包（closure）、lambda 计算。</p>\n<p>C语言的标注不允许存在这样的函数，但是可以通过函数指针来直接调用函数。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 声明一个函数</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">func</span><span class=\"params\">(<span class=\"type\">int</span> count)</span>;      </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 声明一个函数指针，并取出 func 的地址赋给 *funcP</span></span><br><span class=\"line\"><span class=\"type\">int</span> (*funcP)(<span class=\"type\">int</span> count) = &amp;func;   <span class=\"comment\">//注：函数形参可有可无，视情况而定</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 通过函数名访问这个函数</span></span><br><span class=\"line\"><span class=\"type\">int</span> result1 = func(<span class=\"number\">10</span>);   </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 通过函数的指针访问这个函数</span></span><br><span class=\"line\"><span class=\"type\">int</span> result2 = (*funcP)(<span class=\"number\">10</span>);</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"函数指针的用途：\"><a href=\"#函数指针的用途：\" class=\"headerlink\" title=\"函数指针的用途：\"></a>函数指针的用途：</h3><p>函数指针的用途有两个：</p>\n<ul>\n<li>调用函数</li>\n<li>作为函数的参数</li>\n</ul>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Class* a; <span class=\"comment\">// a 是个对象，类型是指针</span></span><br><span class=\"line\">Class *a; <span class=\"comment\">// a 是个指针，类型是类</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* </span></span><br><span class=\"line\"><span class=\"comment\"> *  虽然上述写法均表示声明一个指针型变量，但是着重点不同。</span></span><br><span class=\"line\"><span class=\"comment\"> *  前者意在声明一个变量，后者意在声明一个指针。</span></span><br><span class=\"line\"><span class=\"comment\"> *  这种自行体会就好，不要拘泥于写法。</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"悬浮指针的出现及避免\"><a href=\"#悬浮指针的出现及避免\" class=\"headerlink\" title=\"悬浮指针的出现及避免\"></a>悬浮指针的出现及避免</h3><p>声明一个指针需要注意的问题：</p>\n<ul>\n<li>避免出现<strong>悬浮指针</strong>（也称迷途指针、失控指针）</li>\n</ul>\n<p>悬浮指针的出现：dealloc 一个指针后，没有把指针置空（nil）。</p>\n<p><em>如果再次调用该指针并没有重新赋值，就会出现问题</em>。</p>\n<blockquote>\n<p>注意：空指针 ！&#x3D; 迷途指针。空指针指向的地址为空。</p>\n</blockquote>\n<blockquote>\n<p>指针的指针即本身</p>\n</blockquote>\n<h3 id=\"函数中可能使用的变量：\"><a href=\"#函数中可能使用的变量：\" class=\"headerlink\" title=\"函数中可能使用的变量：\"></a>函数中可能使用的变量：</h3><ul>\n<li><p>函数的参数</p>\n</li>\n<li><p>局部变量（自动变量）</p>\n</li>\n<li><p>静态变量（静态局部变量）</p>\n</li>\n<li><p>全局变量</p>\n</li>\n<li><p>静态全局变量</p>\n<blockquote>\n<p>使用全局变量会占用更多的内存（因为其生命期长），不过在计算机配置很高的今天，这个不应该算什么问题，除非使用的是巨大对象的全局变量，能避免就一定要避免。</p>\n</blockquote>\n</li>\n</ul>\n<h3 id=\"OC-中函数和方法的区别\"><a href=\"#OC-中函数和方法的区别\" class=\"headerlink\" title=\"OC 中函数和方法的区别\"></a>OC 中函数和方法的区别</h3><p>函数和对象无关，方法和对象有关。最主要的是，函数和方法写法不一样啊！</p>\n<blockquote>\n<p>函数是指把一个值通过一系列计算得到一个新的值。</p>\n<p>而方法更多考虑的是事情。如让一个人通过一系列动作制造一个新的东西。</p>\n</blockquote>\n<h3 id=\"为什么-Block-可以作为函数参数和返回值？\"><a href=\"#为什么-Block-可以作为函数参数和返回值？\" class=\"headerlink\" title=\"为什么 Block 可以作为函数参数和返回值？\"></a>为什么 Block 可以作为函数参数和返回值？</h3><p>函数的参数和返回值可以是 void、int，也可以是一个类对象，当然也可以是指针（int* char*）。而 block 为什么可以作为函数的参数甚至是返回值呢？</p>\n<p><strong>因为block的本质是 OC 对象。</strong>（OC 的 层面）</p>\n<p>block的实质是<strong>栈</strong>上 block 的结构体实例。（C 的层面）这里也可以理解为是一个函数指针。</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 声明一个参数为 int 型、返回值为 int 型的 blk_t类型</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span>(^blk_t)(<span class=\"type\">int</span>); </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 声明一个 blk 变量 int (^blk)(int) = ^(int count)&#123;return count+1;&#125;;</span></span><br><span class=\"line\"> blk_t blk = ^(<span class=\"type\">int</span> count)&#123;<span class=\"keyword\">return</span> count+<span class=\"number\">1</span>;&#125;;<span class=\"comment\">// 等价于第二行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 声明一个名为 blkptr 的 blk_t型的指针，并指向 blk 的地址。</span></span><br><span class=\"line\">blk_t *blkptr = &amp;blk;</span><br><span class=\"line\">(*blkptr)(<span class=\"number\">10</span>); <span class=\"comment\">// 利用指针调用这个 blk</span></span><br><span class=\"line\">blk(<span class=\"number\">10</span>); <span class=\"comment\">// 直接调用这个 blk</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"block-说明符\"><a href=\"#block-说明符\" class=\"headerlink\" title=\"__block 说明符\"></a>__block 说明符</h3><p>引入<code>__block</code>的目的是用来声明变量的作用域的，意思就是 block 外用<code>__block</code>声明的变量，block 内也能访问到。虽然这货和全局变量有些类似，但是老机器全局变量用多了会导致浪费内存啊！（因为全局变量生命周期比较长）。</p>\n<p>吐槽：乖乖用__block吧，特大的对象做全局变量的时候，也是会出现问题的。</p>\n<h3 id=\"block-的实质\"><a href=\"#block-的实质\" class=\"headerlink\" title=\"block 的实质\"></a>block 的实质</h3><p>block的实质是<strong>栈</strong>上 block 的结构体实例。（吐槽，说白了就是通过指针访问的）</p>\n<p>（写一个代码用 clang rewrite 一下就明白了，因为有 Foundation 框架，一个5行的代码能重写成将近10万行。。不过核心代码在最后几行，翻到最后看就可以了）</p>\n<blockquote>\n<p>重写代码的时候会发现有三个结构体，一个是<code>__block_imp1 </code>另一个是<code>__main_block_imp1_0</code>还有一个是<code>__main_block_desc_0</code></p>\n<p>这里面引申一个概念就是 IMP 和SEL，具体以后再分析(runtime)，知道SEL 表示（选择器） IMP 表示<em>函数指针</em>就可以了。</p>\n</blockquote>\n<p><code>__block</code>的实质是栈上<code>__block</code>变量的结构体实例。</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// block的实质结构</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> objc_class *Class; <span class=\"comment\">//Class 为 objc_class 结构体的指针类型</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">struct</span> objc_object&#123;</span><br><span class=\"line\">  Class isa;</span><br><span class=\"line\">&#125; *<span class=\"type\">id</span>; <span class=\"comment\">//id为 objc_objec 结构体的指针类型</span></span><br></pre></td></tr></table></figure>\n\n\n\n<p>将 block源码转换为 C++源码：<code>clang -rewrite-objc filename</code></p>\n<table>\n<thead>\n<tr>\n<th>__block变量的配置存储域</th>\n<th>Block 从栈复制到堆是的影响</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>栈（stack）</td>\n<td>从栈复制到堆并被 Block 持有</td>\n</tr>\n<tr>\n<td>堆（heap&#x2F;maclloc）</td>\n<td>被 Block 持有</td>\n</tr>\n</tbody></table>\n<p>栈上的 block ：变量作用域结束时，栈上的 __block变量和 block 被废弃</p>\n<p>堆上的 block：变量作用域结束时不受影响，需要手动释放。 </p>\n<h2 id=\"block-循环引用的问题\"><a href=\"#block-循环引用的问题\" class=\"headerlink\" title=\"block 循环引用的问题\"></a>block 循环引用的问题</h2><p>如果在 Block 中使用__strong修饰的对象和变量，那么当 Block 从栈复制到堆上的时候，该对象就会被 Block所持有。这样就会引起循环引用。</p>\n<blockquote>\n<p>循环引用这里有个重点，Block 是存储在栈上的，普通对象和变量是存储在堆上的。堆（malloc）上的内存需要我们手动管理（需要 dealloc），而栈上的内存顾名思义是按照数据结构中栈的方式管理，即由系统进行分配。</p>\n</blockquote>\n<p><strong>对象持有 block &#x3D;&gt; block持有 self &#x3D;&gt; self 持有对象，即形成循环引用。</strong>（这里的 self 也包含当前类的其他属性，因为在调用属性的同时也截获了 self）。</p>\n<blockquote>\n<p>编译器能查出循环引用。</p>\n</blockquote>\n<h2 id=\"copy-release\"><a href=\"#copy-release\" class=\"headerlink\" title=\"copy release\"></a>copy release</h2><p>ARC 无效的时候，我们需要手动将 Block 从栈复制到堆。</p>\n<p>因为 ARC 无效，所以需要我们手动释放复制的 Block。</p>\n<p>这个时候我们用 copy 方法来复制，release 方法来释放。</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> (^block_on_heap)(<span class=\"type\">void</span>) = [block_on_stack <span class=\"keyword\">copy</span>];<span class=\"comment\">//正常复制</span></span><br><span class=\"line\"></span><br><span class=\"line\">[block_on_heap release];<span class=\"comment\">//正常释放</span></span><br><span class=\"line\"></span><br><span class=\"line\">[block_on_heap <span class=\"keyword\">retain</span>]; <span class=\"comment\">// 因为block 在堆上，所以可以被 retain</span></span><br><span class=\"line\"></span><br><span class=\"line\">[block_on_stack <span class=\"keyword\">retain</span>];<span class=\"comment\">// 因为现在 block 在栈上，所以这个方法没用</span></span><br></pre></td></tr></table></figure>\n\n\n\n<blockquote>\n<p>ARC 是苹果公司在iOS 5 以后推出的内存管理机制。。iOS 5以前是手动管理的。。如果还问我 ARC 的话，那我基本不考虑你们公司了。。。。</p>\n</blockquote>\n<h2 id=\"block的作用\"><a href=\"#block的作用\" class=\"headerlink\" title=\"__block的作用\"></a>__block的作用</h2><p>ARC 无效__block用来避免 Block 中出现的循环引用。</p>\n<p>栈——&gt;堆时：__block修饰的变量不会被 retain。没用它修饰的就会被 retain。</p>\n<h2 id=\"ARC\"><a href=\"#ARC\" class=\"headerlink\" title=\"ARC\"></a>ARC</h2><table>\n<thead>\n<tr>\n<th>对象操作</th>\n<th>OC 方法</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>生成并持有对象</td>\n<td>+ alloc、+ new、copy、mutableCopy</td>\n</tr>\n<tr>\n<td>持有对象</td>\n<td>- retain</td>\n</tr>\n<tr>\n<td>释放对象</td>\n<td>- release</td>\n</tr>\n<tr>\n<td>废弃对象</td>\n<td>- dealloc</td>\n</tr>\n</tbody></table>\n<h2 id=\"strong-和-weak\"><a href=\"#strong-和-weak\" class=\"headerlink\" title=\"__strong 和 __weak\"></a><code>__strong</code> 和 <code>__weak</code></h2><p>__strong：表示对对象的强引用。即在超出其作用域被废弃时，随着强引用的释放，引用的对象也会被释放。</p>\n<h2 id=\"内存泄露\"><a href=\"#内存泄露\" class=\"headerlink\" title=\"内存泄露\"></a>内存泄露</h2><p>循环引用容易导致内存泄露。内存泄露就是应当废弃的对象在超出其生存周期后继续存在。</p>\n","site":{"data":{"gallery":{"图片名称":{"full_link":"http://miccall.tech/img/twx.jpg","thumb_link":"http://miccall.tech/img/twx.jpg","descr":"图片描述"}},"links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}},"_links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}}}},"excerpt":"<p>导读：</p>\n<ul>\n<li>什么是 block？</li>\n<li>block 基本原理是什么？</li>\n<li>使用 block 需要避免哪些问题？</li>\n</ul>","more":"<h2 id=\"什么是-block\"><a href=\"#什么是-block\" class=\"headerlink\" title=\"什么是 block\"></a>什么是 block</h2><h3 id=\"Block\"><a href=\"#Block\" class=\"headerlink\" title=\"Block\"></a>Block</h3><p>block 概念：block是带有<strong>自动变量值</strong>的<strong>匿名函数</strong>。也称为闭包（closure）、lambda 计算。</p>\n<p>C语言的标注不允许存在这样的函数，但是可以通过函数指针来直接调用函数。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 声明一个函数</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">func</span><span class=\"params\">(<span class=\"type\">int</span> count)</span>;      </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 声明一个函数指针，并取出 func 的地址赋给 *funcP</span></span><br><span class=\"line\"><span class=\"type\">int</span> (*funcP)(<span class=\"type\">int</span> count) = &amp;func;   <span class=\"comment\">//注：函数形参可有可无，视情况而定</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 通过函数名访问这个函数</span></span><br><span class=\"line\"><span class=\"type\">int</span> result1 = func(<span class=\"number\">10</span>);   </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 通过函数的指针访问这个函数</span></span><br><span class=\"line\"><span class=\"type\">int</span> result2 = (*funcP)(<span class=\"number\">10</span>);</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"函数指针的用途：\"><a href=\"#函数指针的用途：\" class=\"headerlink\" title=\"函数指针的用途：\"></a>函数指针的用途：</h3><p>函数指针的用途有两个：</p>\n<ul>\n<li>调用函数</li>\n<li>作为函数的参数</li>\n</ul>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Class* a; <span class=\"comment\">// a 是个对象，类型是指针</span></span><br><span class=\"line\">Class *a; <span class=\"comment\">// a 是个指针，类型是类</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* </span></span><br><span class=\"line\"><span class=\"comment\"> *  虽然上述写法均表示声明一个指针型变量，但是着重点不同。</span></span><br><span class=\"line\"><span class=\"comment\"> *  前者意在声明一个变量，后者意在声明一个指针。</span></span><br><span class=\"line\"><span class=\"comment\"> *  这种自行体会就好，不要拘泥于写法。</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"悬浮指针的出现及避免\"><a href=\"#悬浮指针的出现及避免\" class=\"headerlink\" title=\"悬浮指针的出现及避免\"></a>悬浮指针的出现及避免</h3><p>声明一个指针需要注意的问题：</p>\n<ul>\n<li>避免出现<strong>悬浮指针</strong>（也称迷途指针、失控指针）</li>\n</ul>\n<p>悬浮指针的出现：dealloc 一个指针后，没有把指针置空（nil）。</p>\n<p><em>如果再次调用该指针并没有重新赋值，就会出现问题</em>。</p>\n<blockquote>\n<p>注意：空指针 ！&#x3D; 迷途指针。空指针指向的地址为空。</p>\n</blockquote>\n<blockquote>\n<p>指针的指针即本身</p>\n</blockquote>\n<h3 id=\"函数中可能使用的变量：\"><a href=\"#函数中可能使用的变量：\" class=\"headerlink\" title=\"函数中可能使用的变量：\"></a>函数中可能使用的变量：</h3><ul>\n<li><p>函数的参数</p>\n</li>\n<li><p>局部变量（自动变量）</p>\n</li>\n<li><p>静态变量（静态局部变量）</p>\n</li>\n<li><p>全局变量</p>\n</li>\n<li><p>静态全局变量</p>\n<blockquote>\n<p>使用全局变量会占用更多的内存（因为其生命期长），不过在计算机配置很高的今天，这个不应该算什么问题，除非使用的是巨大对象的全局变量，能避免就一定要避免。</p>\n</blockquote>\n</li>\n</ul>\n<h3 id=\"OC-中函数和方法的区别\"><a href=\"#OC-中函数和方法的区别\" class=\"headerlink\" title=\"OC 中函数和方法的区别\"></a>OC 中函数和方法的区别</h3><p>函数和对象无关，方法和对象有关。最主要的是，函数和方法写法不一样啊！</p>\n<blockquote>\n<p>函数是指把一个值通过一系列计算得到一个新的值。</p>\n<p>而方法更多考虑的是事情。如让一个人通过一系列动作制造一个新的东西。</p>\n</blockquote>\n<h3 id=\"为什么-Block-可以作为函数参数和返回值？\"><a href=\"#为什么-Block-可以作为函数参数和返回值？\" class=\"headerlink\" title=\"为什么 Block 可以作为函数参数和返回值？\"></a>为什么 Block 可以作为函数参数和返回值？</h3><p>函数的参数和返回值可以是 void、int，也可以是一个类对象，当然也可以是指针（int* char*）。而 block 为什么可以作为函数的参数甚至是返回值呢？</p>\n<p><strong>因为block的本质是 OC 对象。</strong>（OC 的 层面）</p>\n<p>block的实质是<strong>栈</strong>上 block 的结构体实例。（C 的层面）这里也可以理解为是一个函数指针。</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 声明一个参数为 int 型、返回值为 int 型的 blk_t类型</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span>(^blk_t)(<span class=\"type\">int</span>); </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 声明一个 blk 变量 int (^blk)(int) = ^(int count)&#123;return count+1;&#125;;</span></span><br><span class=\"line\"> blk_t blk = ^(<span class=\"type\">int</span> count)&#123;<span class=\"keyword\">return</span> count+<span class=\"number\">1</span>;&#125;;<span class=\"comment\">// 等价于第二行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 声明一个名为 blkptr 的 blk_t型的指针，并指向 blk 的地址。</span></span><br><span class=\"line\">blk_t *blkptr = &amp;blk;</span><br><span class=\"line\">(*blkptr)(<span class=\"number\">10</span>); <span class=\"comment\">// 利用指针调用这个 blk</span></span><br><span class=\"line\">blk(<span class=\"number\">10</span>); <span class=\"comment\">// 直接调用这个 blk</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"block-说明符\"><a href=\"#block-说明符\" class=\"headerlink\" title=\"__block 说明符\"></a>__block 说明符</h3><p>引入<code>__block</code>的目的是用来声明变量的作用域的，意思就是 block 外用<code>__block</code>声明的变量，block 内也能访问到。虽然这货和全局变量有些类似，但是老机器全局变量用多了会导致浪费内存啊！（因为全局变量生命周期比较长）。</p>\n<p>吐槽：乖乖用__block吧，特大的对象做全局变量的时候，也是会出现问题的。</p>\n<h3 id=\"block-的实质\"><a href=\"#block-的实质\" class=\"headerlink\" title=\"block 的实质\"></a>block 的实质</h3><p>block的实质是<strong>栈</strong>上 block 的结构体实例。（吐槽，说白了就是通过指针访问的）</p>\n<p>（写一个代码用 clang rewrite 一下就明白了，因为有 Foundation 框架，一个5行的代码能重写成将近10万行。。不过核心代码在最后几行，翻到最后看就可以了）</p>\n<blockquote>\n<p>重写代码的时候会发现有三个结构体，一个是<code>__block_imp1 </code>另一个是<code>__main_block_imp1_0</code>还有一个是<code>__main_block_desc_0</code></p>\n<p>这里面引申一个概念就是 IMP 和SEL，具体以后再分析(runtime)，知道SEL 表示（选择器） IMP 表示<em>函数指针</em>就可以了。</p>\n</blockquote>\n<p><code>__block</code>的实质是栈上<code>__block</code>变量的结构体实例。</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// block的实质结构</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> objc_class *Class; <span class=\"comment\">//Class 为 objc_class 结构体的指针类型</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">struct</span> objc_object&#123;</span><br><span class=\"line\">  Class isa;</span><br><span class=\"line\">&#125; *<span class=\"type\">id</span>; <span class=\"comment\">//id为 objc_objec 结构体的指针类型</span></span><br></pre></td></tr></table></figure>\n\n\n\n<p>将 block源码转换为 C++源码：<code>clang -rewrite-objc filename</code></p>\n<table>\n<thead>\n<tr>\n<th>__block变量的配置存储域</th>\n<th>Block 从栈复制到堆是的影响</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>栈（stack）</td>\n<td>从栈复制到堆并被 Block 持有</td>\n</tr>\n<tr>\n<td>堆（heap&#x2F;maclloc）</td>\n<td>被 Block 持有</td>\n</tr>\n</tbody></table>\n<p>栈上的 block ：变量作用域结束时，栈上的 __block变量和 block 被废弃</p>\n<p>堆上的 block：变量作用域结束时不受影响，需要手动释放。 </p>\n<h2 id=\"block-循环引用的问题\"><a href=\"#block-循环引用的问题\" class=\"headerlink\" title=\"block 循环引用的问题\"></a>block 循环引用的问题</h2><p>如果在 Block 中使用__strong修饰的对象和变量，那么当 Block 从栈复制到堆上的时候，该对象就会被 Block所持有。这样就会引起循环引用。</p>\n<blockquote>\n<p>循环引用这里有个重点，Block 是存储在栈上的，普通对象和变量是存储在堆上的。堆（malloc）上的内存需要我们手动管理（需要 dealloc），而栈上的内存顾名思义是按照数据结构中栈的方式管理，即由系统进行分配。</p>\n</blockquote>\n<p><strong>对象持有 block &#x3D;&gt; block持有 self &#x3D;&gt; self 持有对象，即形成循环引用。</strong>（这里的 self 也包含当前类的其他属性，因为在调用属性的同时也截获了 self）。</p>\n<blockquote>\n<p>编译器能查出循环引用。</p>\n</blockquote>\n<h2 id=\"copy-release\"><a href=\"#copy-release\" class=\"headerlink\" title=\"copy release\"></a>copy release</h2><p>ARC 无效的时候，我们需要手动将 Block 从栈复制到堆。</p>\n<p>因为 ARC 无效，所以需要我们手动释放复制的 Block。</p>\n<p>这个时候我们用 copy 方法来复制，release 方法来释放。</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> (^block_on_heap)(<span class=\"type\">void</span>) = [block_on_stack <span class=\"keyword\">copy</span>];<span class=\"comment\">//正常复制</span></span><br><span class=\"line\"></span><br><span class=\"line\">[block_on_heap release];<span class=\"comment\">//正常释放</span></span><br><span class=\"line\"></span><br><span class=\"line\">[block_on_heap <span class=\"keyword\">retain</span>]; <span class=\"comment\">// 因为block 在堆上，所以可以被 retain</span></span><br><span class=\"line\"></span><br><span class=\"line\">[block_on_stack <span class=\"keyword\">retain</span>];<span class=\"comment\">// 因为现在 block 在栈上，所以这个方法没用</span></span><br></pre></td></tr></table></figure>\n\n\n\n<blockquote>\n<p>ARC 是苹果公司在iOS 5 以后推出的内存管理机制。。iOS 5以前是手动管理的。。如果还问我 ARC 的话，那我基本不考虑你们公司了。。。。</p>\n</blockquote>\n<h2 id=\"block的作用\"><a href=\"#block的作用\" class=\"headerlink\" title=\"__block的作用\"></a>__block的作用</h2><p>ARC 无效__block用来避免 Block 中出现的循环引用。</p>\n<p>栈——&gt;堆时：__block修饰的变量不会被 retain。没用它修饰的就会被 retain。</p>\n<h2 id=\"ARC\"><a href=\"#ARC\" class=\"headerlink\" title=\"ARC\"></a>ARC</h2><table>\n<thead>\n<tr>\n<th>对象操作</th>\n<th>OC 方法</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>生成并持有对象</td>\n<td>+ alloc、+ new、copy、mutableCopy</td>\n</tr>\n<tr>\n<td>持有对象</td>\n<td>- retain</td>\n</tr>\n<tr>\n<td>释放对象</td>\n<td>- release</td>\n</tr>\n<tr>\n<td>废弃对象</td>\n<td>- dealloc</td>\n</tr>\n</tbody></table>\n<h2 id=\"strong-和-weak\"><a href=\"#strong-和-weak\" class=\"headerlink\" title=\"__strong 和 __weak\"></a><code>__strong</code> 和 <code>__weak</code></h2><p>__strong：表示对对象的强引用。即在超出其作用域被废弃时，随着强引用的释放，引用的对象也会被释放。</p>\n<h2 id=\"内存泄露\"><a href=\"#内存泄露\" class=\"headerlink\" title=\"内存泄露\"></a>内存泄露</h2><p>循环引用容易导致内存泄露。内存泄露就是应当废弃的对象在超出其生存周期后继续存在。</p>"},{"title":"weak和 strong","date":"2014-05-20T02:53:58.000Z","thumbnail":"https://i0.hdslb.com/bfs/vc/f5c4831af0acac49b5e45d974c2313a09aee5851.jpg","_content":"\n强引用和弱引用常考知识点和易错盲点。\n<!-- more -->\n\n@property中 weak 和 strong 的使用先看两段代码：\n\n```objc\n@interface ViewController ()\n\n@property (nonatomic,strong)UIButton *button1;\n\n@end\n\n@implementation ViewController\n\n-(UIButton *)button1{\n    if (!_button1) {\n_button1=[UIButton buttonWithType:UIButtonTypeCustom];\n        _button1.frame=CGRectMake(50, 50, 100, 100);\n        [_button1 setTitle:@\"第一个\" forState:UIControlStateNormal];\n_button1.backgroundColor=[UIColor redColor];\n    }\nreturn _button1;\n\n}\n\n- (void)viewDidLoad {\n    [super viewDidLoad];\n    [self.view addSubview:self.button1];\n}\n\n@end\n```\n\n```objc\n@interface ViewController ()\n\n@property (nonatomic,weak) UIButton *button2;\n\n@end\n  \n@implementation ViewController\n\n-(UIButton *)button2{ \n\t\n    UIButton *btn=[UIButton buttonWithType:UIButtonTypeCustom];\n    btn.frame=CGRectMake(100, 100, 100, 100);\n    [btn setTitle:@\"第二个\" forState:UIControlStateNormal];\n    btn.backgroundColor=[UIColor yellowColor];\n    return btn;\n}\n\n- (void)viewDidLoad {\n    [super viewDidLoad];\n    [self.view addSubview:self.button2];\n}\n\n@end\n```\n\n@property：strong：视图被移除时，因为有强引用指向他，所以不再次释放一下，则引用计数就是1\n\n@property：weak：从父视图移除时，这个 button 就直接释放了，因为是弱引用，所以不对引用计数造成影响（就像 assign）（xib 用 weak）\n\nweak 的机制：weak 变量能够在引用计数为 0 时被自动设置成 nil，显然是有运行时逻辑在工作的。\n\n","source":"_posts/2014/weak和-strong.md","raw":"---\ntitle: weak和 strong\ndate: 2014-05-20 10:53:58\ntags: weak&strong\ncategories: iOS-Dev\nthumbnail: https://i0.hdslb.com/bfs/vc/f5c4831af0acac49b5e45d974c2313a09aee5851.jpg\n---\n\n强引用和弱引用常考知识点和易错盲点。\n<!-- more -->\n\n@property中 weak 和 strong 的使用先看两段代码：\n\n```objc\n@interface ViewController ()\n\n@property (nonatomic,strong)UIButton *button1;\n\n@end\n\n@implementation ViewController\n\n-(UIButton *)button1{\n    if (!_button1) {\n_button1=[UIButton buttonWithType:UIButtonTypeCustom];\n        _button1.frame=CGRectMake(50, 50, 100, 100);\n        [_button1 setTitle:@\"第一个\" forState:UIControlStateNormal];\n_button1.backgroundColor=[UIColor redColor];\n    }\nreturn _button1;\n\n}\n\n- (void)viewDidLoad {\n    [super viewDidLoad];\n    [self.view addSubview:self.button1];\n}\n\n@end\n```\n\n```objc\n@interface ViewController ()\n\n@property (nonatomic,weak) UIButton *button2;\n\n@end\n  \n@implementation ViewController\n\n-(UIButton *)button2{ \n\t\n    UIButton *btn=[UIButton buttonWithType:UIButtonTypeCustom];\n    btn.frame=CGRectMake(100, 100, 100, 100);\n    [btn setTitle:@\"第二个\" forState:UIControlStateNormal];\n    btn.backgroundColor=[UIColor yellowColor];\n    return btn;\n}\n\n- (void)viewDidLoad {\n    [super viewDidLoad];\n    [self.view addSubview:self.button2];\n}\n\n@end\n```\n\n@property：strong：视图被移除时，因为有强引用指向他，所以不再次释放一下，则引用计数就是1\n\n@property：weak：从父视图移除时，这个 button 就直接释放了，因为是弱引用，所以不对引用计数造成影响（就像 assign）（xib 用 weak）\n\nweak 的机制：weak 变量能够在引用计数为 0 时被自动设置成 nil，显然是有运行时逻辑在工作的。\n\n","slug":"2014/weak和-strong","published":1,"updated":"2024-01-02T16:09:25.079Z","_id":"clqwlt7wt000vuc7t8bi70sbc","comments":1,"layout":"post","photos":[],"link":"","content":"<p>强引用和弱引用常考知识点和易错盲点。</p>\n<span id=\"more\"></span>\n\n<p>@property中 weak 和 strong 的使用先看两段代码：</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">@interface</span> <span class=\"title\">ViewController</span> ()</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@property</span> (<span class=\"keyword\">nonatomic</span>,<span class=\"keyword\">strong</span>)<span class=\"built_in\">UIButton</span> *button1;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">@implementation</span> <span class=\"title\">ViewController</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">-(<span class=\"built_in\">UIButton</span> *)button1&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!_button1) &#123;</span><br><span class=\"line\">_button1=[<span class=\"built_in\">UIButton</span> buttonWithType:<span class=\"built_in\">UIButtonTypeCustom</span>];</span><br><span class=\"line\">        _button1.frame=<span class=\"built_in\">CGRectMake</span>(<span class=\"number\">50</span>, <span class=\"number\">50</span>, <span class=\"number\">100</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\">        [_button1 setTitle:<span class=\"string\">@&quot;第一个&quot;</span> forState:<span class=\"built_in\">UIControlStateNormal</span>];</span><br><span class=\"line\">_button1.backgroundColor=[<span class=\"built_in\">UIColor</span> redColor];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"keyword\">return</span> _button1;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"type\">void</span>)viewDidLoad &#123;</span><br><span class=\"line\">    [<span class=\"variable language_\">super</span> viewDidLoad];</span><br><span class=\"line\">    [<span class=\"keyword\">self</span>.view addSubview:<span class=\"keyword\">self</span>.button1];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@end</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">@interface</span> <span class=\"title\">ViewController</span> ()</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@property</span> (<span class=\"keyword\">nonatomic</span>,<span class=\"keyword\">weak</span>) <span class=\"built_in\">UIButton</span> *button2;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@end</span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">@implementation</span> <span class=\"title\">ViewController</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">-(<span class=\"built_in\">UIButton</span> *)button2&#123; </span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"built_in\">UIButton</span> *btn=[<span class=\"built_in\">UIButton</span> buttonWithType:<span class=\"built_in\">UIButtonTypeCustom</span>];</span><br><span class=\"line\">    btn.frame=<span class=\"built_in\">CGRectMake</span>(<span class=\"number\">100</span>, <span class=\"number\">100</span>, <span class=\"number\">100</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\">    [btn setTitle:<span class=\"string\">@&quot;第二个&quot;</span> forState:<span class=\"built_in\">UIControlStateNormal</span>];</span><br><span class=\"line\">    btn.backgroundColor=[<span class=\"built_in\">UIColor</span> yellowColor];</span><br><span class=\"line\">    <span class=\"keyword\">return</span> btn;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"type\">void</span>)viewDidLoad &#123;</span><br><span class=\"line\">    [<span class=\"variable language_\">super</span> viewDidLoad];</span><br><span class=\"line\">    [<span class=\"keyword\">self</span>.view addSubview:<span class=\"keyword\">self</span>.button2];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@end</span></span><br></pre></td></tr></table></figure>\n\n<p>@property：strong：视图被移除时，因为有强引用指向他，所以不再次释放一下，则引用计数就是1</p>\n<p>@property：weak：从父视图移除时，这个 button 就直接释放了，因为是弱引用，所以不对引用计数造成影响（就像 assign）（xib 用 weak）</p>\n<p>weak 的机制：weak 变量能够在引用计数为 0 时被自动设置成 nil，显然是有运行时逻辑在工作的。</p>\n","site":{"data":{"gallery":{"图片名称":{"full_link":"http://miccall.tech/img/twx.jpg","thumb_link":"http://miccall.tech/img/twx.jpg","descr":"图片描述"}},"links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}},"_links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}}}},"excerpt":"<p>强引用和弱引用常考知识点和易错盲点。</p>","more":"<p>@property中 weak 和 strong 的使用先看两段代码：</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">@interface</span> <span class=\"title\">ViewController</span> ()</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@property</span> (<span class=\"keyword\">nonatomic</span>,<span class=\"keyword\">strong</span>)<span class=\"built_in\">UIButton</span> *button1;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">@implementation</span> <span class=\"title\">ViewController</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">-(<span class=\"built_in\">UIButton</span> *)button1&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!_button1) &#123;</span><br><span class=\"line\">_button1=[<span class=\"built_in\">UIButton</span> buttonWithType:<span class=\"built_in\">UIButtonTypeCustom</span>];</span><br><span class=\"line\">        _button1.frame=<span class=\"built_in\">CGRectMake</span>(<span class=\"number\">50</span>, <span class=\"number\">50</span>, <span class=\"number\">100</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\">        [_button1 setTitle:<span class=\"string\">@&quot;第一个&quot;</span> forState:<span class=\"built_in\">UIControlStateNormal</span>];</span><br><span class=\"line\">_button1.backgroundColor=[<span class=\"built_in\">UIColor</span> redColor];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"keyword\">return</span> _button1;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"type\">void</span>)viewDidLoad &#123;</span><br><span class=\"line\">    [<span class=\"variable language_\">super</span> viewDidLoad];</span><br><span class=\"line\">    [<span class=\"keyword\">self</span>.view addSubview:<span class=\"keyword\">self</span>.button1];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@end</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">@interface</span> <span class=\"title\">ViewController</span> ()</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@property</span> (<span class=\"keyword\">nonatomic</span>,<span class=\"keyword\">weak</span>) <span class=\"built_in\">UIButton</span> *button2;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@end</span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">@implementation</span> <span class=\"title\">ViewController</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">-(<span class=\"built_in\">UIButton</span> *)button2&#123; </span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"built_in\">UIButton</span> *btn=[<span class=\"built_in\">UIButton</span> buttonWithType:<span class=\"built_in\">UIButtonTypeCustom</span>];</span><br><span class=\"line\">    btn.frame=<span class=\"built_in\">CGRectMake</span>(<span class=\"number\">100</span>, <span class=\"number\">100</span>, <span class=\"number\">100</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\">    [btn setTitle:<span class=\"string\">@&quot;第二个&quot;</span> forState:<span class=\"built_in\">UIControlStateNormal</span>];</span><br><span class=\"line\">    btn.backgroundColor=[<span class=\"built_in\">UIColor</span> yellowColor];</span><br><span class=\"line\">    <span class=\"keyword\">return</span> btn;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"type\">void</span>)viewDidLoad &#123;</span><br><span class=\"line\">    [<span class=\"variable language_\">super</span> viewDidLoad];</span><br><span class=\"line\">    [<span class=\"keyword\">self</span>.view addSubview:<span class=\"keyword\">self</span>.button2];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@end</span></span><br></pre></td></tr></table></figure>\n\n<p>@property：strong：视图被移除时，因为有强引用指向他，所以不再次释放一下，则引用计数就是1</p>\n<p>@property：weak：从父视图移除时，这个 button 就直接释放了，因为是弱引用，所以不对引用计数造成影响（就像 assign）（xib 用 weak）</p>\n<p>weak 的机制：weak 变量能够在引用计数为 0 时被自动设置成 nil，显然是有运行时逻辑在工作的。</p>"},{"title":"@interface编写规范","date":"2014-01-10T12:58:02.000Z","thumbnail":"https://timgsa.baidu.com/timg?image&quality=80&size=b10000_10000&sec=1515665308&di=c47dba565aa9965eb524c6b306ffce50&src=http://img.zcool.cn/community/0144c457b4f79d0000018c1b26b075.jpg","_content":"\n1、合理使用读写权限以及作用域修饰符。\n\n2、合理使用向前声明@class\n\n3、暴露必要的接口\n\n4、定义枚举:NS_ENUM、NS_OPTIONS、字符串枚举\n\n\n\n\n\n","source":"_drafts/iOS开发笔记.md","raw":"---\ntitle: '@interface编写规范'\ndate: 2014-01-10 20:58:02\ncategories: iOS开发\ntags:\nthumbnail: \"https://timgsa.baidu.com/timg?image&quality=80&size=b10000_10000&sec=1515665308&di=c47dba565aa9965eb524c6b306ffce50&src=http://img.zcool.cn/community/0144c457b4f79d0000018c1b26b075.jpg\"\n---\n\n1、合理使用读写权限以及作用域修饰符。\n\n2、合理使用向前声明@class\n\n3、暴露必要的接口\n\n4、定义枚举:NS_ENUM、NS_OPTIONS、字符串枚举\n\n\n\n\n\n","slug":"iOS开发笔记","published":0,"updated":"2024-01-02T16:09:25.073Z","_id":"clqwm2cdk0011uc7t0d503k83","comments":1,"layout":"post","photos":[],"link":"","content":"<p>1、合理使用读写权限以及作用域修饰符。</p>\n<p>2、合理使用向前声明@class</p>\n<p>3、暴露必要的接口</p>\n<p>4、定义枚举:NS_ENUM、NS_OPTIONS、字符串枚举</p>\n","site":{"data":{"gallery":{"图片名称":{"full_link":"http://miccall.tech/img/twx.jpg","thumb_link":"http://miccall.tech/img/twx.jpg","descr":"图片描述"}},"links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}},"_links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}}}},"excerpt":"","more":"<p>1、合理使用读写权限以及作用域修饰符。</p>\n<p>2、合理使用向前声明@class</p>\n<p>3、暴露必要的接口</p>\n<p>4、定义枚举:NS_ENUM、NS_OPTIONS、字符串枚举</p>\n"},{"title":"centOS修改ssh端口","_content":"centOS7 默认 ssh 端口是22，这个很不安全，所以我们修改下默认端口。这个东西虽然是老生常谈了，而且网上的教程也很多，不过自己还是整理一下，巩固一下这个知识。\n\n## 修改 sshd_config 文件\n```shell\nvim /etc/ssh/sshd_config\n\n# 正常模式下输入/port 查找 port 端口\n# 在行\n```\n\n\n","source":"_drafts/centOS修改ssh端口.md","raw":"---\ntitle: centOS修改ssh端口\ntags:\n---\ncentOS7 默认 ssh 端口是22，这个很不安全，所以我们修改下默认端口。这个东西虽然是老生常谈了，而且网上的教程也很多，不过自己还是整理一下，巩固一下这个知识。\n\n## 修改 sshd_config 文件\n```shell\nvim /etc/ssh/sshd_config\n\n# 正常模式下输入/port 查找 port 端口\n# 在行\n```\n\n\n","slug":"centOS修改ssh端口","published":0,"date":"2024-01-02T16:09:25.072Z","updated":"2024-01-02T16:09:25.073Z","_id":"clqwm2cgh0015uc7t05wqcics","comments":1,"layout":"post","photos":[],"link":"","content":"<p>centOS7 默认 ssh 端口是22，这个很不安全，所以我们修改下默认端口。这个东西虽然是老生常谈了，而且网上的教程也很多，不过自己还是整理一下，巩固一下这个知识。</p>\n<h2 id=\"修改-sshd-config-文件\"><a href=\"#修改-sshd-config-文件\" class=\"headerlink\" title=\"修改 sshd_config 文件\"></a>修改 sshd_config 文件</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/ssh/sshd_config</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">正常模式下输入/port 查找 port 端口</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">在行</span></span><br></pre></td></tr></table></figure>\n\n\n","site":{"data":{"gallery":{"图片名称":{"full_link":"http://miccall.tech/img/twx.jpg","thumb_link":"http://miccall.tech/img/twx.jpg","descr":"图片描述"}},"links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}},"_links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}}}},"excerpt":"","more":"<p>centOS7 默认 ssh 端口是22，这个很不安全，所以我们修改下默认端口。这个东西虽然是老生常谈了，而且网上的教程也很多，不过自己还是整理一下，巩固一下这个知识。</p>\n<h2 id=\"修改-sshd-config-文件\"><a href=\"#修改-sshd-config-文件\" class=\"headerlink\" title=\"修改 sshd_config 文件\"></a>修改 sshd_config 文件</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/ssh/sshd_config</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">正常模式下输入/port 查找 port 端口</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">在行</span></span><br></pre></td></tr></table></figure>\n\n\n"},{"title":"gem、rvm使用心得","date":"2013-04-25T09:06:37.000Z","thumbnail":"https://timgsa.baidu.com/timg?image&quality=80&size=b10000_10000&sec=1515664615&di=81c30abd5565396089d0aae99a62f8d2&src=http://a3.topitme.com/0/13/0b/11293612116520b130o.jpg","_content":"\n# gem,rvm使用心得\n\n##### rvm 和 gem 的关系\n\n- rvm 全称是 Ruby Version Manager，即Ruby 版本管理器。\n- gem，即RubyGems，是一个用于对 Ruby 组件进行打包 Ruby 的打包系统，可以从远程服务器下载并安装 Rails。\n\n> [Ruby](https://baike.baidu.com/item/Ruby) on Rails 是一个用于开发数据库驱动的网络应用程序的完整框架。Rails基于[MVC](https://baike.baidu.com/item/MVC)（模型- 视图- 控制器）设计模式。从视图中的[Ajax](https://baike.baidu.com/item/Ajax)应用，到控制器中的访问请求和反馈，到封装数据库的模型，Rails 为你提供一个纯Ruby的开发环境。发布网站时，你只需要一个数据库和一个网络服务器即可。\n>\n> Ruby On Rails是一个用于编写网络应用程序的软件包.它基于一种计算机软件语言Ruby,给程序开发人员提供了强大的框架支持.你可以用比以前少的多的代码和 短的多的时间编写出一流的网络软件。\n\n\n\n**查看gem 源**：\n\n```sh\n$ gem source\n```\n\n|      |                     |      |\n| ---- | ------------------- | ---- |\n| -a   | --add SOURCE_URI    | 添加源  |\n| -l   | --list              | 列表   |\n| -r   | --remove SOURCE_URI | 删除   |\n| -c   | --clear-all         | 清除所有 |\n| -u   | --update            | 更新   |\n\n```sh\n$ gem sources -r http://rubygems.org/ #删除默认的源\n\n$ gem sources -a https://ruby.taobao.org #添加淘宝源\n```\n\n\n\n- Mac OSX 必须要安装的库\n\n  ```sh\n  $ brew install libxml2 libxslt libiconv\n  ```\n\n- 载入 RVM 环境\n\n  ```sh\n  $ source ~/.rvm/scripts/rvm\n  ```\n\n- 用 RVM 安装 ruby 环境\n\n  ```sh\n  $ rvm requirements\n  $ rvm install 2.3.0\n  ```\n\n- 安装 Bundler\n\n  ```sh\n  $ gem install bundler\n  ```\n\n- 安装 Rails 环境\n\n  ```sh\n  $ gem install rails\n  ```\n\n- homebrew 安装 ruby\n\n  ```sh\n  $ brew install ruby\n  ```\n\n- RVM 安装\n\n  ```sh\n  $ gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3\n  $ \\curl -sSL https://get.rvm.io | bash -s stable\n  $ source ~/.bashrc\n  $ source ~/.bash_profile\n  ```\n\n- 列出以及 ruby 版本\n\n  ```sh\n  $ rvm list known\n  ```\n\n- 切换 ruby 版本\n\n  ```sh\n  $ rvm use 2.2.0\n  ```\n\n  ​\n\n- 修改 RVM 下载 Ruby 的源，到 Ruby China 的镜像:\n\n  ```sh\n  $ echo \"ruby_url=https://cache.ruby-china.org/pub/ruby\" > ~/.rvm/user/db\n  ```\n\n  ​\n\n  [1]: https://ruby-china.org/wiki/rvm-guide\t\"ruby wiki\"\n  [2]: https://www.ruby-toolbox.com/\t\"热门的 Gem\"\n\n  ​\n\n","source":"_drafts/gem、rvm使用心得.md","raw":"---\ntitle: gem、rvm使用心得\ndate: 2013-04-25 17:06:37\ncategories: Linux\ntags:\n- gem\n- rvm\nthumbnail: \"https://timgsa.baidu.com/timg?image&quality=80&size=b10000_10000&sec=1515664615&di=81c30abd5565396089d0aae99a62f8d2&src=http://a3.topitme.com/0/13/0b/11293612116520b130o.jpg\"\n---\n\n# gem,rvm使用心得\n\n##### rvm 和 gem 的关系\n\n- rvm 全称是 Ruby Version Manager，即Ruby 版本管理器。\n- gem，即RubyGems，是一个用于对 Ruby 组件进行打包 Ruby 的打包系统，可以从远程服务器下载并安装 Rails。\n\n> [Ruby](https://baike.baidu.com/item/Ruby) on Rails 是一个用于开发数据库驱动的网络应用程序的完整框架。Rails基于[MVC](https://baike.baidu.com/item/MVC)（模型- 视图- 控制器）设计模式。从视图中的[Ajax](https://baike.baidu.com/item/Ajax)应用，到控制器中的访问请求和反馈，到封装数据库的模型，Rails 为你提供一个纯Ruby的开发环境。发布网站时，你只需要一个数据库和一个网络服务器即可。\n>\n> Ruby On Rails是一个用于编写网络应用程序的软件包.它基于一种计算机软件语言Ruby,给程序开发人员提供了强大的框架支持.你可以用比以前少的多的代码和 短的多的时间编写出一流的网络软件。\n\n\n\n**查看gem 源**：\n\n```sh\n$ gem source\n```\n\n|      |                     |      |\n| ---- | ------------------- | ---- |\n| -a   | --add SOURCE_URI    | 添加源  |\n| -l   | --list              | 列表   |\n| -r   | --remove SOURCE_URI | 删除   |\n| -c   | --clear-all         | 清除所有 |\n| -u   | --update            | 更新   |\n\n```sh\n$ gem sources -r http://rubygems.org/ #删除默认的源\n\n$ gem sources -a https://ruby.taobao.org #添加淘宝源\n```\n\n\n\n- Mac OSX 必须要安装的库\n\n  ```sh\n  $ brew install libxml2 libxslt libiconv\n  ```\n\n- 载入 RVM 环境\n\n  ```sh\n  $ source ~/.rvm/scripts/rvm\n  ```\n\n- 用 RVM 安装 ruby 环境\n\n  ```sh\n  $ rvm requirements\n  $ rvm install 2.3.0\n  ```\n\n- 安装 Bundler\n\n  ```sh\n  $ gem install bundler\n  ```\n\n- 安装 Rails 环境\n\n  ```sh\n  $ gem install rails\n  ```\n\n- homebrew 安装 ruby\n\n  ```sh\n  $ brew install ruby\n  ```\n\n- RVM 安装\n\n  ```sh\n  $ gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3\n  $ \\curl -sSL https://get.rvm.io | bash -s stable\n  $ source ~/.bashrc\n  $ source ~/.bash_profile\n  ```\n\n- 列出以及 ruby 版本\n\n  ```sh\n  $ rvm list known\n  ```\n\n- 切换 ruby 版本\n\n  ```sh\n  $ rvm use 2.2.0\n  ```\n\n  ​\n\n- 修改 RVM 下载 Ruby 的源，到 Ruby China 的镜像:\n\n  ```sh\n  $ echo \"ruby_url=https://cache.ruby-china.org/pub/ruby\" > ~/.rvm/user/db\n  ```\n\n  ​\n\n  [1]: https://ruby-china.org/wiki/rvm-guide\t\"ruby wiki\"\n  [2]: https://www.ruby-toolbox.com/\t\"热门的 Gem\"\n\n  ​\n\n","slug":"gem、rvm使用心得","published":0,"updated":"2024-01-02T16:09:25.073Z","_id":"clqwm2cgi0016uc7tgqrv2ba2","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"gem-rvm使用心得\"><a href=\"#gem-rvm使用心得\" class=\"headerlink\" title=\"gem,rvm使用心得\"></a>gem,rvm使用心得</h1><h5 id=\"rvm-和-gem-的关系\"><a href=\"#rvm-和-gem-的关系\" class=\"headerlink\" title=\"rvm 和 gem 的关系\"></a>rvm 和 gem 的关系</h5><ul>\n<li>rvm 全称是 Ruby Version Manager，即Ruby 版本管理器。</li>\n<li>gem，即RubyGems，是一个用于对 Ruby 组件进行打包 Ruby 的打包系统，可以从远程服务器下载并安装 Rails。</li>\n</ul>\n<blockquote>\n<p><a href=\"https://baike.baidu.com/item/Ruby\">Ruby</a> on Rails 是一个用于开发数据库驱动的网络应用程序的完整框架。Rails基于<a href=\"https://baike.baidu.com/item/MVC\">MVC</a>（模型- 视图- 控制器）设计模式。从视图中的<a href=\"https://baike.baidu.com/item/Ajax\">Ajax</a>应用，到控制器中的访问请求和反馈，到封装数据库的模型，Rails 为你提供一个纯Ruby的开发环境。发布网站时，你只需要一个数据库和一个网络服务器即可。</p>\n<p>Ruby On Rails是一个用于编写网络应用程序的软件包.它基于一种计算机软件语言Ruby,给程序开发人员提供了强大的框架支持.你可以用比以前少的多的代码和 短的多的时间编写出一流的网络软件。</p>\n</blockquote>\n<p><strong>查看gem 源</strong>：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ gem <span class=\"built_in\">source</span></span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>-a</td>\n<td>–add SOURCE_URI</td>\n<td>添加源</td>\n</tr>\n<tr>\n<td>-l</td>\n<td>–list</td>\n<td>列表</td>\n</tr>\n<tr>\n<td>-r</td>\n<td>–remove SOURCE_URI</td>\n<td>删除</td>\n</tr>\n<tr>\n<td>-c</td>\n<td>–clear-all</td>\n<td>清除所有</td>\n</tr>\n<tr>\n<td>-u</td>\n<td>–update</td>\n<td>更新</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ gem sources -r http://rubygems.org/ <span class=\"comment\">#删除默认的源</span></span><br><span class=\"line\"></span><br><span class=\"line\">$ gem sources -a https://ruby.taobao.org <span class=\"comment\">#添加淘宝源</span></span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li><p>Mac OSX 必须要安装的库</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brew install libxml2 libxslt libiconv</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>载入 RVM 环境</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">source</span> ~/.rvm/scripts/rvm</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>用 RVM 安装 ruby 环境</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ rvm requirements</span><br><span class=\"line\">$ rvm install 2.3.0</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装 Bundler</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ gem install bundler</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装 Rails 环境</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ gem install rails</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>homebrew 安装 ruby</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brew install ruby</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>RVM 安装</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3</span><br><span class=\"line\">$ \\curl -sSL https://get.rvm.io | bash -s stable</span><br><span class=\"line\">$ <span class=\"built_in\">source</span> ~/.bashrc</span><br><span class=\"line\">$ <span class=\"built_in\">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>列出以及 ruby 版本</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ rvm list known</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>切换 ruby 版本</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ rvm use 2.2.0</span><br></pre></td></tr></table></figure>\n\n<p>​</p>\n</li>\n<li><p>修改 RVM 下载 Ruby 的源，到 Ruby China 的镜像:</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">echo</span> <span class=\"string\">&quot;ruby_url=https://cache.ruby-china.org/pub/ruby&quot;</span> &gt; ~/.rvm/user/db</span><br></pre></td></tr></table></figure>\n\n<p>​</p>\n<p>[1]: <a href=\"https://ruby-china.org/wiki/rvm-guide\">https://ruby-china.org/wiki/rvm-guide</a>\t“ruby wiki”<br>[2]: <a href=\"https://www.ruby-toolbox.com/\">https://www.ruby-toolbox.com/</a>\t“热门的 Gem”</p>\n<p>​</p>\n</li>\n</ul>\n","site":{"data":{"gallery":{"图片名称":{"full_link":"http://miccall.tech/img/twx.jpg","thumb_link":"http://miccall.tech/img/twx.jpg","descr":"图片描述"}},"links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}},"_links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}}}},"excerpt":"","more":"<h1 id=\"gem-rvm使用心得\"><a href=\"#gem-rvm使用心得\" class=\"headerlink\" title=\"gem,rvm使用心得\"></a>gem,rvm使用心得</h1><h5 id=\"rvm-和-gem-的关系\"><a href=\"#rvm-和-gem-的关系\" class=\"headerlink\" title=\"rvm 和 gem 的关系\"></a>rvm 和 gem 的关系</h5><ul>\n<li>rvm 全称是 Ruby Version Manager，即Ruby 版本管理器。</li>\n<li>gem，即RubyGems，是一个用于对 Ruby 组件进行打包 Ruby 的打包系统，可以从远程服务器下载并安装 Rails。</li>\n</ul>\n<blockquote>\n<p><a href=\"https://baike.baidu.com/item/Ruby\">Ruby</a> on Rails 是一个用于开发数据库驱动的网络应用程序的完整框架。Rails基于<a href=\"https://baike.baidu.com/item/MVC\">MVC</a>（模型- 视图- 控制器）设计模式。从视图中的<a href=\"https://baike.baidu.com/item/Ajax\">Ajax</a>应用，到控制器中的访问请求和反馈，到封装数据库的模型，Rails 为你提供一个纯Ruby的开发环境。发布网站时，你只需要一个数据库和一个网络服务器即可。</p>\n<p>Ruby On Rails是一个用于编写网络应用程序的软件包.它基于一种计算机软件语言Ruby,给程序开发人员提供了强大的框架支持.你可以用比以前少的多的代码和 短的多的时间编写出一流的网络软件。</p>\n</blockquote>\n<p><strong>查看gem 源</strong>：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ gem <span class=\"built_in\">source</span></span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>-a</td>\n<td>–add SOURCE_URI</td>\n<td>添加源</td>\n</tr>\n<tr>\n<td>-l</td>\n<td>–list</td>\n<td>列表</td>\n</tr>\n<tr>\n<td>-r</td>\n<td>–remove SOURCE_URI</td>\n<td>删除</td>\n</tr>\n<tr>\n<td>-c</td>\n<td>–clear-all</td>\n<td>清除所有</td>\n</tr>\n<tr>\n<td>-u</td>\n<td>–update</td>\n<td>更新</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ gem sources -r http://rubygems.org/ <span class=\"comment\">#删除默认的源</span></span><br><span class=\"line\"></span><br><span class=\"line\">$ gem sources -a https://ruby.taobao.org <span class=\"comment\">#添加淘宝源</span></span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li><p>Mac OSX 必须要安装的库</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brew install libxml2 libxslt libiconv</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>载入 RVM 环境</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">source</span> ~/.rvm/scripts/rvm</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>用 RVM 安装 ruby 环境</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ rvm requirements</span><br><span class=\"line\">$ rvm install 2.3.0</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装 Bundler</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ gem install bundler</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装 Rails 环境</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ gem install rails</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>homebrew 安装 ruby</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brew install ruby</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>RVM 安装</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3</span><br><span class=\"line\">$ \\curl -sSL https://get.rvm.io | bash -s stable</span><br><span class=\"line\">$ <span class=\"built_in\">source</span> ~/.bashrc</span><br><span class=\"line\">$ <span class=\"built_in\">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>列出以及 ruby 版本</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ rvm list known</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>切换 ruby 版本</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ rvm use 2.2.0</span><br></pre></td></tr></table></figure>\n\n<p>​</p>\n</li>\n<li><p>修改 RVM 下载 Ruby 的源，到 Ruby China 的镜像:</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">echo</span> <span class=\"string\">&quot;ruby_url=https://cache.ruby-china.org/pub/ruby&quot;</span> &gt; ~/.rvm/user/db</span><br></pre></td></tr></table></figure>\n\n<p>​</p>\n<p>[1]: <a href=\"https://ruby-china.org/wiki/rvm-guide\">https://ruby-china.org/wiki/rvm-guide</a>\t“ruby wiki”<br>[2]: <a href=\"https://www.ruby-toolbox.com/\">https://www.ruby-toolbox.com/</a>\t“热门的 Gem”</p>\n<p>​</p>\n</li>\n</ul>\n"},{"title":"UITableView详解","date":"2014-05-14T00:32:25.000Z","thumbnail":"https://i0.hdslb.com/bfs/album/0b9d38083c671b028746a529bb1a59ecf2f27172.jpg","_content":"\n\n\n* UITableView**DataSource**\n  * 必要的\n    * 设置 tableview cell\n    * 设置行数\n  * 可选的\n    * ​\n* UITableView**Delegate**\n  * 可选的\n    * 设置行高\n\n\n\n\n\n* UITableView**DataSource**\n\n  * required\n    * UITableViewCell \n    * numberOfRowsInSection\n  * optional\n    * numberOfSectionsInTableView \n    * titleForHeaderViewOrFooterView\n    * index\n      * sectionForSectionIndexTitle\n      * sectionIndexTitlesForTableView\n\n* UITableView**Delegate**\n\n  * optional\n    * Display customization\n    * Variable (estimated) height support\n    * Section header & footer information.返回一个 view\n    * Accessories\n    * should or did (Un)HighlightRowAtIndexPath\n    * Called before the user changes the selection.\n    * Editing\n\n  ​","source":"_drafts/UITableView详解.md","raw":"---\ntitle: UITableView详解\ndate: 2014-05-14 08:32:25\ntags: UITableView\ncategories: iOS开发\nthumbnail: \"https://i0.hdslb.com/bfs/album/0b9d38083c671b028746a529bb1a59ecf2f27172.jpg\"\n---\n\n\n\n* UITableView**DataSource**\n  * 必要的\n    * 设置 tableview cell\n    * 设置行数\n  * 可选的\n    * ​\n* UITableView**Delegate**\n  * 可选的\n    * 设置行高\n\n\n\n\n\n* UITableView**DataSource**\n\n  * required\n    * UITableViewCell \n    * numberOfRowsInSection\n  * optional\n    * numberOfSectionsInTableView \n    * titleForHeaderViewOrFooterView\n    * index\n      * sectionForSectionIndexTitle\n      * sectionIndexTitlesForTableView\n\n* UITableView**Delegate**\n\n  * optional\n    * Display customization\n    * Variable (estimated) height support\n    * Section header & footer information.返回一个 view\n    * Accessories\n    * should or did (Un)HighlightRowAtIndexPath\n    * Called before the user changes the selection.\n    * Editing\n\n  ​","slug":"UITableView详解","published":0,"updated":"2024-01-02T16:09:25.072Z","_id":"clqwm2cgi0017uc7t32xd7iuf","comments":1,"layout":"post","photos":[],"link":"","content":"<ul>\n<li><p>UITableView<strong>DataSource</strong></p>\n<ul>\n<li>必要的<ul>\n<li>设置 tableview cell</li>\n<li>设置行数</li>\n</ul>\n</li>\n<li>可选的<ul>\n<li>​</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>UITableView<strong>Delegate</strong></p>\n<ul>\n<li>可选的<ul>\n<li>设置行高</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>UITableView<strong>DataSource</strong></p>\n<ul>\n<li>required<ul>\n<li>UITableViewCell </li>\n<li>numberOfRowsInSection</li>\n</ul>\n</li>\n<li>optional<ul>\n<li>numberOfSectionsInTableView </li>\n<li>titleForHeaderViewOrFooterView</li>\n<li>index<ul>\n<li>sectionForSectionIndexTitle</li>\n<li>sectionIndexTitlesForTableView</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>UITableView<strong>Delegate</strong></p>\n<ul>\n<li>optional<ul>\n<li>Display customization</li>\n<li>Variable (estimated) height support</li>\n<li>Section header &amp; footer information.返回一个 view</li>\n<li>Accessories</li>\n<li>should or did (Un)HighlightRowAtIndexPath</li>\n<li>Called before the user changes the selection.</li>\n<li>Editing</li>\n</ul>\n</li>\n</ul>\n<p>​</p>\n</li>\n</ul>\n","site":{"data":{"gallery":{"图片名称":{"full_link":"http://miccall.tech/img/twx.jpg","thumb_link":"http://miccall.tech/img/twx.jpg","descr":"图片描述"}},"links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}},"_links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}}}},"excerpt":"","more":"<ul>\n<li><p>UITableView<strong>DataSource</strong></p>\n<ul>\n<li>必要的<ul>\n<li>设置 tableview cell</li>\n<li>设置行数</li>\n</ul>\n</li>\n<li>可选的<ul>\n<li>​</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>UITableView<strong>Delegate</strong></p>\n<ul>\n<li>可选的<ul>\n<li>设置行高</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>UITableView<strong>DataSource</strong></p>\n<ul>\n<li>required<ul>\n<li>UITableViewCell </li>\n<li>numberOfRowsInSection</li>\n</ul>\n</li>\n<li>optional<ul>\n<li>numberOfSectionsInTableView </li>\n<li>titleForHeaderViewOrFooterView</li>\n<li>index<ul>\n<li>sectionForSectionIndexTitle</li>\n<li>sectionIndexTitlesForTableView</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>UITableView<strong>Delegate</strong></p>\n<ul>\n<li>optional<ul>\n<li>Display customization</li>\n<li>Variable (estimated) height support</li>\n<li>Section header &amp; footer information.返回一个 view</li>\n<li>Accessories</li>\n<li>should or did (Un)HighlightRowAtIndexPath</li>\n<li>Called before the user changes the selection.</li>\n<li>Editing</li>\n</ul>\n</li>\n</ul>\n<p>​</p>\n</li>\n</ul>\n"},{"title":"一些计算机硬件知识","_content":"    \n最近家里准备换电脑，在选购一些计算机硬件的时候\n\n\n<!-- more -->\n\n## CPU\n### CPU 与内存\nCPU 与内存之间有三根总线：地址总线、数据总线、控制总线。\n等等，这三根总线是不是听起来很熟悉？没错，就是大学操作系统书中的内容。\n\n\n","source":"_drafts/一些计算机硬件知识.md","raw":"---\ntitle: 一些计算机硬件知识\ntags:\n---\n    \n最近家里准备换电脑，在选购一些计算机硬件的时候\n\n\n<!-- more -->\n\n## CPU\n### CPU 与内存\nCPU 与内存之间有三根总线：地址总线、数据总线、控制总线。\n等等，这三根总线是不是听起来很熟悉？没错，就是大学操作系统书中的内容。\n\n\n","slug":"一些计算机硬件知识","published":0,"date":"2024-01-02T16:09:25.074Z","updated":"2024-01-02T16:09:25.074Z","_id":"clqwm2cgk0019uc7t5ufg8a37","comments":1,"layout":"post","photos":[],"link":"","content":"<p>最近家里准备换电脑，在选购一些计算机硬件的时候</p>\n<span id=\"more\"></span>\n\n<h2 id=\"CPU\"><a href=\"#CPU\" class=\"headerlink\" title=\"CPU\"></a>CPU</h2><h3 id=\"CPU-与内存\"><a href=\"#CPU-与内存\" class=\"headerlink\" title=\"CPU 与内存\"></a>CPU 与内存</h3><p>CPU 与内存之间有三根总线：地址总线、数据总线、控制总线。<br>等等，这三根总线是不是听起来很熟悉？没错，就是大学操作系统书中的内容。</p>\n","site":{"data":{"gallery":{"图片名称":{"full_link":"http://miccall.tech/img/twx.jpg","thumb_link":"http://miccall.tech/img/twx.jpg","descr":"图片描述"}},"links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}},"_links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}}}},"excerpt":"<p>最近家里准备换电脑，在选购一些计算机硬件的时候</p>","more":"<h2 id=\"CPU\"><a href=\"#CPU\" class=\"headerlink\" title=\"CPU\"></a>CPU</h2><h3 id=\"CPU-与内存\"><a href=\"#CPU-与内存\" class=\"headerlink\" title=\"CPU 与内存\"></a>CPU 与内存</h3><p>CPU 与内存之间有三根总线：地址总线、数据总线、控制总线。<br>等等，这三根总线是不是听起来很熟悉？没错，就是大学操作系统书中的内容。</p>"},{"title":"vps 部署 blog 的一些坑","_content":"\n## git 版本过低导致http 请求失败\n这个情况还是比较常见的，原因就是 你的git 版本太低了。\n\n```shell\ngit --version # git version 1.7.1\n```\n首先安装各种依赖，卸载 centOS 6.5 自带的 git 1.7.1 并更新至 2.1.2\n\n```shell\n# 安装各种依赖包，以及 toolchain\nyum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel\nyum install  gcc perl-ExtUtils-MakeMaker\n# 卸载 git\nyum remove git\n# 下载 git 2.1.2\ncd /usr/src\nwget https://www.kernel.org/pub/software/scm/git/git-2.1.2.tar.gz --no-check-certificate\ntar xzf git-2.1.2.tar.gz && cd git-2.1.2\nmake prefix=/usr/local/git all && make prefix=/usr/local/git install\necho \"export PATH=$PATH:/usr/local/git/bin\" >> /etc/bashrc\nsource /etc/bashrc\n# 这时候你的 git 版本就应该是2.1.2了\ngit --version\n```\n\n\n\n","source":"_drafts/vps-部署-blog-的一些坑.md","raw":"---\ntitle: vps 部署 blog 的一些坑\ntags:\n---\n\n## git 版本过低导致http 请求失败\n这个情况还是比较常见的，原因就是 你的git 版本太低了。\n\n```shell\ngit --version # git version 1.7.1\n```\n首先安装各种依赖，卸载 centOS 6.5 自带的 git 1.7.1 并更新至 2.1.2\n\n```shell\n# 安装各种依赖包，以及 toolchain\nyum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel\nyum install  gcc perl-ExtUtils-MakeMaker\n# 卸载 git\nyum remove git\n# 下载 git 2.1.2\ncd /usr/src\nwget https://www.kernel.org/pub/software/scm/git/git-2.1.2.tar.gz --no-check-certificate\ntar xzf git-2.1.2.tar.gz && cd git-2.1.2\nmake prefix=/usr/local/git all && make prefix=/usr/local/git install\necho \"export PATH=$PATH:/usr/local/git/bin\" >> /etc/bashrc\nsource /etc/bashrc\n# 这时候你的 git 版本就应该是2.1.2了\ngit --version\n```\n\n\n\n","slug":"vps-部署-blog-的一些坑","published":0,"date":"2024-01-02T16:09:25.073Z","updated":"2024-01-02T16:09:25.074Z","_id":"clqwm2cgm001auc7thxqbaxiz","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"git-版本过低导致http-请求失败\"><a href=\"#git-版本过低导致http-请求失败\" class=\"headerlink\" title=\"git 版本过低导致http 请求失败\"></a>git 版本过低导致http 请求失败</h2><p>这个情况还是比较常见的，原因就是 你的git 版本太低了。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git --version # git version 1.7.1</span><br></pre></td></tr></table></figure>\n<p>首先安装各种依赖，卸载 centOS 6.5 自带的 git 1.7.1 并更新至 2.1.2</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装各种依赖包，以及 toolchain</span></span><br><span class=\"line\">yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel</span><br><span class=\"line\">yum install  gcc perl-ExtUtils-MakeMaker</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">卸载 git</span></span><br><span class=\"line\">yum remove git</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">下载 git 2.1.2</span></span><br><span class=\"line\">cd /usr/src</span><br><span class=\"line\">wget https://www.kernel.org/pub/software/scm/git/git-2.1.2.tar.gz --no-check-certificate</span><br><span class=\"line\">tar xzf git-2.1.2.tar.gz &amp;&amp; cd git-2.1.2</span><br><span class=\"line\">make prefix=/usr/local/git all &amp;&amp; make prefix=/usr/local/git install</span><br><span class=\"line\">echo &quot;export PATH=$PATH:/usr/local/git/bin&quot; &gt;&gt; /etc/bashrc</span><br><span class=\"line\">source /etc/bashrc</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">这时候你的 git 版本就应该是2.1.2了</span></span><br><span class=\"line\">git --version</span><br></pre></td></tr></table></figure>\n\n\n\n","site":{"data":{"gallery":{"图片名称":{"full_link":"http://miccall.tech/img/twx.jpg","thumb_link":"http://miccall.tech/img/twx.jpg","descr":"图片描述"}},"links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}},"_links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}}}},"excerpt":"","more":"<h2 id=\"git-版本过低导致http-请求失败\"><a href=\"#git-版本过低导致http-请求失败\" class=\"headerlink\" title=\"git 版本过低导致http 请求失败\"></a>git 版本过低导致http 请求失败</h2><p>这个情况还是比较常见的，原因就是 你的git 版本太低了。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git --version # git version 1.7.1</span><br></pre></td></tr></table></figure>\n<p>首先安装各种依赖，卸载 centOS 6.5 自带的 git 1.7.1 并更新至 2.1.2</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装各种依赖包，以及 toolchain</span></span><br><span class=\"line\">yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel</span><br><span class=\"line\">yum install  gcc perl-ExtUtils-MakeMaker</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">卸载 git</span></span><br><span class=\"line\">yum remove git</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">下载 git 2.1.2</span></span><br><span class=\"line\">cd /usr/src</span><br><span class=\"line\">wget https://www.kernel.org/pub/software/scm/git/git-2.1.2.tar.gz --no-check-certificate</span><br><span class=\"line\">tar xzf git-2.1.2.tar.gz &amp;&amp; cd git-2.1.2</span><br><span class=\"line\">make prefix=/usr/local/git all &amp;&amp; make prefix=/usr/local/git install</span><br><span class=\"line\">echo &quot;export PATH=$PATH:/usr/local/git/bin&quot; &gt;&gt; /etc/bashrc</span><br><span class=\"line\">source /etc/bashrc</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">这时候你的 git 版本就应该是2.1.2了</span></span><br><span class=\"line\">git --version</span><br></pre></td></tr></table></figure>\n\n\n\n"},{"title":"全栈工程师学习路线","_content":"","source":"_drafts/全栈工程师学习路线.md","raw":"---\ntitle: 全栈工程师学习路线\ntags:\n---\n","slug":"全栈工程师学习路线","published":0,"date":"2024-01-02T16:09:25.074Z","updated":"2024-01-02T16:09:25.074Z","_id":"clqwm2cgo001cuc7thi8gcm7l","comments":1,"layout":"post","photos":[],"link":"","content":"","site":{"data":{"gallery":{"图片名称":{"full_link":"http://miccall.tech/img/twx.jpg","thumb_link":"http://miccall.tech/img/twx.jpg","descr":"图片描述"}},"links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}},"_links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}}}},"excerpt":"","more":""},{"title":"git 深入学习","date":"2013-04-24T09:07:16.000Z","thumbnail":"https://timgsa.baidu.com/timg?image&quality=80&size=b10000_10000&sec=1515664615&di=e299224babfec2bfc85a87315fc28e89&src=http://a3.topitme.com/3/af/64/1128834126ba564af3o.jpg","_content":"\n# （一）git深入学习\n\n\n\n### 一、官方说明\n\n##### start a working area (see also: git help tutorial)\n\n- clone      Clone a repository into a new directory\n\n  > 克隆一个 repo 到一个新的目录\n\n- init       Create an empty Git repository or reinitialize（重置） an existing one\n\n  > 创建一个空的 git repo 或者重置一个\n\n  ​\n\n##### work on the current change (see also: git help everyday)\n\n- add        Add file contents to the index\n\n  > add all\n  >\n  > ```\n  > git add .\n  > ```\n\n- mv         Move or rename a file, a directory, or a symlink\n\n- reset      Reset current HEAD to the specified state\n\n  > 重置当前 HEAD 区到指定的状态\n\n- rm         Remove files from the working tree and from the index\n\n##### examine the history and state (see also: git help revisions)\n\n- bisect     Use binary search to find the commit that introduced a bug\n\n  > 使用二分法查找\n\n- grep       Print lines matching a pattern\n\n  > *grep* (global search regular expression(RE) and print out the line,全面搜索正则表达式并把行打印出来)\n\n- log        Show commit logs\n\n- show       Show various types of objects\n\n- status     Show the working tree status\n\n  > 显示当前工作树的状态\n\n  ​\n\n  ##### grow, mark and tweak your common history\n\n- branch     List, create, or delete branches（分支）\n\n- checkout   Switch branches or restore working tree files（检出）\n\n- commit     Record changes to the repository（提交到版本库）\n\n- diff       Show changes between commits, commit and working tree, etc\n\n- merge      Join two or more development histories together（合并）\n\n  > 多人开发\n\n- rebase     Reapply commits on top of another base tip\n\n- tag        Create, list, delete or verify a tag object signed with GPG\n\n##### collaborate (see also: git help workflows)\n\n- fetch      Download objects and refs from another repository\n\n  > 从远程的分支获取最新版本到本地，不会自动 merge\n  >\n  > ```\n  > #从远程的origin 的 master主分支下载最新的版本到 origin/master分支上 \n  > git fetch origin master:tmp \n  >\n  > #比较本地的 master 分支和 origin/master 分支的区别\n  > git diff tmp \n  >\n  > #合并\n  > git merge tmp\n  > ```\n  >\n  >  git fetch 相对比 git pull 安全些\n\n- pull       Fetch from and integrate with another repository or a local branch\n\n  > 从远程的分支获取最新的版本，并 merge 到本地\n  >\n  > ```\n  > git pull origin master\n  > ```\n  >\n  > **fetch + merge = pull**\n\n- push       Update remote refs along with associated objects\n\n### 二、其他用法\n\n- remote \n\n  > ```\n  > git remote    #列出已经存在的分支\n  > ```\n  >\n  > ```\n  > git remote -v #列出详细信息，每个名字后面加上地址\n  > ```\n\n### 三、具体步骤\n\n```\n$cd yourRepoDict\n$git init \n$git add .\n$git commit -m \"xxxxx\"\n$git remote add origin https://github.com/Yggdrasill-7C9/blog.git\n$git push -u origin master\n```\n\n\n\n# （二）git深入学习\n\n## 一、常见概念\n\n1、**Git 的核心是一个对象数据库。**所有提交的文件、目录、以及相关的元数据都被储存在该数据库中。\n\n* Blob 对象：储存文件内容。\n* Tree 对象：储存目录数据。\n\n2、提交图：`git log --graph`\n\n3、Git 主要有两个层面构成：\n\n* 瓷质命令（porcelain command）\n* 管道（plumbing）\n\n4、快速合并：\n\n* 有两个分支 a 和 b。其中 b 并未对内容做任何修改。所以合并 ab的时候，实际就是将指针指向了a\t。\n* 非快进操作：`--no-ff`：强制产生一次新的提交\n\na —— b —— c ——d \\\n\n​             \\ ——————e\n\n\n\n创建并切换新分支`git checkout -b newbranch`\n\n强制切换新分支`git checkout --force newbranch` \n\n删除分支 `git branch -d nowbranch`\n\n强制删除当前分支 `git branch -D nowbranch` \n\n\n\n## 二、储藏\n\n希望在不提交的情况下修改当前版本的其他内容\n\n### 1、git stash\n\ngit shash 可以将工作区和暂存区中修改 保存在***储藏栈（stash stack）**\n\n### 2、git shash pop\n\n回复栈顶的被储存修改到*工作区*中\n\n### 3、git shash list\n\n查看储藏的修改内容\n\n\n\n## 三、\n\npush\n\npull\n\nmerge\n\nfetch\n\n","source":"_drafts/github-使用手册.md","raw":"---\ntitle: git 深入学习\ndate: 2013-04-24 17:07:16\ncategories: git&svn\ntags: github\nthumbnail: \"https://timgsa.baidu.com/timg?image&quality=80&size=b10000_10000&sec=1515664615&di=e299224babfec2bfc85a87315fc28e89&src=http://a3.topitme.com/3/af/64/1128834126ba564af3o.jpg\"\n---\n\n# （一）git深入学习\n\n\n\n### 一、官方说明\n\n##### start a working area (see also: git help tutorial)\n\n- clone      Clone a repository into a new directory\n\n  > 克隆一个 repo 到一个新的目录\n\n- init       Create an empty Git repository or reinitialize（重置） an existing one\n\n  > 创建一个空的 git repo 或者重置一个\n\n  ​\n\n##### work on the current change (see also: git help everyday)\n\n- add        Add file contents to the index\n\n  > add all\n  >\n  > ```\n  > git add .\n  > ```\n\n- mv         Move or rename a file, a directory, or a symlink\n\n- reset      Reset current HEAD to the specified state\n\n  > 重置当前 HEAD 区到指定的状态\n\n- rm         Remove files from the working tree and from the index\n\n##### examine the history and state (see also: git help revisions)\n\n- bisect     Use binary search to find the commit that introduced a bug\n\n  > 使用二分法查找\n\n- grep       Print lines matching a pattern\n\n  > *grep* (global search regular expression(RE) and print out the line,全面搜索正则表达式并把行打印出来)\n\n- log        Show commit logs\n\n- show       Show various types of objects\n\n- status     Show the working tree status\n\n  > 显示当前工作树的状态\n\n  ​\n\n  ##### grow, mark and tweak your common history\n\n- branch     List, create, or delete branches（分支）\n\n- checkout   Switch branches or restore working tree files（检出）\n\n- commit     Record changes to the repository（提交到版本库）\n\n- diff       Show changes between commits, commit and working tree, etc\n\n- merge      Join two or more development histories together（合并）\n\n  > 多人开发\n\n- rebase     Reapply commits on top of another base tip\n\n- tag        Create, list, delete or verify a tag object signed with GPG\n\n##### collaborate (see also: git help workflows)\n\n- fetch      Download objects and refs from another repository\n\n  > 从远程的分支获取最新版本到本地，不会自动 merge\n  >\n  > ```\n  > #从远程的origin 的 master主分支下载最新的版本到 origin/master分支上 \n  > git fetch origin master:tmp \n  >\n  > #比较本地的 master 分支和 origin/master 分支的区别\n  > git diff tmp \n  >\n  > #合并\n  > git merge tmp\n  > ```\n  >\n  >  git fetch 相对比 git pull 安全些\n\n- pull       Fetch from and integrate with another repository or a local branch\n\n  > 从远程的分支获取最新的版本，并 merge 到本地\n  >\n  > ```\n  > git pull origin master\n  > ```\n  >\n  > **fetch + merge = pull**\n\n- push       Update remote refs along with associated objects\n\n### 二、其他用法\n\n- remote \n\n  > ```\n  > git remote    #列出已经存在的分支\n  > ```\n  >\n  > ```\n  > git remote -v #列出详细信息，每个名字后面加上地址\n  > ```\n\n### 三、具体步骤\n\n```\n$cd yourRepoDict\n$git init \n$git add .\n$git commit -m \"xxxxx\"\n$git remote add origin https://github.com/Yggdrasill-7C9/blog.git\n$git push -u origin master\n```\n\n\n\n# （二）git深入学习\n\n## 一、常见概念\n\n1、**Git 的核心是一个对象数据库。**所有提交的文件、目录、以及相关的元数据都被储存在该数据库中。\n\n* Blob 对象：储存文件内容。\n* Tree 对象：储存目录数据。\n\n2、提交图：`git log --graph`\n\n3、Git 主要有两个层面构成：\n\n* 瓷质命令（porcelain command）\n* 管道（plumbing）\n\n4、快速合并：\n\n* 有两个分支 a 和 b。其中 b 并未对内容做任何修改。所以合并 ab的时候，实际就是将指针指向了a\t。\n* 非快进操作：`--no-ff`：强制产生一次新的提交\n\na —— b —— c ——d \\\n\n​             \\ ——————e\n\n\n\n创建并切换新分支`git checkout -b newbranch`\n\n强制切换新分支`git checkout --force newbranch` \n\n删除分支 `git branch -d nowbranch`\n\n强制删除当前分支 `git branch -D nowbranch` \n\n\n\n## 二、储藏\n\n希望在不提交的情况下修改当前版本的其他内容\n\n### 1、git stash\n\ngit shash 可以将工作区和暂存区中修改 保存在***储藏栈（stash stack）**\n\n### 2、git shash pop\n\n回复栈顶的被储存修改到*工作区*中\n\n### 3、git shash list\n\n查看储藏的修改内容\n\n\n\n## 三、\n\npush\n\npull\n\nmerge\n\nfetch\n\n","slug":"github-使用手册","published":0,"updated":"2024-01-02T16:09:25.073Z","_id":"clqwm2cgp001fuc7tbi7wfipi","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"（一）git深入学习\"><a href=\"#（一）git深入学习\" class=\"headerlink\" title=\"（一）git深入学习\"></a>（一）git深入学习</h1><h3 id=\"一、官方说明\"><a href=\"#一、官方说明\" class=\"headerlink\" title=\"一、官方说明\"></a>一、官方说明</h3><h5 id=\"start-a-working-area-see-also-git-help-tutorial\"><a href=\"#start-a-working-area-see-also-git-help-tutorial\" class=\"headerlink\" title=\"start a working area (see also: git help tutorial)\"></a>start a working area (see also: git help tutorial)</h5><ul>\n<li><p>clone      Clone a repository into a new directory</p>\n<blockquote>\n<p>克隆一个 repo 到一个新的目录</p>\n</blockquote>\n</li>\n<li><p>init       Create an empty Git repository or reinitialize（重置） an existing one</p>\n<blockquote>\n<p>创建一个空的 git repo 或者重置一个</p>\n</blockquote>\n<p>​</p>\n</li>\n</ul>\n<h5 id=\"work-on-the-current-change-see-also-git-help-everyday\"><a href=\"#work-on-the-current-change-see-also-git-help-everyday\" class=\"headerlink\" title=\"work on the current change (see also: git help everyday)\"></a>work on the current change (see also: git help everyday)</h5><ul>\n<li><p>add        Add file contents to the index</p>\n<blockquote>\n<p>add all</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .</span><br></pre></td></tr></table></figure>\n</blockquote>\n</li>\n<li><p>mv         Move or rename a file, a directory, or a symlink</p>\n</li>\n<li><p>reset      Reset current HEAD to the specified state</p>\n<blockquote>\n<p>重置当前 HEAD 区到指定的状态</p>\n</blockquote>\n</li>\n<li><p>rm         Remove files from the working tree and from the index</p>\n</li>\n</ul>\n<h5 id=\"examine-the-history-and-state-see-also-git-help-revisions\"><a href=\"#examine-the-history-and-state-see-also-git-help-revisions\" class=\"headerlink\" title=\"examine the history and state (see also: git help revisions)\"></a>examine the history and state (see also: git help revisions)</h5><ul>\n<li><p>bisect     Use binary search to find the commit that introduced a bug</p>\n<blockquote>\n<p>使用二分法查找</p>\n</blockquote>\n</li>\n<li><p>grep       Print lines matching a pattern</p>\n<blockquote>\n<p><em>grep</em> (global search regular expression(RE) and print out the line,全面搜索正则表达式并把行打印出来)</p>\n</blockquote>\n</li>\n<li><p>log        Show commit logs</p>\n</li>\n<li><p>show       Show various types of objects</p>\n</li>\n<li><p>status     Show the working tree status</p>\n<blockquote>\n<p>显示当前工作树的状态</p>\n</blockquote>\n<p>​</p>\n<h5 id=\"grow-mark-and-tweak-your-common-history\"><a href=\"#grow-mark-and-tweak-your-common-history\" class=\"headerlink\" title=\"grow, mark and tweak your common history\"></a>grow, mark and tweak your common history</h5></li>\n<li><p>branch     List, create, or delete branches（分支）</p>\n</li>\n<li><p>checkout   Switch branches or restore working tree files（检出）</p>\n</li>\n<li><p>commit     Record changes to the repository（提交到版本库）</p>\n</li>\n<li><p>diff       Show changes between commits, commit and working tree, etc</p>\n</li>\n<li><p>merge      Join two or more development histories together（合并）</p>\n<blockquote>\n<p>多人开发</p>\n</blockquote>\n</li>\n<li><p>rebase     Reapply commits on top of another base tip</p>\n</li>\n<li><p>tag        Create, list, delete or verify a tag object signed with GPG</p>\n</li>\n</ul>\n<h5 id=\"collaborate-see-also-git-help-workflows\"><a href=\"#collaborate-see-also-git-help-workflows\" class=\"headerlink\" title=\"collaborate (see also: git help workflows)\"></a>collaborate (see also: git help workflows)</h5><ul>\n<li><p>fetch      Download objects and refs from another repository</p>\n<blockquote>\n<p>从远程的分支获取最新版本到本地，不会自动 merge</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#从远程的origin 的 master主分支下载最新的版本到 origin/master分支上 </span><br><span class=\"line\">git fetch origin master:tmp </span><br><span class=\"line\"></span><br><span class=\"line\">#比较本地的 master 分支和 origin/master 分支的区别</span><br><span class=\"line\">git diff tmp </span><br><span class=\"line\"></span><br><span class=\"line\">#合并</span><br><span class=\"line\">git merge tmp</span><br></pre></td></tr></table></figure>\n\n<p> git fetch 相对比 git pull 安全些</p>\n</blockquote>\n</li>\n<li><p>pull       Fetch from and integrate with another repository or a local branch</p>\n<blockquote>\n<p>从远程的分支获取最新的版本，并 merge 到本地</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull origin master</span><br></pre></td></tr></table></figure>\n\n<p><strong>fetch + merge &#x3D; pull</strong></p>\n</blockquote>\n</li>\n<li><p>push       Update remote refs along with associated objects</p>\n</li>\n</ul>\n<h3 id=\"二、其他用法\"><a href=\"#二、其他用法\" class=\"headerlink\" title=\"二、其他用法\"></a>二、其他用法</h3><ul>\n<li><p>remote </p>\n<blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote    #列出已经存在的分支</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote -v #列出详细信息，每个名字后面加上地址</span><br></pre></td></tr></table></figure></blockquote>\n</li>\n</ul>\n<h3 id=\"三、具体步骤\"><a href=\"#三、具体步骤\" class=\"headerlink\" title=\"三、具体步骤\"></a>三、具体步骤</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$cd yourRepoDict</span><br><span class=\"line\">$git init </span><br><span class=\"line\">$git add .</span><br><span class=\"line\">$git commit -m &quot;xxxxx&quot;</span><br><span class=\"line\">$git remote add origin https://github.com/Yggdrasill-7C9/blog.git</span><br><span class=\"line\">$git push -u origin master</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"（二）git深入学习\"><a href=\"#（二）git深入学习\" class=\"headerlink\" title=\"（二）git深入学习\"></a>（二）git深入学习</h1><h2 id=\"一、常见概念\"><a href=\"#一、常见概念\" class=\"headerlink\" title=\"一、常见概念\"></a>一、常见概念</h2><p>1、<strong>Git 的核心是一个对象数据库。</strong>所有提交的文件、目录、以及相关的元数据都被储存在该数据库中。</p>\n<ul>\n<li>Blob 对象：储存文件内容。</li>\n<li>Tree 对象：储存目录数据。</li>\n</ul>\n<p>2、提交图：<code>git log --graph</code></p>\n<p>3、Git 主要有两个层面构成：</p>\n<ul>\n<li>瓷质命令（porcelain command）</li>\n<li>管道（plumbing）</li>\n</ul>\n<p>4、快速合并：</p>\n<ul>\n<li>有两个分支 a 和 b。其中 b 并未对内容做任何修改。所以合并 ab的时候，实际就是将指针指向了a\t。</li>\n<li>非快进操作：<code>--no-ff</code>：强制产生一次新的提交</li>\n</ul>\n<p>a —— b —— c ——d \\</p>\n<p>​             \\ ——————e</p>\n<p>创建并切换新分支<code>git checkout -b newbranch</code></p>\n<p>强制切换新分支<code>git checkout --force newbranch</code> </p>\n<p>删除分支 <code>git branch -d nowbranch</code></p>\n<p>强制删除当前分支 <code>git branch -D nowbranch</code> </p>\n<h2 id=\"二、储藏\"><a href=\"#二、储藏\" class=\"headerlink\" title=\"二、储藏\"></a>二、储藏</h2><p>希望在不提交的情况下修改当前版本的其他内容</p>\n<h3 id=\"1、git-stash\"><a href=\"#1、git-stash\" class=\"headerlink\" title=\"1、git stash\"></a>1、git stash</h3><p>git shash 可以将工作区和暂存区中修改 保存在*<strong>储藏栈（stash stack）</strong></p>\n<h3 id=\"2、git-shash-pop\"><a href=\"#2、git-shash-pop\" class=\"headerlink\" title=\"2、git shash pop\"></a>2、git shash pop</h3><p>回复栈顶的被储存修改到<em>工作区</em>中</p>\n<h3 id=\"3、git-shash-list\"><a href=\"#3、git-shash-list\" class=\"headerlink\" title=\"3、git shash list\"></a>3、git shash list</h3><p>查看储藏的修改内容</p>\n<h2 id=\"三、\"><a href=\"#三、\" class=\"headerlink\" title=\"三、\"></a>三、</h2><p>push</p>\n<p>pull</p>\n<p>merge</p>\n<p>fetch</p>\n","site":{"data":{"gallery":{"图片名称":{"full_link":"http://miccall.tech/img/twx.jpg","thumb_link":"http://miccall.tech/img/twx.jpg","descr":"图片描述"}},"links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}},"_links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}}}},"excerpt":"","more":"<h1 id=\"（一）git深入学习\"><a href=\"#（一）git深入学习\" class=\"headerlink\" title=\"（一）git深入学习\"></a>（一）git深入学习</h1><h3 id=\"一、官方说明\"><a href=\"#一、官方说明\" class=\"headerlink\" title=\"一、官方说明\"></a>一、官方说明</h3><h5 id=\"start-a-working-area-see-also-git-help-tutorial\"><a href=\"#start-a-working-area-see-also-git-help-tutorial\" class=\"headerlink\" title=\"start a working area (see also: git help tutorial)\"></a>start a working area (see also: git help tutorial)</h5><ul>\n<li><p>clone      Clone a repository into a new directory</p>\n<blockquote>\n<p>克隆一个 repo 到一个新的目录</p>\n</blockquote>\n</li>\n<li><p>init       Create an empty Git repository or reinitialize（重置） an existing one</p>\n<blockquote>\n<p>创建一个空的 git repo 或者重置一个</p>\n</blockquote>\n<p>​</p>\n</li>\n</ul>\n<h5 id=\"work-on-the-current-change-see-also-git-help-everyday\"><a href=\"#work-on-the-current-change-see-also-git-help-everyday\" class=\"headerlink\" title=\"work on the current change (see also: git help everyday)\"></a>work on the current change (see also: git help everyday)</h5><ul>\n<li><p>add        Add file contents to the index</p>\n<blockquote>\n<p>add all</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .</span><br></pre></td></tr></table></figure>\n</blockquote>\n</li>\n<li><p>mv         Move or rename a file, a directory, or a symlink</p>\n</li>\n<li><p>reset      Reset current HEAD to the specified state</p>\n<blockquote>\n<p>重置当前 HEAD 区到指定的状态</p>\n</blockquote>\n</li>\n<li><p>rm         Remove files from the working tree and from the index</p>\n</li>\n</ul>\n<h5 id=\"examine-the-history-and-state-see-also-git-help-revisions\"><a href=\"#examine-the-history-and-state-see-also-git-help-revisions\" class=\"headerlink\" title=\"examine the history and state (see also: git help revisions)\"></a>examine the history and state (see also: git help revisions)</h5><ul>\n<li><p>bisect     Use binary search to find the commit that introduced a bug</p>\n<blockquote>\n<p>使用二分法查找</p>\n</blockquote>\n</li>\n<li><p>grep       Print lines matching a pattern</p>\n<blockquote>\n<p><em>grep</em> (global search regular expression(RE) and print out the line,全面搜索正则表达式并把行打印出来)</p>\n</blockquote>\n</li>\n<li><p>log        Show commit logs</p>\n</li>\n<li><p>show       Show various types of objects</p>\n</li>\n<li><p>status     Show the working tree status</p>\n<blockquote>\n<p>显示当前工作树的状态</p>\n</blockquote>\n<p>​</p>\n<h5 id=\"grow-mark-and-tweak-your-common-history\"><a href=\"#grow-mark-and-tweak-your-common-history\" class=\"headerlink\" title=\"grow, mark and tweak your common history\"></a>grow, mark and tweak your common history</h5></li>\n<li><p>branch     List, create, or delete branches（分支）</p>\n</li>\n<li><p>checkout   Switch branches or restore working tree files（检出）</p>\n</li>\n<li><p>commit     Record changes to the repository（提交到版本库）</p>\n</li>\n<li><p>diff       Show changes between commits, commit and working tree, etc</p>\n</li>\n<li><p>merge      Join two or more development histories together（合并）</p>\n<blockquote>\n<p>多人开发</p>\n</blockquote>\n</li>\n<li><p>rebase     Reapply commits on top of another base tip</p>\n</li>\n<li><p>tag        Create, list, delete or verify a tag object signed with GPG</p>\n</li>\n</ul>\n<h5 id=\"collaborate-see-also-git-help-workflows\"><a href=\"#collaborate-see-also-git-help-workflows\" class=\"headerlink\" title=\"collaborate (see also: git help workflows)\"></a>collaborate (see also: git help workflows)</h5><ul>\n<li><p>fetch      Download objects and refs from another repository</p>\n<blockquote>\n<p>从远程的分支获取最新版本到本地，不会自动 merge</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#从远程的origin 的 master主分支下载最新的版本到 origin/master分支上 </span><br><span class=\"line\">git fetch origin master:tmp </span><br><span class=\"line\"></span><br><span class=\"line\">#比较本地的 master 分支和 origin/master 分支的区别</span><br><span class=\"line\">git diff tmp </span><br><span class=\"line\"></span><br><span class=\"line\">#合并</span><br><span class=\"line\">git merge tmp</span><br></pre></td></tr></table></figure>\n\n<p> git fetch 相对比 git pull 安全些</p>\n</blockquote>\n</li>\n<li><p>pull       Fetch from and integrate with another repository or a local branch</p>\n<blockquote>\n<p>从远程的分支获取最新的版本，并 merge 到本地</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull origin master</span><br></pre></td></tr></table></figure>\n\n<p><strong>fetch + merge &#x3D; pull</strong></p>\n</blockquote>\n</li>\n<li><p>push       Update remote refs along with associated objects</p>\n</li>\n</ul>\n<h3 id=\"二、其他用法\"><a href=\"#二、其他用法\" class=\"headerlink\" title=\"二、其他用法\"></a>二、其他用法</h3><ul>\n<li><p>remote </p>\n<blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote    #列出已经存在的分支</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote -v #列出详细信息，每个名字后面加上地址</span><br></pre></td></tr></table></figure></blockquote>\n</li>\n</ul>\n<h3 id=\"三、具体步骤\"><a href=\"#三、具体步骤\" class=\"headerlink\" title=\"三、具体步骤\"></a>三、具体步骤</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$cd yourRepoDict</span><br><span class=\"line\">$git init </span><br><span class=\"line\">$git add .</span><br><span class=\"line\">$git commit -m &quot;xxxxx&quot;</span><br><span class=\"line\">$git remote add origin https://github.com/Yggdrasill-7C9/blog.git</span><br><span class=\"line\">$git push -u origin master</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"（二）git深入学习\"><a href=\"#（二）git深入学习\" class=\"headerlink\" title=\"（二）git深入学习\"></a>（二）git深入学习</h1><h2 id=\"一、常见概念\"><a href=\"#一、常见概念\" class=\"headerlink\" title=\"一、常见概念\"></a>一、常见概念</h2><p>1、<strong>Git 的核心是一个对象数据库。</strong>所有提交的文件、目录、以及相关的元数据都被储存在该数据库中。</p>\n<ul>\n<li>Blob 对象：储存文件内容。</li>\n<li>Tree 对象：储存目录数据。</li>\n</ul>\n<p>2、提交图：<code>git log --graph</code></p>\n<p>3、Git 主要有两个层面构成：</p>\n<ul>\n<li>瓷质命令（porcelain command）</li>\n<li>管道（plumbing）</li>\n</ul>\n<p>4、快速合并：</p>\n<ul>\n<li>有两个分支 a 和 b。其中 b 并未对内容做任何修改。所以合并 ab的时候，实际就是将指针指向了a\t。</li>\n<li>非快进操作：<code>--no-ff</code>：强制产生一次新的提交</li>\n</ul>\n<p>a —— b —— c ——d \\</p>\n<p>​             \\ ——————e</p>\n<p>创建并切换新分支<code>git checkout -b newbranch</code></p>\n<p>强制切换新分支<code>git checkout --force newbranch</code> </p>\n<p>删除分支 <code>git branch -d nowbranch</code></p>\n<p>强制删除当前分支 <code>git branch -D nowbranch</code> </p>\n<h2 id=\"二、储藏\"><a href=\"#二、储藏\" class=\"headerlink\" title=\"二、储藏\"></a>二、储藏</h2><p>希望在不提交的情况下修改当前版本的其他内容</p>\n<h3 id=\"1、git-stash\"><a href=\"#1、git-stash\" class=\"headerlink\" title=\"1、git stash\"></a>1、git stash</h3><p>git shash 可以将工作区和暂存区中修改 保存在*<strong>储藏栈（stash stack）</strong></p>\n<h3 id=\"2、git-shash-pop\"><a href=\"#2、git-shash-pop\" class=\"headerlink\" title=\"2、git shash pop\"></a>2、git shash pop</h3><p>回复栈顶的被储存修改到<em>工作区</em>中</p>\n<h3 id=\"3、git-shash-list\"><a href=\"#3、git-shash-list\" class=\"headerlink\" title=\"3、git shash list\"></a>3、git shash list</h3><p>查看储藏的修改内容</p>\n<h2 id=\"三、\"><a href=\"#三、\" class=\"headerlink\" title=\"三、\"></a>三、</h2><p>push</p>\n<p>pull</p>\n<p>merge</p>\n<p>fetch</p>\n"},{"title":"关于孩子早教的一点看法","_content":"\n今天看了一篇文章，说一个小朋友6岁玩数独，12岁击败世界第一，高中就被清华录取了。我觉得孩子的培养方式值得深思。\n\n![](http://5b0988e595225.cdn.sohucs.com/images/20171228/064e6961621f4ed683333e9c80488aff.jpeg)\n\n回想一下，我应该是在6岁才开始学会思考，反思这一天都做了什么，所以至今都对6岁时发生的一件小事都记忆犹新。接触数独的时间比较晚，是在高一玩电子词典（步步高9688）的时候才知道有数独这个游戏。正常的解题思路是通过唯一解和摒除法逐一排除，如果6岁的孩子能独立思考并发现这一解法，说明孩子的智力应该是比同龄孩子高很多的，起码大多数6岁的小朋友还没开始记事。那么如何培养普通的小朋友独立思考的能力并锻炼他们的记忆能力呢？\n\nGoogle 了一下，现在公认的「记事儿分水岭」平均值大概是3.5岁。也就是说，小朋友在3~4岁左右就已经在脑海中形成记忆了，不过没有意识去刻意保存记忆，除非外界提醒自己，这个事很重要，需要强迫自记住，否则基本上都是短期记忆。\n\n> 6岁以前我一直都是和奶奶一起住，到了6岁的时候，因为要准备上小学了，所以父母把我接回家和父母一起住。因为家里并没有玩具，所以刚到家第一天，母亲准备了磁带盒给我玩。因为当时的我觉得这件事实在是无聊，所以至今印象都特别深刻，而且至今还记得当初自己在脑海中的想法。但是在同一年发生的其他事情就不记得了。我总结了一下，记得当年发生过的所有事在当初事情发生的时候，我在脑海里都独自思考过。\n\n所以，在孩子形成记忆的阶段（大概是3、4岁），我们就应该引导孩子刻意的去记一些事情。例如可以问孩子，中午都吃什么了呀？昨天都吃什么了呀？在询问的过程中，孩子必然会在脑海中进行思考，等孩子大一点后，我们在可以培养孩子关于其他方面的记忆能力。\n\n= =。回想一下自己好像不光接触数独的时间比较晚，接触其他智力游戏好像都比较晚。汉诺塔是在大学学了递归之后才知道有这个东西；魔方是在7、8岁的时候接触的，不过当时的我只能拼好一个面；扫雷虽然在小学的微机课就知道有这个东西了，不过直到高中我才对这个东西感兴趣并知道原来是这么玩的；华容道也是在小学的时候接触实体玩具的，那个时候还是功能机的年代，记得当时好多手机基本都内置黑白棋华容道和蒙娜丽莎的拼图，不过当时的我好像对这些并不感兴趣。。。\n\n以上，就说这些吧。\n\n\n","source":"_drafts/关于孩子早教的一点看法.md","raw":"---\ntitle: 关于孩子早教的一点看法\ntags:\n---\n\n今天看了一篇文章，说一个小朋友6岁玩数独，12岁击败世界第一，高中就被清华录取了。我觉得孩子的培养方式值得深思。\n\n![](http://5b0988e595225.cdn.sohucs.com/images/20171228/064e6961621f4ed683333e9c80488aff.jpeg)\n\n回想一下，我应该是在6岁才开始学会思考，反思这一天都做了什么，所以至今都对6岁时发生的一件小事都记忆犹新。接触数独的时间比较晚，是在高一玩电子词典（步步高9688）的时候才知道有数独这个游戏。正常的解题思路是通过唯一解和摒除法逐一排除，如果6岁的孩子能独立思考并发现这一解法，说明孩子的智力应该是比同龄孩子高很多的，起码大多数6岁的小朋友还没开始记事。那么如何培养普通的小朋友独立思考的能力并锻炼他们的记忆能力呢？\n\nGoogle 了一下，现在公认的「记事儿分水岭」平均值大概是3.5岁。也就是说，小朋友在3~4岁左右就已经在脑海中形成记忆了，不过没有意识去刻意保存记忆，除非外界提醒自己，这个事很重要，需要强迫自记住，否则基本上都是短期记忆。\n\n> 6岁以前我一直都是和奶奶一起住，到了6岁的时候，因为要准备上小学了，所以父母把我接回家和父母一起住。因为家里并没有玩具，所以刚到家第一天，母亲准备了磁带盒给我玩。因为当时的我觉得这件事实在是无聊，所以至今印象都特别深刻，而且至今还记得当初自己在脑海中的想法。但是在同一年发生的其他事情就不记得了。我总结了一下，记得当年发生过的所有事在当初事情发生的时候，我在脑海里都独自思考过。\n\n所以，在孩子形成记忆的阶段（大概是3、4岁），我们就应该引导孩子刻意的去记一些事情。例如可以问孩子，中午都吃什么了呀？昨天都吃什么了呀？在询问的过程中，孩子必然会在脑海中进行思考，等孩子大一点后，我们在可以培养孩子关于其他方面的记忆能力。\n\n= =。回想一下自己好像不光接触数独的时间比较晚，接触其他智力游戏好像都比较晚。汉诺塔是在大学学了递归之后才知道有这个东西；魔方是在7、8岁的时候接触的，不过当时的我只能拼好一个面；扫雷虽然在小学的微机课就知道有这个东西了，不过直到高中我才对这个东西感兴趣并知道原来是这么玩的；华容道也是在小学的时候接触实体玩具的，那个时候还是功能机的年代，记得当时好多手机基本都内置黑白棋华容道和蒙娜丽莎的拼图，不过当时的我好像对这些并不感兴趣。。。\n\n以上，就说这些吧。\n\n\n","slug":"关于孩子早教的一点看法","published":0,"date":"2024-01-02T16:09:25.074Z","updated":"2024-01-02T16:09:25.074Z","_id":"clqwm2cgp001guc7t10mwh34n","comments":1,"layout":"post","photos":[],"link":"","content":"<p>今天看了一篇文章，说一个小朋友6岁玩数独，12岁击败世界第一，高中就被清华录取了。我觉得孩子的培养方式值得深思。</p>\n<p><img src=\"http://5b0988e595225.cdn.sohucs.com/images/20171228/064e6961621f4ed683333e9c80488aff.jpeg\"></p>\n<p>回想一下，我应该是在6岁才开始学会思考，反思这一天都做了什么，所以至今都对6岁时发生的一件小事都记忆犹新。接触数独的时间比较晚，是在高一玩电子词典（步步高9688）的时候才知道有数独这个游戏。正常的解题思路是通过唯一解和摒除法逐一排除，如果6岁的孩子能独立思考并发现这一解法，说明孩子的智力应该是比同龄孩子高很多的，起码大多数6岁的小朋友还没开始记事。那么如何培养普通的小朋友独立思考的能力并锻炼他们的记忆能力呢？</p>\n<p>Google 了一下，现在公认的「记事儿分水岭」平均值大概是3.5岁。也就是说，小朋友在3~4岁左右就已经在脑海中形成记忆了，不过没有意识去刻意保存记忆，除非外界提醒自己，这个事很重要，需要强迫自记住，否则基本上都是短期记忆。</p>\n<blockquote>\n<p>6岁以前我一直都是和奶奶一起住，到了6岁的时候，因为要准备上小学了，所以父母把我接回家和父母一起住。因为家里并没有玩具，所以刚到家第一天，母亲准备了磁带盒给我玩。因为当时的我觉得这件事实在是无聊，所以至今印象都特别深刻，而且至今还记得当初自己在脑海中的想法。但是在同一年发生的其他事情就不记得了。我总结了一下，记得当年发生过的所有事在当初事情发生的时候，我在脑海里都独自思考过。</p>\n</blockquote>\n<p>所以，在孩子形成记忆的阶段（大概是3、4岁），我们就应该引导孩子刻意的去记一些事情。例如可以问孩子，中午都吃什么了呀？昨天都吃什么了呀？在询问的过程中，孩子必然会在脑海中进行思考，等孩子大一点后，我们在可以培养孩子关于其他方面的记忆能力。</p>\n<p>&#x3D; &#x3D;。回想一下自己好像不光接触数独的时间比较晚，接触其他智力游戏好像都比较晚。汉诺塔是在大学学了递归之后才知道有这个东西；魔方是在7、8岁的时候接触的，不过当时的我只能拼好一个面；扫雷虽然在小学的微机课就知道有这个东西了，不过直到高中我才对这个东西感兴趣并知道原来是这么玩的；华容道也是在小学的时候接触实体玩具的，那个时候还是功能机的年代，记得当时好多手机基本都内置黑白棋华容道和蒙娜丽莎的拼图，不过当时的我好像对这些并不感兴趣。。。</p>\n<p>以上，就说这些吧。</p>\n","site":{"data":{"gallery":{"图片名称":{"full_link":"http://miccall.tech/img/twx.jpg","thumb_link":"http://miccall.tech/img/twx.jpg","descr":"图片描述"}},"links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}},"_links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}}}},"excerpt":"","more":"<p>今天看了一篇文章，说一个小朋友6岁玩数独，12岁击败世界第一，高中就被清华录取了。我觉得孩子的培养方式值得深思。</p>\n<p><img src=\"http://5b0988e595225.cdn.sohucs.com/images/20171228/064e6961621f4ed683333e9c80488aff.jpeg\"></p>\n<p>回想一下，我应该是在6岁才开始学会思考，反思这一天都做了什么，所以至今都对6岁时发生的一件小事都记忆犹新。接触数独的时间比较晚，是在高一玩电子词典（步步高9688）的时候才知道有数独这个游戏。正常的解题思路是通过唯一解和摒除法逐一排除，如果6岁的孩子能独立思考并发现这一解法，说明孩子的智力应该是比同龄孩子高很多的，起码大多数6岁的小朋友还没开始记事。那么如何培养普通的小朋友独立思考的能力并锻炼他们的记忆能力呢？</p>\n<p>Google 了一下，现在公认的「记事儿分水岭」平均值大概是3.5岁。也就是说，小朋友在3~4岁左右就已经在脑海中形成记忆了，不过没有意识去刻意保存记忆，除非外界提醒自己，这个事很重要，需要强迫自记住，否则基本上都是短期记忆。</p>\n<blockquote>\n<p>6岁以前我一直都是和奶奶一起住，到了6岁的时候，因为要准备上小学了，所以父母把我接回家和父母一起住。因为家里并没有玩具，所以刚到家第一天，母亲准备了磁带盒给我玩。因为当时的我觉得这件事实在是无聊，所以至今印象都特别深刻，而且至今还记得当初自己在脑海中的想法。但是在同一年发生的其他事情就不记得了。我总结了一下，记得当年发生过的所有事在当初事情发生的时候，我在脑海里都独自思考过。</p>\n</blockquote>\n<p>所以，在孩子形成记忆的阶段（大概是3、4岁），我们就应该引导孩子刻意的去记一些事情。例如可以问孩子，中午都吃什么了呀？昨天都吃什么了呀？在询问的过程中，孩子必然会在脑海中进行思考，等孩子大一点后，我们在可以培养孩子关于其他方面的记忆能力。</p>\n<p>&#x3D; &#x3D;。回想一下自己好像不光接触数独的时间比较晚，接触其他智力游戏好像都比较晚。汉诺塔是在大学学了递归之后才知道有这个东西；魔方是在7、8岁的时候接触的，不过当时的我只能拼好一个面；扫雷虽然在小学的微机课就知道有这个东西了，不过直到高中我才对这个东西感兴趣并知道原来是这么玩的；华容道也是在小学的时候接触实体玩具的，那个时候还是功能机的年代，记得当时好多手机基本都内置黑白棋华容道和蒙娜丽莎的拼图，不过当时的我好像对这些并不感兴趣。。。</p>\n<p>以上，就说这些吧。</p>\n"},{"title":"分享几个常用的插件工具","date":"2013-03-12T07:12:25.000Z","thumbnail":"https://ss1.bdstatic.com/70cFuXSh_Q1YnxGkpoWK1HF6hhy/it/u=1084700340,387885401&fm=27&gp=0.jpg","_content":"\n\n\n# 分享几个常用的插件工具\n\n## 一、gem\n\n### 1、synx \n\n1. 介绍：\n\n   synx：同步 xcode 工程中的 group 至当前的 finder 中\n\n2. 安装：\n\n   ```shell\n   $ gem install synx\n   ```\n\n\n3. 使用：\n\n   ```shell\n   $ synx your/product/path/project.xcodeproj #项目中有 pod 时一样用xcodeproj\n   ```\n\n4. 注意事项：\n\n   导入 .a 和 .framework文件时，或者 支付宝 SDK 时可能会出现一些问题\n\n","source":"_drafts/分享几个常用的插件工具.md","raw":"---\ntitle: 分享几个常用的插件工具\ndate: 2013-03-12 15:12:25\ncategories: Linux\ntags: \n- tools\n- plugins\nthumbnail: \"https://ss1.bdstatic.com/70cFuXSh_Q1YnxGkpoWK1HF6hhy/it/u=1084700340,387885401&fm=27&gp=0.jpg\"\n---\n\n\n\n# 分享几个常用的插件工具\n\n## 一、gem\n\n### 1、synx \n\n1. 介绍：\n\n   synx：同步 xcode 工程中的 group 至当前的 finder 中\n\n2. 安装：\n\n   ```shell\n   $ gem install synx\n   ```\n\n\n3. 使用：\n\n   ```shell\n   $ synx your/product/path/project.xcodeproj #项目中有 pod 时一样用xcodeproj\n   ```\n\n4. 注意事项：\n\n   导入 .a 和 .framework文件时，或者 支付宝 SDK 时可能会出现一些问题\n\n","slug":"分享几个常用的插件工具","published":0,"updated":"2024-01-02T16:09:25.075Z","_id":"clqwm2cgq001juc7t23nbf7j6","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"分享几个常用的插件工具\"><a href=\"#分享几个常用的插件工具\" class=\"headerlink\" title=\"分享几个常用的插件工具\"></a>分享几个常用的插件工具</h1><h2 id=\"一、gem\"><a href=\"#一、gem\" class=\"headerlink\" title=\"一、gem\"></a>一、gem</h2><h3 id=\"1、synx\"><a href=\"#1、synx\" class=\"headerlink\" title=\"1、synx\"></a>1、synx</h3><ol>\n<li><p>介绍：</p>\n<p>synx：同步 xcode 工程中的 group 至当前的 finder 中</p>\n</li>\n<li><p>安装：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">gem install synx</span></span><br></pre></td></tr></table></figure>\n\n</li>\n<li><p>使用：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">synx your/product/path/project.xcodeproj <span class=\"comment\">#项目中有 pod 时一样用xcodeproj</span></span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>注意事项：</p>\n<p>导入 .a 和 .framework文件时，或者 支付宝 SDK 时可能会出现一些问题</p>\n</li>\n</ol>\n","site":{"data":{"gallery":{"图片名称":{"full_link":"http://miccall.tech/img/twx.jpg","thumb_link":"http://miccall.tech/img/twx.jpg","descr":"图片描述"}},"links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}},"_links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}}}},"excerpt":"","more":"<h1 id=\"分享几个常用的插件工具\"><a href=\"#分享几个常用的插件工具\" class=\"headerlink\" title=\"分享几个常用的插件工具\"></a>分享几个常用的插件工具</h1><h2 id=\"一、gem\"><a href=\"#一、gem\" class=\"headerlink\" title=\"一、gem\"></a>一、gem</h2><h3 id=\"1、synx\"><a href=\"#1、synx\" class=\"headerlink\" title=\"1、synx\"></a>1、synx</h3><ol>\n<li><p>介绍：</p>\n<p>synx：同步 xcode 工程中的 group 至当前的 finder 中</p>\n</li>\n<li><p>安装：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">gem install synx</span></span><br></pre></td></tr></table></figure>\n\n</li>\n<li><p>使用：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">synx your/product/path/project.xcodeproj <span class=\"comment\">#项目中有 pod 时一样用xcodeproj</span></span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>注意事项：</p>\n<p>导入 .a 和 .framework文件时，或者 支付宝 SDK 时可能会出现一些问题</p>\n</li>\n</ol>\n"},{"title":"股票术语","date":"2018-01-18T15:34:23.000Z","thumbnail":"https://i0.hdslb.com/bfs/drawyoo/9e9287e1e69f8489cbb9031afb090e1bc893311e.jpg","_content":"\n股票术语\n\n1、市盈率（P/E ratio）\n\n市盈率 = （当前每股市场价格）÷ （每股税后利润）\n\n动态市盈率：还没有真正实现的下一年度预测利润的市盈率。\n\n\n\n<!-- more -->\n\n\n\n2、市净率：\n\n市净率 = （每股市价 P）÷ （每股净资产 Book Value）\n\n股票净值主要包括公司资本金、资本公积金、法定公积金、任意公积金、为分配盈余等项目的合计，它代表全体股东共同享有的权益，也称净资产。\n\n\n\n3、[公积金](https://baike.baidu.com/item/%E5%85%AC%E7%A7%AF%E9%87%91/1329924?fr=aladdin):公积金分为住房公积金和公司公积金，上文特指公司公积金\n\n","source":"_drafts/股票术语.md","raw":"---\ntitle: 股票术语\ndate: 2018-01-18 23:34:23\ntags: \ncategories: 股票投资\nthumbnail: https://i0.hdslb.com/bfs/drawyoo/9e9287e1e69f8489cbb9031afb090e1bc893311e.jpg\n---\n\n股票术语\n\n1、市盈率（P/E ratio）\n\n市盈率 = （当前每股市场价格）÷ （每股税后利润）\n\n动态市盈率：还没有真正实现的下一年度预测利润的市盈率。\n\n\n\n<!-- more -->\n\n\n\n2、市净率：\n\n市净率 = （每股市价 P）÷ （每股净资产 Book Value）\n\n股票净值主要包括公司资本金、资本公积金、法定公积金、任意公积金、为分配盈余等项目的合计，它代表全体股东共同享有的权益，也称净资产。\n\n\n\n3、[公积金](https://baike.baidu.com/item/%E5%85%AC%E7%A7%AF%E9%87%91/1329924?fr=aladdin):公积金分为住房公积金和公司公积金，上文特指公司公积金\n\n","slug":"股票术语","published":0,"updated":"2024-01-02T16:09:25.076Z","_id":"clqwm2cgr001luc7tf6xkhxau","comments":1,"layout":"post","photos":[],"link":"","content":"<p>股票术语</p>\n<p>1、市盈率（P&#x2F;E ratio）</p>\n<p>市盈率 &#x3D; （当前每股市场价格）÷ （每股税后利润）</p>\n<p>动态市盈率：还没有真正实现的下一年度预测利润的市盈率。</p>\n<span id=\"more\"></span>\n\n\n\n<p>2、市净率：</p>\n<p>市净率 &#x3D; （每股市价 P）÷ （每股净资产 Book Value）</p>\n<p>股票净值主要包括公司资本金、资本公积金、法定公积金、任意公积金、为分配盈余等项目的合计，它代表全体股东共同享有的权益，也称净资产。</p>\n<p>3、<a href=\"https://baike.baidu.com/item/%E5%85%AC%E7%A7%AF%E9%87%91/1329924?fr=aladdin\">公积金</a>:公积金分为住房公积金和公司公积金，上文特指公司公积金</p>\n","site":{"data":{"gallery":{"图片名称":{"full_link":"http://miccall.tech/img/twx.jpg","thumb_link":"http://miccall.tech/img/twx.jpg","descr":"图片描述"}},"links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}},"_links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}}}},"excerpt":"<p>股票术语</p>\n<p>1、市盈率（P&#x2F;E ratio）</p>\n<p>市盈率 &#x3D; （当前每股市场价格）÷ （每股税后利润）</p>\n<p>动态市盈率：还没有真正实现的下一年度预测利润的市盈率。</p>","more":"<p>2、市净率：</p>\n<p>市净率 &#x3D; （每股市价 P）÷ （每股净资产 Book Value）</p>\n<p>股票净值主要包括公司资本金、资本公积金、法定公积金、任意公积金、为分配盈余等项目的合计，它代表全体股东共同享有的权益，也称净资产。</p>\n<p>3、<a href=\"https://baike.baidu.com/item/%E5%85%AC%E7%A7%AF%E9%87%91/1329924?fr=aladdin\">公积金</a>:公积金分为住房公积金和公司公积金，上文特指公司公积金</p>"},{"title":"计算机工具书整理","_content":"\n* 计算机网络：\n * 计算机网络第七版（谢希仁那本）\n * 计算机网络：自顶向下方法\n * 图解 HTTP\n * HTTP 权威指南\n \n* 算法与数据结构：\n * 刘汝佳那几本算法教材\n * 大话数据结构\n\n","source":"_drafts/计算机工具书整理.md","raw":"---\ntitle: 计算机工具书整理\ntags:\n---\n\n* 计算机网络：\n * 计算机网络第七版（谢希仁那本）\n * 计算机网络：自顶向下方法\n * 图解 HTTP\n * HTTP 权威指南\n \n* 算法与数据结构：\n * 刘汝佳那几本算法教材\n * 大话数据结构\n\n","slug":"计算机工具书整理","published":0,"date":"2024-01-02T16:09:25.076Z","updated":"2024-01-02T16:09:25.076Z","_id":"clqwm2cgt001ouc7t1a8c78uu","comments":1,"layout":"post","photos":[],"link":"","content":"<ul>\n<li><p>计算机网络：</p>\n</li>\n<li><p>计算机网络第七版（谢希仁那本）</p>\n</li>\n<li><p>计算机网络：自顶向下方法</p>\n</li>\n<li><p>图解 HTTP</p>\n</li>\n<li><p>HTTP 权威指南</p>\n</li>\n<li><p>算法与数据结构：</p>\n</li>\n<li><p>刘汝佳那几本算法教材</p>\n</li>\n<li><p>大话数据结构</p>\n</li>\n</ul>\n","site":{"data":{"gallery":{"图片名称":{"full_link":"http://miccall.tech/img/twx.jpg","thumb_link":"http://miccall.tech/img/twx.jpg","descr":"图片描述"}},"links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}},"_links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}}}},"excerpt":"","more":"<ul>\n<li><p>计算机网络：</p>\n</li>\n<li><p>计算机网络第七版（谢希仁那本）</p>\n</li>\n<li><p>计算机网络：自顶向下方法</p>\n</li>\n<li><p>图解 HTTP</p>\n</li>\n<li><p>HTTP 权威指南</p>\n</li>\n<li><p>算法与数据结构：</p>\n</li>\n<li><p>刘汝佳那几本算法教材</p>\n</li>\n<li><p>大话数据结构</p>\n</li>\n</ul>\n"},{"title":"冷笑话288则","_content":"\n\n序曲\n\n一位内务人民委员部审判员结束一天的审判工作，回到办公室，突然独自大笑起来。\n对面办公桌的同事奇怪的问道：“有什么好笑的事吗？”\n“是啊，”审判员用手帕擦着笑出来的眼泪：“一个很好笑的笑话……”\n“哦？说来听听？”\n“你疯了吗？！我刚判了说这笑话的家伙五年苦役！”\n\n<!-- more -->\n\n1、\n内务人民委员部的一间牢房里关了三个人，彼此间谈起坐牢的原因。\n第一个人说：“我因为反对党委书记彼得罗夫。”\n第二个人说：“我因为支持彼得罗夫。”\n第三个人说：“我就是彼得罗夫。”\n\n2、\n美国外交代表团到苏联访问，苏修接待官员陪他们参观“建设的伟大成就”，并且得意的说：“到了下一个五年计划，每个苏联家庭都可以拥有一架私人飞机！”\n美国人惊讶的问：“ 他们要飞机干什么呢？”\n苏修官员说：“当然有用啊……譬如你在莫斯科听说列宁格勒开始供应面包了，你可以马上开飞机赶去排队啊。”\n\n3、\n一位公民打电话到基辅电台问主持人：“共产主义到底是艺术还是科学？”\n主持人说 ：“我也不清楚，但我肯定不是科学”\n“为什么？”\n“如果是科学的话，他们应该拿狗做试验。”\n\n4、\n苏修穷兵黩武，军中物质紧缺。\n军需处长在一名下士的陪同下到兵营视察物质供应情况。他们走到油料库附近，在地上发现一个烟头。军需处长不满的说：“这是谁的烟头？！”\n下士看了看四周，欣喜的说：“看来谁的也不是，上校同志，赶快拣起来吧！”\n\n5、\n苏联领袖被邀请到法国巴黎访问。法国官员带他到处看看，他对国防总部、巴黎地下铁、凯旋门、国画馆、高速公路网和闻名世界的TGV快铁都不感兴趣。当法国官员带他到巴黎艾菲尔铁塔前时，他忽然对铁塔很感兴趣。他对法国官员问道：“啊哈！巴黎是不是有九百万人口？”\n法国官员：“您说的一点都不错。”\n领袖洋洋得意道：“哈哈，终于找到了，原来你们巴黎九百万人共享一台钟塔！”\n\n6、\n地狱有个规矩，谁在人间害了人，被害人的血将淹此人。\n一次上帝去地狱视察，发现血只浸到贝利亚的腿。上帝就很奇怪，问到：“你杀了这么多人，怎么血只及腿呢？”\n贝利亚答道：“因为我站在伟大领袖斯大林的肩上！”\n【贝利亚：苏联秘密警察首脑】\n7、\n赫鲁晓夫到处作报告，一天，他去某疯人院作报告，事先该疯人院负责人把疯子召集起来叮嘱：“在赫同志作完报告后要热烈鼓掌”。赫作完报告后果然博得了长时间经久不息的掌声，赫非常得意。但他突然发现，其中有一个人没有鼓掌，他顿时大发雷霆。赫问：“ 你为什么不鼓掌？”此人答曰：“我的疯病已经治好了。”\n\n8、\n斯大林、赫鲁晓夫和勃列日涅夫乘坐火车出门。开着开着，火车突然停了。\n斯大林把头伸出车窗外，怒吼道：“枪毙火车司机！”可是车还是没有动。\n接着赫鲁晓夫说：“给火车司机恢复名誉！”车仍然没有动。\n勃列日涅夫说：“同志们，不如拉上窗帘，坐在座位上自己摇动身体，做出列车还在前进的样子……”\n\n9、\n苏联的一次大会上，主持人突然说：下面请认为社会主义好的同志坐到会场的左边，认为资本主义好的同志坐到会场右边。大部分人坐到了左边，少数人坐到右边，只有一个人还坐在中间不动。\n主持人：那位同志，你到底认为社会主义好还是资本主义好？\n回答：我 认为社会主义好，但是我的生活像是资本主义。\n主持人慌忙说：那请您赶快坐到主席台上来。\n\n10、\n列宁快去世了，叫赶快把继承人斯大林召进克里姆林宫来，临终有几句话要嘱托：“不瞒你说，我还有一个隐忧啊，斯大林。”\n“说吧，亲爱的伊里奇。”斯大林专心地听着。\n“ 那就是，人们会跟你走吗？不知你想过了没有？”\n“他们一定会跟我走的。”斯大林强调说，“一定会！”\n“但愿如此。”列宁说，“我只是担心，万一他们不跟你走，你怎么办？”\n“那只好让他们跟你走！”\n\n11、\n社会主义者、资本主义者、共产主义者商定要见一面。社会主义者过了约会的时间才到。\n——“对不起，我去排队买香肠来着。”\n——“什么是排队？”资本主义者问。\n——“什么是香肠？”共产主义者问。\n\n12、\n数学和科学社会主义有什么区别？\n在数学上，如果给出什么东西，都需要证明，而科学社会主义什么都能证明，就是什么也不能提供。\n\n13、\n马克思想在苏联发表广播演说。勃列日涅夫对他说：“虽然您是奠基人，但是我一个人不敢决定那么重大的问题。我们是集体领导。”\n“我只想说一句话！”\n最后，勃列日涅夫只允许他说一句话，并且要他自己负责。马克思凑近话筒，大声说道：\n“全世界的无产者，请原谅我！”\n**有的版本还有一个补充的结尾：\n列宁看到苏联现在建设的社会主义，说：看来我要回到瑞士去，以便重头开始“\n\n14、\n有个人向赫鲁晓夫汇报说：“现在大剧院正上演一个剧，里面有您出现，每当您一出场，下面就热烈鼓掌。”赫鲁晓夫听了以后非常得意。有一天他买了一张普通票，去看这个剧，他陷入了沉思，忘记了鼓掌，这时旁边有人推了他一把，紧张地说：“哎！你为什么不鼓掌？不要命啦？！”\n\n15、\n在苏共二十三次代表大会上，勃列日涅夫作报告，他问：“我们这里有没有敌人？”一个人回答：“有一个，他坐在第四排第十八号位子上。”勃问：“为什么他是敌人？”回答：“列宁说过敌人是不会打瞌睡的，我发现全场只有他一个人没有打瞌睡！”\n\n16、\n演讲人在做关于五年计划成就的报告：在列宁格勒新建了一个电站。\n大厅里有人说：“我刚从那回来，那没有什么电站。”\n演讲者没有回答，继续说：“在斯大林格勒已建成了一个化学厂。”\n大厅里有人说： “一周前我在那里，那里没有什么化学厂。”\n演讲人：“同志们，你们最好少东游西逛的，要多看一些报纸！比如《真理报》！” \n\n17、\n斯大林在大会上引经据典地说：“马克思和列宁说1+1=2，而托洛茨基和布哈林说1+1不等于3。是托洛茨基和布哈林说的对呢？还是马克思和列宁说得对呢？”下面听众一脸疑惑，“毫无疑问，是马克思和列宁说的对！”底下热烈鼓掌，“托洛茨基和布哈林是帝国主义派来的间谍，说1+1不等于3的人罪不容赦……”\n\n18、\n集体农庄庄员伊万在河里捉到一条大鱼，高兴的回到家里和老婆说：“看，我们有炸鱼吃了！”\n“没有油啊。”\n“那就煮！”\n“没锅。”\n“烤鱼！”\n“没柴。”\n伊万气死了，走到河边把鱼扔了回去。那鱼在水里划了一个半圆，上身出水，举起右鳍激动地高呼：“斯大林万岁！”\n\n\n19、\n“瑞典能否建立共产主义”？\n“不能。”\n“为何？”\n“列宁同志说了：共产主义不在山那边。”\n\n\n20、\n美术馆里有一幅描写亚当和夏娃的画。\n一个英国人看了，说：“他们一定是英国人，男士有好吃的东西就和女士分享。”\n一个法国人看了，说：“他们一定是法国人，情侣裸体散步。”\n一个苏联人看了，说：“他们一定是苏联人，他们没有衣服，吃得很少，却还以为自己在天堂！\n\n21、\n一老者人行道闲溜，不慎落入道旁河中。随高呼救命！\n两警察闻之，视若不见，仍边走边谈笑如旧。\n老者情急生智，随又高呼“打倒勃列日涅夫”！两警察闻之大惊，随急速跳入河中，将老者拖上岸来铐之。\n\n\n22、\n某日苏联举行国庆游行，沿着大街开来了炮兵、机械化步兵、坦克、自行火炮、战术导弹、战略核导弹，破坏力一个比一个大；队列末尾却是两个带公文包的矮子。\n在看台上勃列日涅夫惊讶地说：“这两个人破坏力比核导弹还大！他们是什么人？”\n克格勃头子说：“不是我的人。”\n国防部长说：“没见过他们。”\n苏联总理说：“他们是国家计委的……”\n【计委：计划经济委员会/纪委：纪律检查委员会】\n\n23、\n勃列日涅夫,杜布切克(捷克总书记),英国首相和美国总统,4人乘坐气球.\n气球漏气了,抬不动4人,开始下坠,万分危机,必须有人牺牲自己跳出.\n先是美国总统喊了声\"为了自由世界!\",然后跳了出去.气球下坠暂缓,但过一会儿漏气更多,下坠又加快,必须再跳出1人.\n于是英国首相喊:\"为了女王陛下!\",跳了出去.\n暂缓一会儿又不行了,于是勃列日涅夫喊道:\"为了社会主义大家庭!\"说着就把杜布切克扔出去了.\n\n\n24、\n一个莫斯科市民的鹦鹉丢了。这是只会骂人的鹦鹉，要是落到克格勃的手里可糟了。这人便在报纸上发表了一篇声明：“本人遗失鹦鹉一只，另外，本人不同意它的政治观点。”\n\n\n25、\n一个英国人,一个法国人,一个苏联人谈论什么是世界上最幸福的事\n英国人：最幸福的事情就是冬天晚上回家，穿着羊毛裤坐在壁炉前面。\n法国人：你们英国人就是古板，最幸福的事情是和一个金发女郎一起去地中海度假，然后我们好和好散。\n苏联人：最幸福的事情就是半夜有警察敲门，开门后：伊万，你被捕了。\n…：你弄错了，伊万在隔壁。\n\n\n26、\n话说勃烈日涅夫同志当上苏共中央总书记之后，将在乡下的老母亲接到了莫斯科。老太太来了以后，勃列日涅夫得意洋洋地向老妈展示了一番自己的豪华别墅、高级汽车、名贵家具等等，展示完了后，勃列日涅夫问老太太这一切如何？老太太说：“儿子啊，这一切都很好，但是，共产党来了你怎么办？”\n\n\n27、\n勃列日涅夫和美国总统卡特在瑞士开会，休息时间两个人很无聊，就开始比谁的保镖更忠诚。卡特先来，他把自己的保镖叫进来，推开窗（外面是20层楼）说： “约翰，从这里跳下去！”约翰哭着说：“你怎么能这样呢，总统先生，我还有老婆孩子呐。”卡特被感动了，流着泪说是自己不对，叫约翰走了，然后抡到勃列日涅夫，他也大声叫自己的保镖伊万。“伊万，从这里跳下去！”伊万二话不说就要往下跳，卡特一把抱住他说：“你疯了？跳下去会死的！”伊万一边挣扎着要跳下去一边说：“放开我，混蛋，我还有老婆孩子呐。”\n\n\n28、\n列宁的夫人曾经当面指出斯大林的专制独裁统治，令后者气急败坏，斯大林说：“你再说，我就宣布你不是列宁的妻子！\n\n\n29、\n古巴举行盛大五一节游行，卡斯特罗率党和国家领导人全体出席，检阅游行队伍。就在游行队伍通过主席台的时候，卡斯特罗同志突然发现人群中有一个人掏出一块新手帕擦了擦鼻子，于是他马上对身边的一位政治局委员道：“我敢打赌，这个拿手帕擦鼻子的人里面没穿内裤！”委员不以为然，难道卡斯特罗同志真长了透视眼不成？他马上命令警卫把那个人叫道跟前，亲自询问，吃惊地发现，这人长裤里面果然是光着的。委员敬佩地问领袖：“卡斯特罗同志，您是如何知道透过外衣看见他没穿内裤的？”卡斯特罗回答：“我看见他掏出了新手帕，他的布票显然没用来买内裤嘛。”众人大惊，无不佩服领袖超凡的洞察力……\n\n30、\n美国人登月成功后,勃列日涅夫当天就打电话给苏联宇航员：“鉴于美国人已经在月球上登陆，现在苏联决定，马上派你们去太阳登陆”。宇航员大惊，哽咽道： “您不知道吗，勃列日涅夫同志，我们会被烧死的”。勃列日捏夫生气地说：“你以为政治局没有考虑过吗？我们已经决定，派你们在晚上在太阳登陆！”\n\n31、\n一个美国代表团要访问一个苏联的工厂，当局就预先教工人要怎样回答代表团的提问。代表团来后问一个老工人你每月的工资是多少，老工人回答有3000卢布；代表团又问他有多少存款，他回答有10万卢布；代表团问：你存了这么多钱准备干什么呢？老工人回答说：“我准备买一双靴子。”\n\n32、\n二战结束后一个波兰农村老太看到街上贴着的照片就说像自己的外甥\n别人训斥她：瞎说什么，这是斯大林同志\n老太：他是干什么的？\n答：他赶跑了纳粹\n老太急切地问：他能不能把俄国人也赶跑啊？\n\n33、\n老师在莫斯科街上碰到以前的学生斯基洛夫（已经当了克格勃）。\n老师说：现在的学生学习可真不象话，上课时我问他们《叶甫盖尼·奥涅金》是谁写的，他们居然没人回答；逐个问，居然都说“不是我写的”\n斯基洛夫：这是一个问题，这件事交给我吧\n过了一周，斯基洛夫兴致勃勃地找到老师：我审了他们几天，事情解决了；伊万那小子招了，是他写的\n老师：…………\n【《叶甫盖尼·奥涅金》：普希金的著名作品】\n34、\n去买报纸，要一份《真理报》。报贩回答：《真理》没有了，只有《消息》。 \n\n35、\n苏联赫鲁晓夫访问美国，美国总统送一最新高科技电话，曰，上可打天堂，下可打地狱，中可打人间，乃美国最新高科技产品。\n赫鲁晓夫回国后，一日想起，拿起电话拔通天堂。“喂，你好，请帮我转列宁同志。”“请稍侯...”电话那边接线生答道，“对不起，查无此人，请查清号码再拔”\n老赫一想，莫非导师不在天堂，在地狱？于是拨到地狱。“喂，你好，请帮我转列宁同志。”“请稍侯...列宁同志在线，现在就帮您转过去”\n老赫于是将最近几十年的革命形势和国际斗争局势一五一十地向导师作了汇报，并听取了导师的指导。\n月底，电话费清单寄来，老赫一看大惊！打到天堂的问询电话不过1分钟却收费100美元，打到地狱的1个多小时汇报和批示，却才1美元。大惑不解，遂电话问询美国总统－－这是为何？\n美国总统在大洋彼岸答曰：“事情是这样的，你们苏联打电话到天堂是长途，打电话到地狱却是市话，所以...”\n\n36、\n一日，某君站在柜台前观看。一大脑标价50万美元，某君定睛一看，克林顿大脑。心下叹服，果然是美国总统，不同凡响。再看，另一大脑标价100万美元，乃爱因斯坦大脑，某君再叹，果然是天才天价，值！\n还看，见一大脑标价200万美元，是朝鲜某相国大脑。某君大惑不解，问售货小姐何故。\n小姐从容答道，小克老爱大脑虽好，却是用旧的二手货。此相国大脑却是全新，从未用过，故此价值200万！\n\n37、\n赫鲁雪夫和肯尼迪交谈，各自吹嘘，肯尼迪说：“美国医学发达，有种药片死人吃了可以复活。”赫鲁雪夫说：“苏联体育发达，有人十分钟可以从莫斯科跑到美国。”肯尼迪要求兑现，赫鲁雪夫慌了手脚，召集文武大臣商量对策，有人出了个好计策说：“这很好办，你先让肯尼迪把药片拿来，让斯大林吃了，那斯大林一定复活，那么你用不了五分钟就可以从苏联跑到美国。”\n\n38、\n赫鲁晓夫在苏共二十大揭露斯大林的暴行时，台下有人递条子上去。\n赫鲁晓夫当场宣读了条子的内容：“赫鲁晓夫同志，当时你在干什么？”。\n然后问道：“这是谁写的，请站出来！”。\n连问三次，台下一直没有人站出来。\n于是赫鲁晓夫说：“现在让我来回答你吧，当时我就坐在你的位置上。”\n\n39、\n叶利钦、克林顿和金2，在森林里散步，遇到一只恶狼。\n狼拦住小克说，俺要吃你。小克慌道，狼啊狼啊，别吃俺，俺给你美元。狼一想，也行。\n于是走到老叶跟前说，俺要吃你。老叶忙说，俺俄罗斯虽没钱，但俺有美女，给你美女，放俺一马。狼一想，也行罢。\n狼这回到了金2跟前，说，俺要吃你。\n金2的拍大腿，说，俺不怕你！\n狼吃惊道，小克老叶都怕俺，你为何不怕？金2说，俺不怕你，因为俺身后有200万朝鲜痨冻党员，所以俺不怕你。\n狼卟通一声跪下，声泪俱下说：“总书记啊，俺终于找到组织了！\n\n40、\n勃列日涅夫即将访问波兰，波兰当局命令一位著名画家创作一幅名为《勃列日涅夫在波兰》的大型油画作为献礼。很不情愿的画家在威逼下接受了工作。画完成后，波兰一高官前来验收，结果让他大吃一惊：画面上是一男一女在豪华的大床上极尽缠绵，窗外的风景是克里姆林宫。“这是什么？这女的是谁？！”高官愤怒的问。“勃列日涅夫的夫人。”画家答道。“男的呢？！”“勃列日涅夫的秘书。”“可勃列日涅夫同志在哪里？”“勃列日涅夫在波兰。”画家答道。\n\n41、\n苏联领导人坐火车旅行。铁轨到了尽头，火车停下。\n列宁号召：“立即发动无产者搞星期六义务劳动，修铁路，直通共产主义！”\n斯大林抽着烟斗，严肃地下令：“给我调100万劳改犯来，修不通铁路，统统枪毙。”\n赫鲁晓夫敲着皮鞋喊：“把后面的铁路接到前面去，火车继续开！”\n勃列日涅夫挥舞着双手说：“坐在座位上自己摇动身体，做出列车还在前进的样子。”\n最后，戈尔巴乔夫沉思道：“把火车拆了，到有铁轨的地方再拼装起来。”\n于是苏联解体了。\n\n\n42、\n幼儿园.小女孩写了首小诗朗诵起来:\n我家有只大花猫,生下三个猫宝宝,猫眯个儿还没长,喵喵喵喵都入党...\n园长大喜,夸奖一番:党委下来检查,乖乖你就上吧...\n检查团来了,小孩朗诵道:\n我家有只大花猫,生下三个猫宝宝,猫眯个儿还没长,喵喵两个都入党...\n园长低声提醒:三个,不是两个...\n小孩委屈道:可是...可是另一只已经睁眼了...\n\n43、\n老布什、戈尔巴乔夫、和邓小平各开一辆车，到了一十字路口，上面有两个路牌：东---〉社会主义；西----〉资本主义，布什连看都不看一拐就走西边去，戈尔巴乔夫到了，左想右想，犹豫了一会还是向西拐了。最后是邓小平，只见他手脚麻利地把两个牌子互换了一下，向着“社会主义”方向前进了。 \n\n44、\n一个苏联人准备移民去美国，上级知道了很不高兴。于是组织了一个委员会给他做思想工作，领导说：“同志，你为什么要去美国？是因为不满意没有好吃的？” “不是。”“是因为不满意住房条件太差？”“不是。”“是因为不满意工资水准太低？”“不是。”“那我们不明白了，你没有什么不满意的，为什么要去美国？”“因为在美国，我可以有不满意。”\n\n45、\n美国宇航员和苏联宇航员同时登上了月球。苏联宇航员宣布月球属于苏维埃政权，美国宇航员得到来自休斯敦的命令：“不要与苏联人发生冲突”。于是，美国宇航员眼睁睁看着苏联人把整个月球漆成红色然后扬长而去。这时，他们得到了来自休斯敦的指令：“ 在上面写上白色的COCA COLA。”\n\n46、\n克里姆林宫，勃列日涅夫拿起通往埃及总统府的电话：“我是勃列日涅夫，我要和萨达特总统的遗孀讲话！”\n“遗孀？ 萨达特总统可一直都活着呀？”电话另一端传来惊讶的声音。\n老勃放下电话，冲身旁的克格勃头子大喊：“混蛋！为什么把原订的行动时间推迟了？”\n\n47、\n一位莫斯科市民在公交车上：“您好同志，请问您是克格勃吗？”\n“不是。”\n“那您的家人或直系亲属有在克格勃工作吗？”\n“没有。”\n“那您有朋友在克格勃吗？”\n“没有。”\n“那您把脚拿开好吗，您踩到我脚了”\n\n48、\n勃列日涅夫执政时期，政局混乱\n有个人骂了句勃列日涅夫是傻子，结果无期了\n本来他只要判两年，结果法官说他泄露了国家机密，就无期了\n\n49、\n对苏联知识分子来说有五个规则：\n什么都别去思考；\n如果你一定要思考，不要说出来；\n如果你又要思考又要说，那就别写出来；\n如果你又思考又说还写，那么别签名；\n如果以上规则你都不遵守，那你就别感到吃惊\n\n50、\n斯大林在办公室发现了老鼠。他跟加里宁省主席抱怨这事，后者想了一会说：“你干嘛不立个牌子上面写着：‘集体农庄’？这样一半老鼠会饿死，另一半则会跑掉”\n\n51、\n伊万诺维奇入党。这以前他必须经过党委会面试\n伊万诺维奇同志，你抽烟吗？”\n“时不时抽一些”\n“你知道列宁同志不抽烟而且号召其他同志也不抽烟吗？”\n“既然列宁同志这样说，我会戒烟的”\n“你喝酒吗？”\n“喝一点”\n“列宁同志强烈反对酗酒”\n“那么我会戒酒的”\n伊万诺维奇同志，你对女人怎么看？”\n“有一点。。。。”\n“你知道列宁同志强烈谴责不道德行为吗？”\n“既然列宁同志这么看，那么我不会再爱女人啦”\n“IVANOV同志，你随时准备着为党作出牺牲吗？”\n“当然。谁愿意这么活着？（WHO NEEDS SUCH LIFE？）”\n\n52、\n“将军的儿子能成为元帅吗？”\n“不可能。元帅都有儿子”\n\n53、\n勃列日涅夫访问印度时，大批印度人到机场欢迎勃列日涅夫。勃列日涅夫便问当时的印度总理英甘地，你是用什么办法让这么多人来欢迎我的？英甘地回答：凡是来欢迎你的人，都能够得到5个卢比（印度货币）的奖励。\n后来英甘地到苏联访问时，成千上万的苏联人从机场到莫斯科市内的道路上夹道欢迎。英甘地问勃列日涅夫：你是用什么办法让这么多人来欢迎我的？勃列日涅夫回答：凡是不来欢迎你的莫斯科人，每人罚款5卢布（苏联的货币）\n\n54、\n戈尔巴乔夫视察一个集体农场，农场书记抱怨说：这里所有的小猪都长得不错，唯有一只总是病歪歪的。戈尔巴乔夫一听说到：交给我吧，同志。戈尔巴乔夫带回小猪弄了一周眼看不行了小猪要死掉了，于是大清早把小猪放在婴儿车里要丢掉，不巧碰上了米高扬，米高扬笑着说：总书记同志，这么早就出来啦！戈尔巴乔夫神色慌张的说：哦，可不是嘛，我的小孙子闹得不行，带出来透透气。米高扬走到婴儿车前看了一眼说：哦，多好的孩子，长的真像他爷爷！\n\n\n55、\n亚历山大、凯撤、拿破仑做为贵宾，参加红场阅兵。\n——我要是有苏联的坦克，我将是战无不胜的！亚历山大说。\n——我要是有苏联的飞机，我将征服全世界！凯撤说。\n——我要是有真理报，世界现在也不会知道滑铁卢！拿破仑说。\n\n56、\n“苏联和英国的童话传说有什么不同？”\n“英国童话的开头通常是：‘很久很久以前……’而我们的则是；‘不远了，不远了……\n\n57、\n斯大林做报告说：……共产主义已经出现在苏联的地平线上了……\n老工人不知道什么是地平线，回家后问儿子，儿子说：地平线就是能看到却永远走不到的一条线。\n\n58、\n——社会主义制度的优越性在哪里？\n——成功地克服了在其它社会制度里不会存在的困难。\n\n59、\n——拉宾诺维奇，你经常读报纸吗？\n——当然，要不我怎么知道我们过着幸福的生活？\n\n\n60、\n一天戈尔巴乔夫到一个农场视察，看到有几头猪，就到猪旁边拍了一张照片。\n随行人员在照片上写上：戈尔巴乔夫和猪在一起，但又感到不妥。于是改成：猪和戈尔巴乔夫在一起，可还是感觉不对。最后把照片上的字改成：“左起第三位是戈尔巴乔夫”。\n\n61、\n苏联邮政发行历届领导人纪念邮票， 发行没1个月，邮政宣布紧急停止使用该邮票。\n理由是：寄信人不知道往哪面吐唾沫。\n\n\n62、\n朝鲜：嗯，大哥，我想做个核试验。\n中国：什么时候?\n朝鲜：10\n中国：10什么？10个月？还是10天?\n朝鲜：9，8，7......\n中国：你大爷的！\n\n63、\n一个美国人和苏联人比赛言论自由.美国人说：“我可以在白宫门前高喊‘打倒美帝国主义’。警察绝对不会抓我。”\n苏联人很不服气，说：“这有什么。我也可以在克林姆林宫门前高喊‘打倒美帝国主义’，警察也绝对不会抓我。”\n\n64、\n在集体农庄党的会议上将研究两个问题：建造木棚和建设共产主义。在没有木板的情况下，直接研究第二个问题。\n\n65、\n“同志，你对这个问题有什么意见吗？”党支书问道。 \n“对，我是有意见，但我不同意我的意见！”\n\n67、\n工人说:我们已经是共产主义了\n有人问:为什么?\n工人说:我们实现了各尽所能,各取所需的分配原则.\n什么?那人又问\n工人说:你没见我们的领导各取所需,工人各尽所能!\n\n68、\n“在苏联是否可以存在两党制？” \n“不，不可能，因为我们养不起。” \n\n69、\n——什么在苏联是最常见的？ \n——暂时的困难。\n\n70、\n苏联时期莫斯科卢比扬卡（克格勃总部）大楼外。 \n一个愁眉苦脸的男子一边走路一边自言自语：肥皂没有，电池没有，袜子也没有。……\n这时旁边走过来一个看起来象是便衣的人小声对他说：公民同志，您要是再这样诋毁我们伟大的社会z主义国家，我就要拿手枪把敲你的脑袋了！ \n那个男子看看便衣警察，继续自言自语：看看，连子弹也没有……\n\n71、\n在调查表上有这样一个问题：在执行总路线时你动摇过吗？ \n拉宾诺维奇回答道：“我和总路线一起动摇。”\n\n72、\n——共产主义还有会货币吗？ \n——南斯拉夫的修正主义者说会有，中国的教条主义者说没有，我们是辩证地看待这个问题：有，但不是所有人都有。\n\n73、\n拉宾诺维奇到资本主义国家出差，在那里，他给单位拍了一个电报：“我选择了自由。”这事发生后，单位马上召集了党代会谴责拉宾诺维奇，并要做出组织结论。在会议中间，拉宾诺维奇突然走进了会场！全场哑然。 \n拉宾诺维奇说道：“我非常感兴趣，你们是怎样理解自由的。”\n\n74、\n——苏联人第六感的什么方面最发达？ \n——高度的满足感。 \n\n75、\n——为什么我们执行总路线那么慢 ? \n——因为每次党代会转的弯太大。\n\n76、\n——有 40 颗牙4条腿的是什么东西？ \n——鳄鱼。 \n——有4颗牙40 条腿的是什么东西？ \n——政治局 \n\n77、\n“假设你在酒吧里，而一个陌生人坐到你的身边并开始唉声叹气，你该怎么做\n“立即去阻止这种反苏宣传” \n\n78、\n“共产主义实现时警察还存在吗？” \n“当然不。那时候所有公民都已经学会自己逮捕自己”\n\n79、\n一个苏联人家中总是被偷，于是很郁闷的问邻居：“什么时候我们家的东西才能不被偷？” \n邻居：“等到了共产主义社会就不被偷了。” \n“为什么？” \n“因为在社会主义阶段就已经被偷光了。\n\n80、\n苏联特工对美国特工夸口道：“我们知道你们国家所有核导弹发射井的位置。” \n美国特工说：“那又有什么，我们知道你们未来20年全体政治局委员名单。”\n\n81、\n亞美尼亞電台播放著機智問答說： \n「雞和蛋哪一個先有？」 \n解答者在一旁暗暗地答道：「從前兩者都有。」\n\n82、\n一对夫妇生了一个孩子，如果长得像父母，那就是按反动的基因学说生出来的，如果长得像他们的邻居，那就是按照李森科的革命的环境决定学说生出来的。\n\n83、\n戈尔巴乔夫颁布限酒令后，想要买到酒只能在指定销售处排长队来买。 \n一个莫斯科人排队排烦了，就嚷道：“我要到克林姆林宫把戈尔巴乔夫干掉。”然后转身离去。 \n一会儿他有回来了，旁边人问他：“已经干掉了吗？” \n他说：“干什么干啊！那里的队比这里还长。”\n\n84、\n“可能在美国建成共产主义吗？” \n“可能的。但是那样的话我们到哪里买粮食？”\n\n85、\n“下次选举的结果会是怎样的？” \n“没有人知道。有人从中央委员会那里偷走了下次选举的确切结果\n\n86、\n“为什么有人说匈牙利人喜欢苏联人而讨厌美国人？” \n“因为苏联人帮助匈牙利人摆脱了一次专制，而美国人没有解决另外一个”\n\n87、\n拉宾诺维奇在克里姆林宫里工作，他待在塔楼前望着远方，以便在共产主义到来时及时发出信号。美国人想要引诱他为他们工作，让它在经济危机到来时发出警告。拉宾诺维奇回答说： \n——不，我需要一个固定的工作。\n\n88、\n美国百万富翁买下苏联国家百货商场，并宜布要免费分发商品。 \n很快百货商店和通向这里的道路就开始堵塞，并有许多因拥挤而死伤的人。人们问百万富翁问：　 \n——你为什么要这样做？ \n——我非常感兴趣，当你们实行按需分配时会是什么样子。\n\n89、\n——为什么共产党员不能接受圣经？ \n——根据圣经，先有混乱，然后根据上帝的计划引入秩序。共产主义的经验告诉我们，先有秩序，然后混乱就会到来\n\n90、\n——是什么原因决定了我们能在西方国家买那么多小麦？ \n——要知道资本主义的最大缺点就是生产过剩。\n\n91、\n一个年轻的东德共产党员向他的首长提出了一个请求：他想得到移民西德的许可 \n“为什么你竟然会想离开社会主义天堂，小同志？” \n“首长，我有一个主要的原因和一个次要的原因。次要原因是我知道我们党已经在民主德国建立了一个天堂，而我害怕这个天堂不能延续很久” \n“别担心！孩子，这里将永远是天堂” \n“那，好吧，首长，这就是我说的主要原因了”\n\n92、\n五一劳动节游行中，一个非常老的犹太人举着一个标语：“为了我快乐的童年时代，谢谢你，斯大林同志” \n党代表找到他：“那是什么 ？你在嘲弄我党吗？谁都可以看出，当年还是孩子的时候，斯大林同志还没有出生” \n“确切的说，那就是我感谢他的原因”\n\n93、\n“美国的摩天楼真是全世界最高的吗？” \n“是的。但是苏联制造的晶体管是全世界最大的” \n\n94、\n“如果我们放开西部边界管制的话，我们应该做什么？” \n“立即跑到西伯利亚以避免被踩死” \n\n95、\n“为什么那个枪击政府豪华轿车的家伙会在红场打偏子弹？” \n“因为刚巧挨着他的公民们拼命抢那把枪并叫着：‘让我来射击！’\n\n96、\n“为什么我国政府不急着登月？” \n“如果宇航员拒绝回来怎么办？”\n\n97、\n“为什么巡警总是三人一队？” \n“这是专门的安排。一个会阅读，一个会写字，自然第三个要随时监视这两个知识分子”\n\n98、\n有人通过走关系，把列宁同志送到了天堂，这个无神论者被接纳了。\n过了几天，这人给上帝打电话表示感谢，电话接通了，他说：你是上帝吗?\n上帝回答：首先，没有上帝。其次，我们这里每个人都是同志。第三，有事请直说，我还要参加党代表会议。\n\n99、\n大西洋上某处，苏联和美国核潜艇碰巧在一处上浮出水。　\n苏联潜艇的船员在甲板上没秩序地站着队，半醉的舰长生气地吼道：谁把靴子扔到控制台上去啦？我再问一遍：谁他妈把靴子扔到控制台上去啦？\n刚好美国潜艇甲板上的舰长听见了，与苏联舰长相比，他不仅刮了胡子而且精神抖擞。而他的手下更是秩序井然。\n显然他很自豪。他说：呵呵，这要是在我们美国——\n苏联舰长不耐烦地打断他：行啦，没有什么美国啦——我再问一遍，谁他妈把靴子扔到控制台上去啦？！\n\n100、\n勃列日涅夫在冬季奥运会上阅读讲话稿：”O-O-O-O-O。”\n“不，”他的助理向他低声道，“那是奥运会的标志。”\n\n101、\n来了一个格鲁吉亚代表团。他们被斯大林接见，谈话，然后离开，斯大林开始找他的烟斗，找不到。他叫贝利亚。\n“追代表团，找找谁拿了我的烟斗。”他说。\n贝利亚赶忙去追代表团。五分钟后，斯大林在一堆纸下找到了他的烟斗。他叫贝利：“瞧，我找到我的烟斗了。”\n“太晚了，”贝利亚说，”代表团中的半数已经承认他们拿了你的烟斗，另外一半在审讯中死掉了。”\n\n102、\n三个囚犯被送到了古拉格。他们开始谈论为什么他们会来到这里。\n“我来到这儿，是因为我上班总是迟到五分钟，他们指控我是在以怠工来破坏。”第一个说。\n“我来到这儿，是因为我上班总是早到五分钟，他们指控我是间谍”，第二个说。\n“我来到这儿，是因为我上班总是准时赶到，”第三个说，”他们指控我拥有一个西方制的手表。”\n\n103、\n一个美国人刚从莫斯科机场出来，他想打听一下时间。这时从身旁走过一位莫斯科人，手里拎着个沉重的箱子，很吃力的样子。美国人拦住了他，问他当地时间。莫斯科人放下箱子，抬手看了看表，一口气报出来现在的时间然后还有气压温度湿度等信息。美国人很吃惊，问道：这块表的功能可真多，是苏联的技术生产的吗？\n莫斯科人自豪地回答：是的，是我们苏联技术制造的。\n然后又吃力地重新拎起那个箱子接着说道：就是电池重了点。\n\n104、\n越战时期，河内物资奇缺，向苏联求救。\n苏联电：勒紧腰带。\n河内回电：请给腰带 。\n\n105、\n一位美国历史学家和一位俄罗斯历史学家，讨论谁领导二十世纪的前半世纪。\n“我投票赞成胡佛先生，”美国人说，“他尝试着教导我们美国人停止酗酒！”\n“那个没什么了不起！”俄国人接着说，“我选择斯大林，他尝试教我们俄国人不要吃饭。”\n\n106、\n一个年老的女演员想早一点获得国家演员的称号，人们就建议她入党。在入党仪式上人们问她怎么看共产主义。女演员说：所有东西都是充足的，不论是食品还是商品，还允许出国，总之，像在沙皇时代一样。\n\n107、\n问：为什么安德罗波夫，而后是契尔年柯在共产党会议上被一致推选？\n答：这是因为安德罗波夫的肾检验结果最差，契尔年柯的心电图最差。\n\n108、\n一个公民来参加契尔年柯的葬礼。有人向他要票，他答道：到这里来我用的是联票。\n\n109、\n在斯大林格勒更名为伏尔加格勒后，有另一个世界来了一封电报：”同意。约瑟夫•伏尔加”。\n\n110、\n列宁时代像是在隧道里，周围一片黑暗，只是在前面有光；在斯大林时代，像是在汽车里，一人领路，一半人在上坐着，另一半人在上颠簸；在赫鲁哓夫时代，就像在参观团里一样，一个人表演，其他人在笑；在勃列日涅夫时代，像看电影一样，大家都等着散场。\n\n111、\n问：为什么列宁穿皮鞋，斯大林穿靴子？\n答：列宁时代俄罗斯只脏到脚脖子。\n\n112、\n问：什么是全国的电气化？\n答：这就是共产主义减去苏维埃政权。\n问：听说苏联进军捷克斯洛伐克后，就会实现共产主义？是真的吗？\n答：是的，电气化在那里已经实现很多年了。\n\n113、\n问：从马克思主义的观点来看，什么是短缺？\n答：就是不被我们所感觉的客观现实。\n\n114、\n问：犹太人要入党要有什么条件？\n答：两个阿拉伯人的推荐。\n【苏联反犹主义盛行】\n\n115、\n拉宾诺维奇在战斗开始前声明：如果我死了，就追认我有党员吧！如果没死，就不用了。\n\n116、\n问：可以用收取的贿赂交党费吗？\n答：如果你是一个真正的共产党员，那就可以。\n\n117、\n上帝赐给人三种品质：忠诚，聪明，党性，但是任何一个人不会两种。\n因为人如果是聪明和真诚的，他就没有党性；如果他是忠诚和有党性的，他就不是聪明的；如果一个人聪明和有党性，那他就不是真诚的。\n\n118、\n问：在党的十二大上，关于住房问题有什么决议吗？\n答：增加列宁同志的住房面积。\n\n119、\n问：能光屁股坐在刺猬身上吗？\n答：可以，但只是在三种情况下：刺猬的刺被剃掉.是别人的屁股或者是党命令那样做。\n\n120、\n一个妇女在一个几家人合住的住宅的公用浴室里洗澡，而邻居站在走廊的一个小橙上通过门上的玻璃往里看，这个妇女发现后说道：看什么！没见过啊！邻居：我得看看，你是在用谁的肥皂！\n\n121、\n苏联一个桥梁专家访问罗马尼亚时被邀到自己罗马尼亚的同事家做客。客人夸奖主人的别墅非常豪华。主人把客人带到窗前：你见到了那座桥了吗？客人：看见了。主人：这就是原因所在！为了建造这座桥我节省了一些钱。\n过了一年，罗马尼亚工程师回访，他夸奖主人的别墅非常豪华，主人把客人带到窗前：你见到有桥了吗？罗马尼亚工程师：没见到。\n苏联桥梁专家：这就是原因所在！\n\n122、\n捷克人先是建造一个东西，剩下的偷光；而苏联人先是偷得差不多了，余下的用来建造。\n\n123、\n问：为什么在有苏联侨民的西方商店里会经常发生偷窃行为？\n答；这是因为他们的意识里有共产主义的残余。\n\n124、\n著名的俄罗斯歌唱家维尔京斯基，还是在沙皇时代离开俄罗斯的，这次，他又返回了俄罗斯，他带着两个手提箱从车箱里走出来，他放下皮箱，亲吻着大地，看着周围的人：俄罗斯啊，我都不认识你了！\n后来，他一看，皮箱不见了：俄罗斯啊，我认出你来了！\n\n125、\n问：什么国家最富？\n答：苏联。它已经被偷了五十多年了，但还没有被偷光。\n\n126、\n问：德国在马克思那里继承了什么？\n答：对于东德来说是共产党宣言，对于西德来说是资本主义。\n\n127、\n在苏兹达尔的考古发掘中发现了人们从来不知道的圣经的篇章：世界末日可以在单独的国家到来。\n\n128、\n勃列日涅夫问罗马教皇：为什么人们相信罗马天主教的天堂，而不相信共产主义的天堂？\n罗马教皇：这是因为我们的天堂从来没有让别人看到。\n\n129、\n一个乌克兰人被叫到克格勃，\n问：请你解释一下，你为什么经常有从以色列来的邮件？\n答：在战争时期，我曾藏匿过一个犹太人。\n问：你作为一个苏联的乌克兰人，怎么能收这些犹太姥的邮包！你也不为自己的将来着想。\n答：是，我想过，以后我还要藏中国人。\n\n130、\n问：听说在共产主义社会食品可通过电话订购，这是真的吗？\n答：但是发放的时候要通过电视机。\n\n131、\n请问，这就是共产主义，还是会更差劲？\n\n132、\n考古学家在挖掘一个石器时代的山洞，在入口处有一标语：万岁，奴隶制度，全人类的光明未来。\n\n133、\n问：听说在 1980 年在苏联会建成共产主义，这是真的吗？\n答：不，现在换成举办奥林匹克运动会。\n\n134、\n问：里海鳊是什么？\n答：这是鲸的一种，它能游到共产主义。如果游不到，说明它是反革命。\n\n135、\n问：怎么才能知道共产主义已经到来？\n答：将在广播和报纸上宣布。如果那时还剩电视的话，还会通过电视宣布。\n\n136、\n如果你是外交官，你可以一直在国外；\n如果你是科学家，你可以每年出一次国；\n如果你是运动员，你可以四年出一次国；\n如果你是军人，你要12年才能出一次国。（44年卫国战争反攻，56年波匈事件，68年布拉格之春，79年阿富汗）\n\n137、\n两个中学同学相遇然后寒暄。\n“您现在在哪工作”\n“中学老师.您呢?”\n“克格勃。”\n“啊，您在克格勃具体干什么？”\n“我们负责揪出那些对国家不满的家伙。”\n“您的意思是……还有人比较满意？”\n“哦，那些人不归我们管，负责管他们的是纪委。”\n\n138、\n一位年轻人在工作时抱怨道：“这种政府真差劲。”\n结果被一位秘密警察听到而遭逮捕。\n年轻人辩解说：“我根本没讲是哪个政府，你怎么可以随便逮捕我呢？”\n“你少骗人，”秘密警察咆哮道，“我在这里工作二十多年了，哪一个政府差劲我不会知道吗？”\n\n139、\n个美国人和一个苏联人被判下地狱。恶魔告诉他们：“你们有两个选择：美国式和苏联式的地狱。在美国式的地狱中，你们什么都可以做，但是每天早上必须吃一桶屎。而在苏联式的地狱中，也可以想干什么就干什么，不过每天早上得吃两桶屎。” \n美国佬马上选了美国式的地狱。而苏联人则最终选择了自己的祖国。一周后他们又相遇了，苏联人问：“你那如何？” \n美国人回答：“确实如恶魔说的那样。我的地狱还不错。就是每天一桶屎简直要我命。你那呢？” \n差不多和你那一样。就是搞不清楚我们那是屎尿遇见了短缺还是有人把桶都偷跑啦”\n\n140、\n勃列日涅夫发表广场演说，群众听见“……勃列日涅夫同志的逝世令我们非常难过……”，一片哗然。\n勃列日涅夫似乎发现了什么，把手伸进口袋摸了一下。\n“同志们，对不起，离开政治局的时候，我穿了安德罗波夫同志的西装。”\n\n141、\n克格勃审核\n“你爱你的太太吗？”主考官问。\n“是的。”\n“你爱你的国家吗？”主考官又问。\n“是的。”\n“那一个是你的最爱？”主考官问。\n“国家。”\n“好，我们将带你的老婆到这里，你拿这把枪到隔壁房去杀了她。”\n这男子到了隔壁房，没多久便传出６声枪响，接着又传出压碎声持续着数分钟；\n此男子带着松垮的领带走出房间，他将手枪放在桌上，主考官看着他\n并问：“发生什么事？”\n他说：“你给我的枪都装着空包弹，我只好勒死她。”\n\n142、\n赫鲁晓夫访问一所学校。他问一名学生：”你的父亲是谁？“ \n他回答说：”是共产主义！“ \n赫鲁晓夫很满意，他又问：”你的母亲是谁？“ \n他回答说：”是苏联！“ \n赫鲁晓夫又问：”你长大了想当什么？” \n学生说：“孤儿。”\n\n143、\n列宁表明该如何管理国家 \n斯大林表明该如何不管理国家 \n赫鲁晓夫试图表明谁都能管理国家 \n勃列日涅夫正在表明国家是根本不需要管理的\n\n144、\n1937年苏联当局征求诗人普希金的逝世百年纪念铜像设计， \n佳作有以下三件： \n站在高加索山上眺望远方的普希金， \n决斗时被子弹击中即将倒下的普希金， \n艺术女神替普希金戴上月桂冠。 \n但是，优胜作品是.... \n正在阅读普希金作品的斯大林同志。\n\n145、\n列车员叫醒一个靠着窗口睡着了的旅客:“同志，你的票子？” “票？什么票？我没有票子！” “没票？那你打算去哪里？” “我什么地方也不想去！” “那你为什么上这列火车？” “上车前，克格勃的同志们刚在大庭广众之下逮捕了一名间谍，大家都在看热闹，我也在看，后来其中一个领头的同志对着我叫到：‘没什么好看的，快上车坐好！’于是我只好走进车厢……” \n\n146、\n一个盲人在路上遇到了贝利亚同志。 “您好，贝利亚同志！”盲人抢先打招呼。 “怎么，您看得见我？”贝利亚同志心里很纳闷。 “不，贝利亚同志，那是因为给我引路的狗直往后退的缘故。”\n\n147、\n拉宾诺维奇出差，要到三个城市去，它们是：华沙，布拉格，还有巴黎。华沙和布拉格是苏联控制的。 到了华沙，他发给单位一封电报，写着：”自由的华沙万岁！拉宾诺维奇。“ 到了布拉格，他发给单位一封电报，写着：”自由的布拉格万岁！拉宾诺维奇。“到了巴黎，他又发给单位一封电报，写着：”巴黎万岁！自由的拉宾诺维奇。\n\n158、\n在一次记者招待会上，有以下问答：\n问：“今年诺贝尔奖获得者是谁？”\n答：“赫鲁晓夫。”\n问：“赫氏有何成就？”\n答：“他是第一个在西伯利亚播种，去加拿大收获的人。”\n\n159、\n有一次，著名的歌唱家科兹洛夫斯基得知斯大林很赏识他，便向斯大林提出一个请求：“我从来没有去过国外，所以我想……”\n“你不会出逃吧？”\n“瞧您说的，斯大林同志！对我来说，家乡的村庄比外国可要亲得多。”\n“不错，好样的！那你就回家乡去吧。” \n\n160、\n某日，戈尔巴乔夫召开国民大会:同道们!目前国内形势有些紧张，看大家谅解！一个工人站起曰：我们保证按时上班！戈尔巴乔夫大悦，继续说：再过些时日，大家会更紧张，也许会有人受饿！工人又说：我们可延长时间干！戈尔巴乔夫有些感动：随时间发展，大概会有失业现象。工人回答：没关系，我们将加班玩命的工作。戈热泪盈眶：谢谢，但是最后也许会有人饿死！工人大声说：我们２４小时连续工作，怎么样，总书记？！戈狂奔下主席台，牢牢握住该人的手，说：…我…我该该我该怎麽说呢，您从事何种职业。工人受宠若惊，面露难色说：我……我…我是火葬厂的！\n\n161、\n有一次，朱可夫从斯大林的办公室里出来时，怒气冲冲地说：“小胡子魔鬼!”正在接待室的贝利亚听到了这句话，他走进斯大林的办公试冬把这话告诉了斯大林。 斯大林让人把朱可夫叫了回来。“朱可夫同道，您从我办公室出往时说了一句‘小胡子魔鬼’，您是在说谁?”“希特勒!我还能说准呢？斯大林同道！”“贝利亚同道，而您又是在说谁呢?”\n\n\n162、\n“第三次世界大战会发生吗？”“不会！不过争取和平的努力会达到这样的程度：全世界都不会有一块石头保持完整！”\n\n163、\n假如鳄鱼吃了勃烈日涅夫会有什么结果？答案是：鳄鱼会连着屙一个星期的勋章。 \n\n164、\n勃列日涅夫的噩梦：\n捷克人坐在红场上吃犹太薄饼——用筷子。 \n\n165、\n戈尔巴乔夫在别墅与赖莎一起度假。早上，戈尔巴乔夫穿着条内裤走到阳台上呼吸新鲜空气。\n“亲爱的，回来穿上睡衣。”赖莎喊道。\n“赖莎，你是怎么隔着两间屋子看到我的？”\n“不，我在听自由欧洲电台。”\n\n166、\n一天晚间。完成了一天的工作，雅科夫·米哈伊洛维奇·斯维尔德洛夫来弗拉基米尔·列宁的书房小坐。\n“弗拉基米尔·伊里奇，我们要么开一瓶？”斯维尔德洛夫问。\n“不干。我绝不再这样了！”列宁断然拒绝，“绝不！”\n“得了吧，弗拉基米尔·伊里奇！就我们两个！……上次我们开了两瓶，什么也没发生啊？” \n“还什么都没发生呢！你和捷尔仁斯基回去睡觉去了，可我却爬到辆装甲车顶上，扯了一顿屁话……” \n\n167、\n苏联的家具厂生产一种新型号的床：“共产主义型号”。床能轻松塞下三个人，而床沿上则刻着标语：“列宁总与你同在！” \n\n168、\n一艘苏联货船被食人族海盗劫持，海盗准备把所有的海员吃掉。船长问道：\n“亲爱的食人族同志，你们有过集体化吗？”\n“没有！”\n“你们有过个人崇拜吗？”\n“没有！”\n“你们有过十月节吗？”\n“没有！”\n“好吧，那我就真的不能理解你们为什么这么残忍了……”\n\n169、\n勃列日涅夫在电视上对公众讲话：\n“近日在莫斯科有恶毒的流言说我的警卫开的车里不是我而是个假人。我必须得说这是相当肮脏的谎言！他们在给我开车，而不是假人！”\n\n170、\n勃列日涅夫在向工人们讲话：\n“很快我们就能生活得更好！”\n台下传来一个声音：\n“我们怎么办？” \n\n171、\n勃列日涅夫坐车在莫斯科街头闲逛，突然看到一座纪念碑。\n“这座纪念碑是谁的？”\n“契诃夫的，列昂尼德·伊里奇。”\n“哦，很好。我读过他的《姆姆》。”\n“抱歉，列昂尼德·伊里奇，《姆姆》不是契诃夫写的，而是屠格涅夫。”\n“哦，真的么？那这可真蠢。”勃列日涅夫评论道，“《姆姆》是屠格涅夫写的，可契诃夫却得到了纪念碑！”\n\n172、\n科学家联名要求赫鲁晓夫去领导一个癌症治疗所。赫鲁晓夫推脱道：“谢谢同志们的支持，但我对癌症一窍不通啊。”\n科学家们纷纷说道：“赫鲁晓夫同志，您只要应用一下您在农业问题上的经验就好了！您一负责，粮食就全不见了！” \n\n173、\n-为什么在斯大林的遗体被移出列宁墓后，陵墓的看守反而加倍了？\n-因为他们发现赫鲁晓夫曾经抱着铺盖卷在附近晃悠。\n\n174、\n塔斯社通讯：\n“……昨天在莫斯科发生了一起针对勃列日涅夫同志的失败暗杀事件。子弹穿透汽车的防弹玻璃，击中勃列日涅夫同志胸前的勋章，随后反弹并打死了司机。” \n\n175、\n科学家发明了一种电脑，能够计算出与共产主义的距离。在勃列日涅夫的监督下，科学家输入了所有的信息，计算机开始计算。一天、两天，三天……最终计算机得出了结果并打在了卡带上：18千米。\n科学家十分震惊。肯定是算错了！他们重来了一次，还是这个数字！\n学院的锅炉工突然懂了什么：\n“同志们，朋友们，数据没有错！勃列日涅夫同志告诉过我们，每一个五年计划都能让我们向共产主义迈进一步！”\n\n176、\n尼克松先生访问莫斯科，赫鲁晓夫带着他参观首都，尤其是各个新建住宅区。\n“那些是什么？”尼克松突然问道。\n“你什么意思啊？”赫鲁晓夫傲慢地反问，“电视机。”\n“好啊！”尼克松赞叹道，“你们不只已经赶上了我们，在一些地方甚至已经超过了我们。”\n“哪里？”赫鲁晓夫欣喜若狂。\n“比如说吧，我们从不在猪圈里安装电视机。” \n\n177、\n斯大林就要死了，他把赫鲁晓夫招来：\n“尼基塔·谢尔盖耶维奇，我知道你会继承我并超越我，”斯大林说，“我给你准备了两封信。如果你遇到了危机，就拆开第一封；如果再遇到，就拆开第二封。”\n赫鲁晓夫拿走了两封信。1956年，他遇到了匈牙利和苏伊士危机。于是赫鲁晓夫拆开了第一封信，上面写着：“都怪在我头上！”于是苏共二十大召开，斯大林主义终结了。\n1964年，赫鲁晓夫又碰上了勃列日涅夫和柯西金的政变，于是他拆开第二个，只见上面写着：\n“准备两封信。”\n\n178、\n问：能够用香蕉当指南针吗？\n答：可以。把香蕉放在柏林墙上，香蕉被从哪边抽走哪边就是东边。 \n\n179、\n“奶奶，列宁好吗？”\n“当然，孙子，他很好。”\n“斯大林呢？他坏吗？”\n“坏，当然坏。”\n“赫鲁晓夫呢？他怎么样？”\n“等他死了，我们就知道了。” \n\n180、\n党代会。斯大林发言：\n“今天我们有两个问题要讨论。第一，我们需要枪毙所有的政治局委员。第二，我们需要把列宁墓涂成亮绿色。”\n观众席中传来了一个怯怯的声音：\n“为什么涂成亮绿色？”\n“很好，我就知道大家对问题一没有不同意见。”\n\n181、\n在入党审批过程中有一个问题是：“你怎么看待苏联政府？”\n一人回答：“就像看待我妻子一样。”\n“怎么解释？”\n“第一，我爱她；第二，我怕她；第三，我想换一个。” \n\n182、\n在莫斯科红场，人们正排队参观列宁墓卫兵换岗。一个小孩问：\n“爸爸，为什么他们总是要看守这陵墓？”\n“他们不是一直说吗？”父亲答道，“列宁是永生的。如果他看不下去了决定出来怎么办？” \n\n183、\n斯大林招来著名作家肖洛霍夫。\n“我已经读了你的小说《新垦地》。写得非常好，我喜欢。我想，你为啥不写一篇文章，就叫《敌人不投降，就叫他灭亡》？”\n“我害怕我写不好，斯大林同志。最近我的健康状况不好。”\n“我们会帮你的。我们会把你送到格鲁吉亚去，那里有酒有葡萄。”\n“好吧，斯大林同志。那请让我和家人到个别。”\n“为什么？”\n“我怕我的文章不成功。”\n\n184、\n一个外国代表团突击访问了一个集体农庄。没时间准备。代表团走后，集体农庄主席拉过区党委书记说：\n“你们没提前告诉我，所以他们都看见了。牛栏的废墟，那些灰尘，我们的贫穷。”\n“别担心。”党书记说道。\n“不过他们现在就能传的满世界都知道啊。”\n“那就让他们沉浸在一贯的造谣中伤里吧。”党书记答道。 \n\n185、\n在格鲁吉亚共和国的学校中，老师正在让学生说说自己的父亲。\n“图拉什维里，说说你的父亲。”\n“我爸爸种橘子。他把它们带到莫斯科销售，赚了不少钱。”\n“你了，布里泽。”\n“我爸爸种月桂叶。他把它们带到莫斯科销售，赚了不少钱。”\n“你了，克里维泽。”\n“我爸爸在反贪污和投机倒把分局工作。每次布里泽和图拉什维里的爸爸去莫斯科的时候都回去看看我爸爸。因此他赚了不少钱。”\n“你了，查维查瓦泽。”\n“我爸爸是生物工程师。” \n全班大笑。\n“孩子们。”老师严肃地说，“不要把快乐建立在别人的悲伤之上。”\n\n186、\n全世界进行对关于大象的最佳书籍的评奖大赛。\n法国人递交了一册精装的《大象家庭内的三角恋研究》\n英国人提交了一套《大象与世界贸易》\n德国人提交了24卷本的一套《大象学综介》\n美国发放了一百万份传单，上面写着：“赢大象，不需购买。”\n苏联提交了三卷书，题目如下：\n《第1卷：大象在伟大的十月社会主义革的命中的作用》\n《第2卷：大象在世界上最进步的苏联社会的光芒中的快乐生活》\n《第3卷：苏联——大象的祖国》\n\n187、\n一个卫兵问政治犯：\n“刑期多久？”\n“十年。”\n“犯了什么罪？”\n“没犯罪。”\n“你撒谎！没犯罪他们只给判5年！” \n\n188、\n一个日本工人被派到俄罗斯维修日本产的机械。日本人每天工作8小时，不和别人说话。一个月后他的工作期满。在他返回日本之前，日本人眼含泪水地对大家说：“我道歉，我的好工人同志们。我知道工人们应该团结起来，但我有合同在身，我不得不工作，我为没有参与你们的长期罢的工而向你们正式道歉！” \n\n189、\n苏联人、法国人和美国人争论什么是最勇敢的人。\n美国人说：“举例来讲，我们有十辆汽车，其中一辆没有刹车。我们抽签，每人搭一辆开山路。最后我们中的一个人住院，另外九个去看他。”\n“这不算什么。”法国人说，“我们选10个女孩，其中有1个有艾滋病。我们抽签，一人找一个女孩。最后一个人住院，另外九个去看他。”\n苏联人说：“我们聚在公寓里，即便知道我们中有一个告密者。我们讲了一晚上政治笑话，然后九个人进了监狱，另外一个去看他们。”\n\n190、\n一个人把自己的车停在了莫斯科红场上。卫兵赶快跑来，向他怒吼：\n“你疯了么？这是政府所在地！”\n“没问题。”那人答道，“我的锁很结实。” \n\n191、\n一个妇女走进食品商店。\n“你们卖肉吗？”\n“没有。”\n“牛奶呢？”\n“我们这儿只处理肉，对面那家才是没有牛奶的。”\n\n192、\n在奥运会上，苏联掷铁饼（注：在英文中铁饼实为“锤子”，Hammer）选手打破了世界纪录。记者采访他问：\n“你是怎么把锤子抛的那么远的？”\n“如果再搭上个镰刀，我能扔出两倍远。” \n\n193、\n苏联社会七大谜题：\n1、总是没人工作，计划却总是完成；\n2、计划总是完成，可（商店）柜台总是空的；\n3、柜台总是空的，可却没人挨饿；\n4、没人挨饿，可所有人都不高兴；\n5、所有人都不高兴，可是没人抱怨；\n6、没人抱怨，可是监狱却人满为患。\n\n194、\n为了解决黄油短缺问题，政治局要求苏联科学家研究技术，把粪便做成黄油，并在十月革命周年纪念期间完成。在六个月的工作之后，政治局要求进展报告。科学家报告称他们实现了50%的成功。政治局要求解释，答复如下：\n“人们已经可以把它涂在面包上，但尚不会去吃。” \n\n195、\n一只兔子在街上狂奔。\n“你跑得这么快，慌什么？”熊问。\n“你不知道么？他们现在在逮捕所有的骆驼，还要阉割他们。”\n“可你是兔子不是骆驼啊。”\n“对，不过假设他们逮到你，在他们阉掉你之后你就能证明你不是骆驼了！” \n\n196、\n一个犹太人申请移民去以色列。据他说，他的哥哥在以色列病得很重，需要帮助。办公室的官员问他：\n“那为什么不让你的哥哥来这里，而要你亲自过去？”\n“我的哥哥是得了病，但还没有得精神病。”\n\n197、\n问：什么被允许，什么被禁止？\n答：在英国被允许的被允许，被禁止的被禁止；在美国不被禁止的都被允许；在德国不被允许的都被禁止；在法国什么都被允许，包括被禁止的；在苏联什么都被禁止，包括被允许的。 \n\n198、\n问：什么是最短的笑话？\n答：共产主义。 \n问：什么是最长的笑话？\n答：赫鲁晓夫在党代会上的讲话。 \n\n199、\n问：如果社会主义在格陵兰建成会怎样？\n答：首先，雪只有在有配给票时才会下，其次它只会被分配给克格勃军官和他们的家属。\n\n200、\n问：什么单词以R开头且没有结尾？\n答：重组（Reorganization）。 \n\n201、\n问：尼克松来莫斯科时，他和赫鲁晓夫绕克里姆林宫赛并跑了第一，我们该怎么报道？\n答：“在国际长跑比赛中，我们的第一书记同志获得了光荣的第二名，尼克松先生则为倒数第二。”\n\n202、\n-我的妻子已经在厨艺学校学了三年了。\n-哇，那她的厨艺一定很好咯？\n-没有，她们刚学习到苏共第二十次代表大会。 \n\n203、\n-爸，您能给我套车钥匙么？\n-好，别丢了，儿子，七年之后我们就会领到车！ \n\n204、\n-我想预定一辆小汽车。需要多久？\n-从今天开始正好十年。\n-上午还是下午？\n-有区别么？\n-那天上午我们还请了管子工。 \n\n205、\n监狱里两个囚犯正交流经验。\n“你是因为政治犯罪被捕的么？”\n“当然。我是个管子工，被党委员会叫去修下水管。我看了看，说，‘整个体系都该换换了’，于是我就被判了7年。”\n\n","source":"_drafts/冷笑话288则.md","raw":"---\ntitle: 冷笑话288则\ntags:\n---\n\n\n序曲\n\n一位内务人民委员部审判员结束一天的审判工作，回到办公室，突然独自大笑起来。\n对面办公桌的同事奇怪的问道：“有什么好笑的事吗？”\n“是啊，”审判员用手帕擦着笑出来的眼泪：“一个很好笑的笑话……”\n“哦？说来听听？”\n“你疯了吗？！我刚判了说这笑话的家伙五年苦役！”\n\n<!-- more -->\n\n1、\n内务人民委员部的一间牢房里关了三个人，彼此间谈起坐牢的原因。\n第一个人说：“我因为反对党委书记彼得罗夫。”\n第二个人说：“我因为支持彼得罗夫。”\n第三个人说：“我就是彼得罗夫。”\n\n2、\n美国外交代表团到苏联访问，苏修接待官员陪他们参观“建设的伟大成就”，并且得意的说：“到了下一个五年计划，每个苏联家庭都可以拥有一架私人飞机！”\n美国人惊讶的问：“ 他们要飞机干什么呢？”\n苏修官员说：“当然有用啊……譬如你在莫斯科听说列宁格勒开始供应面包了，你可以马上开飞机赶去排队啊。”\n\n3、\n一位公民打电话到基辅电台问主持人：“共产主义到底是艺术还是科学？”\n主持人说 ：“我也不清楚，但我肯定不是科学”\n“为什么？”\n“如果是科学的话，他们应该拿狗做试验。”\n\n4、\n苏修穷兵黩武，军中物质紧缺。\n军需处长在一名下士的陪同下到兵营视察物质供应情况。他们走到油料库附近，在地上发现一个烟头。军需处长不满的说：“这是谁的烟头？！”\n下士看了看四周，欣喜的说：“看来谁的也不是，上校同志，赶快拣起来吧！”\n\n5、\n苏联领袖被邀请到法国巴黎访问。法国官员带他到处看看，他对国防总部、巴黎地下铁、凯旋门、国画馆、高速公路网和闻名世界的TGV快铁都不感兴趣。当法国官员带他到巴黎艾菲尔铁塔前时，他忽然对铁塔很感兴趣。他对法国官员问道：“啊哈！巴黎是不是有九百万人口？”\n法国官员：“您说的一点都不错。”\n领袖洋洋得意道：“哈哈，终于找到了，原来你们巴黎九百万人共享一台钟塔！”\n\n6、\n地狱有个规矩，谁在人间害了人，被害人的血将淹此人。\n一次上帝去地狱视察，发现血只浸到贝利亚的腿。上帝就很奇怪，问到：“你杀了这么多人，怎么血只及腿呢？”\n贝利亚答道：“因为我站在伟大领袖斯大林的肩上！”\n【贝利亚：苏联秘密警察首脑】\n7、\n赫鲁晓夫到处作报告，一天，他去某疯人院作报告，事先该疯人院负责人把疯子召集起来叮嘱：“在赫同志作完报告后要热烈鼓掌”。赫作完报告后果然博得了长时间经久不息的掌声，赫非常得意。但他突然发现，其中有一个人没有鼓掌，他顿时大发雷霆。赫问：“ 你为什么不鼓掌？”此人答曰：“我的疯病已经治好了。”\n\n8、\n斯大林、赫鲁晓夫和勃列日涅夫乘坐火车出门。开着开着，火车突然停了。\n斯大林把头伸出车窗外，怒吼道：“枪毙火车司机！”可是车还是没有动。\n接着赫鲁晓夫说：“给火车司机恢复名誉！”车仍然没有动。\n勃列日涅夫说：“同志们，不如拉上窗帘，坐在座位上自己摇动身体，做出列车还在前进的样子……”\n\n9、\n苏联的一次大会上，主持人突然说：下面请认为社会主义好的同志坐到会场的左边，认为资本主义好的同志坐到会场右边。大部分人坐到了左边，少数人坐到右边，只有一个人还坐在中间不动。\n主持人：那位同志，你到底认为社会主义好还是资本主义好？\n回答：我 认为社会主义好，但是我的生活像是资本主义。\n主持人慌忙说：那请您赶快坐到主席台上来。\n\n10、\n列宁快去世了，叫赶快把继承人斯大林召进克里姆林宫来，临终有几句话要嘱托：“不瞒你说，我还有一个隐忧啊，斯大林。”\n“说吧，亲爱的伊里奇。”斯大林专心地听着。\n“ 那就是，人们会跟你走吗？不知你想过了没有？”\n“他们一定会跟我走的。”斯大林强调说，“一定会！”\n“但愿如此。”列宁说，“我只是担心，万一他们不跟你走，你怎么办？”\n“那只好让他们跟你走！”\n\n11、\n社会主义者、资本主义者、共产主义者商定要见一面。社会主义者过了约会的时间才到。\n——“对不起，我去排队买香肠来着。”\n——“什么是排队？”资本主义者问。\n——“什么是香肠？”共产主义者问。\n\n12、\n数学和科学社会主义有什么区别？\n在数学上，如果给出什么东西，都需要证明，而科学社会主义什么都能证明，就是什么也不能提供。\n\n13、\n马克思想在苏联发表广播演说。勃列日涅夫对他说：“虽然您是奠基人，但是我一个人不敢决定那么重大的问题。我们是集体领导。”\n“我只想说一句话！”\n最后，勃列日涅夫只允许他说一句话，并且要他自己负责。马克思凑近话筒，大声说道：\n“全世界的无产者，请原谅我！”\n**有的版本还有一个补充的结尾：\n列宁看到苏联现在建设的社会主义，说：看来我要回到瑞士去，以便重头开始“\n\n14、\n有个人向赫鲁晓夫汇报说：“现在大剧院正上演一个剧，里面有您出现，每当您一出场，下面就热烈鼓掌。”赫鲁晓夫听了以后非常得意。有一天他买了一张普通票，去看这个剧，他陷入了沉思，忘记了鼓掌，这时旁边有人推了他一把，紧张地说：“哎！你为什么不鼓掌？不要命啦？！”\n\n15、\n在苏共二十三次代表大会上，勃列日涅夫作报告，他问：“我们这里有没有敌人？”一个人回答：“有一个，他坐在第四排第十八号位子上。”勃问：“为什么他是敌人？”回答：“列宁说过敌人是不会打瞌睡的，我发现全场只有他一个人没有打瞌睡！”\n\n16、\n演讲人在做关于五年计划成就的报告：在列宁格勒新建了一个电站。\n大厅里有人说：“我刚从那回来，那没有什么电站。”\n演讲者没有回答，继续说：“在斯大林格勒已建成了一个化学厂。”\n大厅里有人说： “一周前我在那里，那里没有什么化学厂。”\n演讲人：“同志们，你们最好少东游西逛的，要多看一些报纸！比如《真理报》！” \n\n17、\n斯大林在大会上引经据典地说：“马克思和列宁说1+1=2，而托洛茨基和布哈林说1+1不等于3。是托洛茨基和布哈林说的对呢？还是马克思和列宁说得对呢？”下面听众一脸疑惑，“毫无疑问，是马克思和列宁说的对！”底下热烈鼓掌，“托洛茨基和布哈林是帝国主义派来的间谍，说1+1不等于3的人罪不容赦……”\n\n18、\n集体农庄庄员伊万在河里捉到一条大鱼，高兴的回到家里和老婆说：“看，我们有炸鱼吃了！”\n“没有油啊。”\n“那就煮！”\n“没锅。”\n“烤鱼！”\n“没柴。”\n伊万气死了，走到河边把鱼扔了回去。那鱼在水里划了一个半圆，上身出水，举起右鳍激动地高呼：“斯大林万岁！”\n\n\n19、\n“瑞典能否建立共产主义”？\n“不能。”\n“为何？”\n“列宁同志说了：共产主义不在山那边。”\n\n\n20、\n美术馆里有一幅描写亚当和夏娃的画。\n一个英国人看了，说：“他们一定是英国人，男士有好吃的东西就和女士分享。”\n一个法国人看了，说：“他们一定是法国人，情侣裸体散步。”\n一个苏联人看了，说：“他们一定是苏联人，他们没有衣服，吃得很少，却还以为自己在天堂！\n\n21、\n一老者人行道闲溜，不慎落入道旁河中。随高呼救命！\n两警察闻之，视若不见，仍边走边谈笑如旧。\n老者情急生智，随又高呼“打倒勃列日涅夫”！两警察闻之大惊，随急速跳入河中，将老者拖上岸来铐之。\n\n\n22、\n某日苏联举行国庆游行，沿着大街开来了炮兵、机械化步兵、坦克、自行火炮、战术导弹、战略核导弹，破坏力一个比一个大；队列末尾却是两个带公文包的矮子。\n在看台上勃列日涅夫惊讶地说：“这两个人破坏力比核导弹还大！他们是什么人？”\n克格勃头子说：“不是我的人。”\n国防部长说：“没见过他们。”\n苏联总理说：“他们是国家计委的……”\n【计委：计划经济委员会/纪委：纪律检查委员会】\n\n23、\n勃列日涅夫,杜布切克(捷克总书记),英国首相和美国总统,4人乘坐气球.\n气球漏气了,抬不动4人,开始下坠,万分危机,必须有人牺牲自己跳出.\n先是美国总统喊了声\"为了自由世界!\",然后跳了出去.气球下坠暂缓,但过一会儿漏气更多,下坠又加快,必须再跳出1人.\n于是英国首相喊:\"为了女王陛下!\",跳了出去.\n暂缓一会儿又不行了,于是勃列日涅夫喊道:\"为了社会主义大家庭!\"说着就把杜布切克扔出去了.\n\n\n24、\n一个莫斯科市民的鹦鹉丢了。这是只会骂人的鹦鹉，要是落到克格勃的手里可糟了。这人便在报纸上发表了一篇声明：“本人遗失鹦鹉一只，另外，本人不同意它的政治观点。”\n\n\n25、\n一个英国人,一个法国人,一个苏联人谈论什么是世界上最幸福的事\n英国人：最幸福的事情就是冬天晚上回家，穿着羊毛裤坐在壁炉前面。\n法国人：你们英国人就是古板，最幸福的事情是和一个金发女郎一起去地中海度假，然后我们好和好散。\n苏联人：最幸福的事情就是半夜有警察敲门，开门后：伊万，你被捕了。\n…：你弄错了，伊万在隔壁。\n\n\n26、\n话说勃烈日涅夫同志当上苏共中央总书记之后，将在乡下的老母亲接到了莫斯科。老太太来了以后，勃列日涅夫得意洋洋地向老妈展示了一番自己的豪华别墅、高级汽车、名贵家具等等，展示完了后，勃列日涅夫问老太太这一切如何？老太太说：“儿子啊，这一切都很好，但是，共产党来了你怎么办？”\n\n\n27、\n勃列日涅夫和美国总统卡特在瑞士开会，休息时间两个人很无聊，就开始比谁的保镖更忠诚。卡特先来，他把自己的保镖叫进来，推开窗（外面是20层楼）说： “约翰，从这里跳下去！”约翰哭着说：“你怎么能这样呢，总统先生，我还有老婆孩子呐。”卡特被感动了，流着泪说是自己不对，叫约翰走了，然后抡到勃列日涅夫，他也大声叫自己的保镖伊万。“伊万，从这里跳下去！”伊万二话不说就要往下跳，卡特一把抱住他说：“你疯了？跳下去会死的！”伊万一边挣扎着要跳下去一边说：“放开我，混蛋，我还有老婆孩子呐。”\n\n\n28、\n列宁的夫人曾经当面指出斯大林的专制独裁统治，令后者气急败坏，斯大林说：“你再说，我就宣布你不是列宁的妻子！\n\n\n29、\n古巴举行盛大五一节游行，卡斯特罗率党和国家领导人全体出席，检阅游行队伍。就在游行队伍通过主席台的时候，卡斯特罗同志突然发现人群中有一个人掏出一块新手帕擦了擦鼻子，于是他马上对身边的一位政治局委员道：“我敢打赌，这个拿手帕擦鼻子的人里面没穿内裤！”委员不以为然，难道卡斯特罗同志真长了透视眼不成？他马上命令警卫把那个人叫道跟前，亲自询问，吃惊地发现，这人长裤里面果然是光着的。委员敬佩地问领袖：“卡斯特罗同志，您是如何知道透过外衣看见他没穿内裤的？”卡斯特罗回答：“我看见他掏出了新手帕，他的布票显然没用来买内裤嘛。”众人大惊，无不佩服领袖超凡的洞察力……\n\n30、\n美国人登月成功后,勃列日涅夫当天就打电话给苏联宇航员：“鉴于美国人已经在月球上登陆，现在苏联决定，马上派你们去太阳登陆”。宇航员大惊，哽咽道： “您不知道吗，勃列日涅夫同志，我们会被烧死的”。勃列日捏夫生气地说：“你以为政治局没有考虑过吗？我们已经决定，派你们在晚上在太阳登陆！”\n\n31、\n一个美国代表团要访问一个苏联的工厂，当局就预先教工人要怎样回答代表团的提问。代表团来后问一个老工人你每月的工资是多少，老工人回答有3000卢布；代表团又问他有多少存款，他回答有10万卢布；代表团问：你存了这么多钱准备干什么呢？老工人回答说：“我准备买一双靴子。”\n\n32、\n二战结束后一个波兰农村老太看到街上贴着的照片就说像自己的外甥\n别人训斥她：瞎说什么，这是斯大林同志\n老太：他是干什么的？\n答：他赶跑了纳粹\n老太急切地问：他能不能把俄国人也赶跑啊？\n\n33、\n老师在莫斯科街上碰到以前的学生斯基洛夫（已经当了克格勃）。\n老师说：现在的学生学习可真不象话，上课时我问他们《叶甫盖尼·奥涅金》是谁写的，他们居然没人回答；逐个问，居然都说“不是我写的”\n斯基洛夫：这是一个问题，这件事交给我吧\n过了一周，斯基洛夫兴致勃勃地找到老师：我审了他们几天，事情解决了；伊万那小子招了，是他写的\n老师：…………\n【《叶甫盖尼·奥涅金》：普希金的著名作品】\n34、\n去买报纸，要一份《真理报》。报贩回答：《真理》没有了，只有《消息》。 \n\n35、\n苏联赫鲁晓夫访问美国，美国总统送一最新高科技电话，曰，上可打天堂，下可打地狱，中可打人间，乃美国最新高科技产品。\n赫鲁晓夫回国后，一日想起，拿起电话拔通天堂。“喂，你好，请帮我转列宁同志。”“请稍侯...”电话那边接线生答道，“对不起，查无此人，请查清号码再拔”\n老赫一想，莫非导师不在天堂，在地狱？于是拨到地狱。“喂，你好，请帮我转列宁同志。”“请稍侯...列宁同志在线，现在就帮您转过去”\n老赫于是将最近几十年的革命形势和国际斗争局势一五一十地向导师作了汇报，并听取了导师的指导。\n月底，电话费清单寄来，老赫一看大惊！打到天堂的问询电话不过1分钟却收费100美元，打到地狱的1个多小时汇报和批示，却才1美元。大惑不解，遂电话问询美国总统－－这是为何？\n美国总统在大洋彼岸答曰：“事情是这样的，你们苏联打电话到天堂是长途，打电话到地狱却是市话，所以...”\n\n36、\n一日，某君站在柜台前观看。一大脑标价50万美元，某君定睛一看，克林顿大脑。心下叹服，果然是美国总统，不同凡响。再看，另一大脑标价100万美元，乃爱因斯坦大脑，某君再叹，果然是天才天价，值！\n还看，见一大脑标价200万美元，是朝鲜某相国大脑。某君大惑不解，问售货小姐何故。\n小姐从容答道，小克老爱大脑虽好，却是用旧的二手货。此相国大脑却是全新，从未用过，故此价值200万！\n\n37、\n赫鲁雪夫和肯尼迪交谈，各自吹嘘，肯尼迪说：“美国医学发达，有种药片死人吃了可以复活。”赫鲁雪夫说：“苏联体育发达，有人十分钟可以从莫斯科跑到美国。”肯尼迪要求兑现，赫鲁雪夫慌了手脚，召集文武大臣商量对策，有人出了个好计策说：“这很好办，你先让肯尼迪把药片拿来，让斯大林吃了，那斯大林一定复活，那么你用不了五分钟就可以从苏联跑到美国。”\n\n38、\n赫鲁晓夫在苏共二十大揭露斯大林的暴行时，台下有人递条子上去。\n赫鲁晓夫当场宣读了条子的内容：“赫鲁晓夫同志，当时你在干什么？”。\n然后问道：“这是谁写的，请站出来！”。\n连问三次，台下一直没有人站出来。\n于是赫鲁晓夫说：“现在让我来回答你吧，当时我就坐在你的位置上。”\n\n39、\n叶利钦、克林顿和金2，在森林里散步，遇到一只恶狼。\n狼拦住小克说，俺要吃你。小克慌道，狼啊狼啊，别吃俺，俺给你美元。狼一想，也行。\n于是走到老叶跟前说，俺要吃你。老叶忙说，俺俄罗斯虽没钱，但俺有美女，给你美女，放俺一马。狼一想，也行罢。\n狼这回到了金2跟前，说，俺要吃你。\n金2的拍大腿，说，俺不怕你！\n狼吃惊道，小克老叶都怕俺，你为何不怕？金2说，俺不怕你，因为俺身后有200万朝鲜痨冻党员，所以俺不怕你。\n狼卟通一声跪下，声泪俱下说：“总书记啊，俺终于找到组织了！\n\n40、\n勃列日涅夫即将访问波兰，波兰当局命令一位著名画家创作一幅名为《勃列日涅夫在波兰》的大型油画作为献礼。很不情愿的画家在威逼下接受了工作。画完成后，波兰一高官前来验收，结果让他大吃一惊：画面上是一男一女在豪华的大床上极尽缠绵，窗外的风景是克里姆林宫。“这是什么？这女的是谁？！”高官愤怒的问。“勃列日涅夫的夫人。”画家答道。“男的呢？！”“勃列日涅夫的秘书。”“可勃列日涅夫同志在哪里？”“勃列日涅夫在波兰。”画家答道。\n\n41、\n苏联领导人坐火车旅行。铁轨到了尽头，火车停下。\n列宁号召：“立即发动无产者搞星期六义务劳动，修铁路，直通共产主义！”\n斯大林抽着烟斗，严肃地下令：“给我调100万劳改犯来，修不通铁路，统统枪毙。”\n赫鲁晓夫敲着皮鞋喊：“把后面的铁路接到前面去，火车继续开！”\n勃列日涅夫挥舞着双手说：“坐在座位上自己摇动身体，做出列车还在前进的样子。”\n最后，戈尔巴乔夫沉思道：“把火车拆了，到有铁轨的地方再拼装起来。”\n于是苏联解体了。\n\n\n42、\n幼儿园.小女孩写了首小诗朗诵起来:\n我家有只大花猫,生下三个猫宝宝,猫眯个儿还没长,喵喵喵喵都入党...\n园长大喜,夸奖一番:党委下来检查,乖乖你就上吧...\n检查团来了,小孩朗诵道:\n我家有只大花猫,生下三个猫宝宝,猫眯个儿还没长,喵喵两个都入党...\n园长低声提醒:三个,不是两个...\n小孩委屈道:可是...可是另一只已经睁眼了...\n\n43、\n老布什、戈尔巴乔夫、和邓小平各开一辆车，到了一十字路口，上面有两个路牌：东---〉社会主义；西----〉资本主义，布什连看都不看一拐就走西边去，戈尔巴乔夫到了，左想右想，犹豫了一会还是向西拐了。最后是邓小平，只见他手脚麻利地把两个牌子互换了一下，向着“社会主义”方向前进了。 \n\n44、\n一个苏联人准备移民去美国，上级知道了很不高兴。于是组织了一个委员会给他做思想工作，领导说：“同志，你为什么要去美国？是因为不满意没有好吃的？” “不是。”“是因为不满意住房条件太差？”“不是。”“是因为不满意工资水准太低？”“不是。”“那我们不明白了，你没有什么不满意的，为什么要去美国？”“因为在美国，我可以有不满意。”\n\n45、\n美国宇航员和苏联宇航员同时登上了月球。苏联宇航员宣布月球属于苏维埃政权，美国宇航员得到来自休斯敦的命令：“不要与苏联人发生冲突”。于是，美国宇航员眼睁睁看着苏联人把整个月球漆成红色然后扬长而去。这时，他们得到了来自休斯敦的指令：“ 在上面写上白色的COCA COLA。”\n\n46、\n克里姆林宫，勃列日涅夫拿起通往埃及总统府的电话：“我是勃列日涅夫，我要和萨达特总统的遗孀讲话！”\n“遗孀？ 萨达特总统可一直都活着呀？”电话另一端传来惊讶的声音。\n老勃放下电话，冲身旁的克格勃头子大喊：“混蛋！为什么把原订的行动时间推迟了？”\n\n47、\n一位莫斯科市民在公交车上：“您好同志，请问您是克格勃吗？”\n“不是。”\n“那您的家人或直系亲属有在克格勃工作吗？”\n“没有。”\n“那您有朋友在克格勃吗？”\n“没有。”\n“那您把脚拿开好吗，您踩到我脚了”\n\n48、\n勃列日涅夫执政时期，政局混乱\n有个人骂了句勃列日涅夫是傻子，结果无期了\n本来他只要判两年，结果法官说他泄露了国家机密，就无期了\n\n49、\n对苏联知识分子来说有五个规则：\n什么都别去思考；\n如果你一定要思考，不要说出来；\n如果你又要思考又要说，那就别写出来；\n如果你又思考又说还写，那么别签名；\n如果以上规则你都不遵守，那你就别感到吃惊\n\n50、\n斯大林在办公室发现了老鼠。他跟加里宁省主席抱怨这事，后者想了一会说：“你干嘛不立个牌子上面写着：‘集体农庄’？这样一半老鼠会饿死，另一半则会跑掉”\n\n51、\n伊万诺维奇入党。这以前他必须经过党委会面试\n伊万诺维奇同志，你抽烟吗？”\n“时不时抽一些”\n“你知道列宁同志不抽烟而且号召其他同志也不抽烟吗？”\n“既然列宁同志这样说，我会戒烟的”\n“你喝酒吗？”\n“喝一点”\n“列宁同志强烈反对酗酒”\n“那么我会戒酒的”\n伊万诺维奇同志，你对女人怎么看？”\n“有一点。。。。”\n“你知道列宁同志强烈谴责不道德行为吗？”\n“既然列宁同志这么看，那么我不会再爱女人啦”\n“IVANOV同志，你随时准备着为党作出牺牲吗？”\n“当然。谁愿意这么活着？（WHO NEEDS SUCH LIFE？）”\n\n52、\n“将军的儿子能成为元帅吗？”\n“不可能。元帅都有儿子”\n\n53、\n勃列日涅夫访问印度时，大批印度人到机场欢迎勃列日涅夫。勃列日涅夫便问当时的印度总理英甘地，你是用什么办法让这么多人来欢迎我的？英甘地回答：凡是来欢迎你的人，都能够得到5个卢比（印度货币）的奖励。\n后来英甘地到苏联访问时，成千上万的苏联人从机场到莫斯科市内的道路上夹道欢迎。英甘地问勃列日涅夫：你是用什么办法让这么多人来欢迎我的？勃列日涅夫回答：凡是不来欢迎你的莫斯科人，每人罚款5卢布（苏联的货币）\n\n54、\n戈尔巴乔夫视察一个集体农场，农场书记抱怨说：这里所有的小猪都长得不错，唯有一只总是病歪歪的。戈尔巴乔夫一听说到：交给我吧，同志。戈尔巴乔夫带回小猪弄了一周眼看不行了小猪要死掉了，于是大清早把小猪放在婴儿车里要丢掉，不巧碰上了米高扬，米高扬笑着说：总书记同志，这么早就出来啦！戈尔巴乔夫神色慌张的说：哦，可不是嘛，我的小孙子闹得不行，带出来透透气。米高扬走到婴儿车前看了一眼说：哦，多好的孩子，长的真像他爷爷！\n\n\n55、\n亚历山大、凯撤、拿破仑做为贵宾，参加红场阅兵。\n——我要是有苏联的坦克，我将是战无不胜的！亚历山大说。\n——我要是有苏联的飞机，我将征服全世界！凯撤说。\n——我要是有真理报，世界现在也不会知道滑铁卢！拿破仑说。\n\n56、\n“苏联和英国的童话传说有什么不同？”\n“英国童话的开头通常是：‘很久很久以前……’而我们的则是；‘不远了，不远了……\n\n57、\n斯大林做报告说：……共产主义已经出现在苏联的地平线上了……\n老工人不知道什么是地平线，回家后问儿子，儿子说：地平线就是能看到却永远走不到的一条线。\n\n58、\n——社会主义制度的优越性在哪里？\n——成功地克服了在其它社会制度里不会存在的困难。\n\n59、\n——拉宾诺维奇，你经常读报纸吗？\n——当然，要不我怎么知道我们过着幸福的生活？\n\n\n60、\n一天戈尔巴乔夫到一个农场视察，看到有几头猪，就到猪旁边拍了一张照片。\n随行人员在照片上写上：戈尔巴乔夫和猪在一起，但又感到不妥。于是改成：猪和戈尔巴乔夫在一起，可还是感觉不对。最后把照片上的字改成：“左起第三位是戈尔巴乔夫”。\n\n61、\n苏联邮政发行历届领导人纪念邮票， 发行没1个月，邮政宣布紧急停止使用该邮票。\n理由是：寄信人不知道往哪面吐唾沫。\n\n\n62、\n朝鲜：嗯，大哥，我想做个核试验。\n中国：什么时候?\n朝鲜：10\n中国：10什么？10个月？还是10天?\n朝鲜：9，8，7......\n中国：你大爷的！\n\n63、\n一个美国人和苏联人比赛言论自由.美国人说：“我可以在白宫门前高喊‘打倒美帝国主义’。警察绝对不会抓我。”\n苏联人很不服气，说：“这有什么。我也可以在克林姆林宫门前高喊‘打倒美帝国主义’，警察也绝对不会抓我。”\n\n64、\n在集体农庄党的会议上将研究两个问题：建造木棚和建设共产主义。在没有木板的情况下，直接研究第二个问题。\n\n65、\n“同志，你对这个问题有什么意见吗？”党支书问道。 \n“对，我是有意见，但我不同意我的意见！”\n\n67、\n工人说:我们已经是共产主义了\n有人问:为什么?\n工人说:我们实现了各尽所能,各取所需的分配原则.\n什么?那人又问\n工人说:你没见我们的领导各取所需,工人各尽所能!\n\n68、\n“在苏联是否可以存在两党制？” \n“不，不可能，因为我们养不起。” \n\n69、\n——什么在苏联是最常见的？ \n——暂时的困难。\n\n70、\n苏联时期莫斯科卢比扬卡（克格勃总部）大楼外。 \n一个愁眉苦脸的男子一边走路一边自言自语：肥皂没有，电池没有，袜子也没有。……\n这时旁边走过来一个看起来象是便衣的人小声对他说：公民同志，您要是再这样诋毁我们伟大的社会z主义国家，我就要拿手枪把敲你的脑袋了！ \n那个男子看看便衣警察，继续自言自语：看看，连子弹也没有……\n\n71、\n在调查表上有这样一个问题：在执行总路线时你动摇过吗？ \n拉宾诺维奇回答道：“我和总路线一起动摇。”\n\n72、\n——共产主义还有会货币吗？ \n——南斯拉夫的修正主义者说会有，中国的教条主义者说没有，我们是辩证地看待这个问题：有，但不是所有人都有。\n\n73、\n拉宾诺维奇到资本主义国家出差，在那里，他给单位拍了一个电报：“我选择了自由。”这事发生后，单位马上召集了党代会谴责拉宾诺维奇，并要做出组织结论。在会议中间，拉宾诺维奇突然走进了会场！全场哑然。 \n拉宾诺维奇说道：“我非常感兴趣，你们是怎样理解自由的。”\n\n74、\n——苏联人第六感的什么方面最发达？ \n——高度的满足感。 \n\n75、\n——为什么我们执行总路线那么慢 ? \n——因为每次党代会转的弯太大。\n\n76、\n——有 40 颗牙4条腿的是什么东西？ \n——鳄鱼。 \n——有4颗牙40 条腿的是什么东西？ \n——政治局 \n\n77、\n“假设你在酒吧里，而一个陌生人坐到你的身边并开始唉声叹气，你该怎么做\n“立即去阻止这种反苏宣传” \n\n78、\n“共产主义实现时警察还存在吗？” \n“当然不。那时候所有公民都已经学会自己逮捕自己”\n\n79、\n一个苏联人家中总是被偷，于是很郁闷的问邻居：“什么时候我们家的东西才能不被偷？” \n邻居：“等到了共产主义社会就不被偷了。” \n“为什么？” \n“因为在社会主义阶段就已经被偷光了。\n\n80、\n苏联特工对美国特工夸口道：“我们知道你们国家所有核导弹发射井的位置。” \n美国特工说：“那又有什么，我们知道你们未来20年全体政治局委员名单。”\n\n81、\n亞美尼亞電台播放著機智問答說： \n「雞和蛋哪一個先有？」 \n解答者在一旁暗暗地答道：「從前兩者都有。」\n\n82、\n一对夫妇生了一个孩子，如果长得像父母，那就是按反动的基因学说生出来的，如果长得像他们的邻居，那就是按照李森科的革命的环境决定学说生出来的。\n\n83、\n戈尔巴乔夫颁布限酒令后，想要买到酒只能在指定销售处排长队来买。 \n一个莫斯科人排队排烦了，就嚷道：“我要到克林姆林宫把戈尔巴乔夫干掉。”然后转身离去。 \n一会儿他有回来了，旁边人问他：“已经干掉了吗？” \n他说：“干什么干啊！那里的队比这里还长。”\n\n84、\n“可能在美国建成共产主义吗？” \n“可能的。但是那样的话我们到哪里买粮食？”\n\n85、\n“下次选举的结果会是怎样的？” \n“没有人知道。有人从中央委员会那里偷走了下次选举的确切结果\n\n86、\n“为什么有人说匈牙利人喜欢苏联人而讨厌美国人？” \n“因为苏联人帮助匈牙利人摆脱了一次专制，而美国人没有解决另外一个”\n\n87、\n拉宾诺维奇在克里姆林宫里工作，他待在塔楼前望着远方，以便在共产主义到来时及时发出信号。美国人想要引诱他为他们工作，让它在经济危机到来时发出警告。拉宾诺维奇回答说： \n——不，我需要一个固定的工作。\n\n88、\n美国百万富翁买下苏联国家百货商场，并宜布要免费分发商品。 \n很快百货商店和通向这里的道路就开始堵塞，并有许多因拥挤而死伤的人。人们问百万富翁问：　 \n——你为什么要这样做？ \n——我非常感兴趣，当你们实行按需分配时会是什么样子。\n\n89、\n——为什么共产党员不能接受圣经？ \n——根据圣经，先有混乱，然后根据上帝的计划引入秩序。共产主义的经验告诉我们，先有秩序，然后混乱就会到来\n\n90、\n——是什么原因决定了我们能在西方国家买那么多小麦？ \n——要知道资本主义的最大缺点就是生产过剩。\n\n91、\n一个年轻的东德共产党员向他的首长提出了一个请求：他想得到移民西德的许可 \n“为什么你竟然会想离开社会主义天堂，小同志？” \n“首长，我有一个主要的原因和一个次要的原因。次要原因是我知道我们党已经在民主德国建立了一个天堂，而我害怕这个天堂不能延续很久” \n“别担心！孩子，这里将永远是天堂” \n“那，好吧，首长，这就是我说的主要原因了”\n\n92、\n五一劳动节游行中，一个非常老的犹太人举着一个标语：“为了我快乐的童年时代，谢谢你，斯大林同志” \n党代表找到他：“那是什么 ？你在嘲弄我党吗？谁都可以看出，当年还是孩子的时候，斯大林同志还没有出生” \n“确切的说，那就是我感谢他的原因”\n\n93、\n“美国的摩天楼真是全世界最高的吗？” \n“是的。但是苏联制造的晶体管是全世界最大的” \n\n94、\n“如果我们放开西部边界管制的话，我们应该做什么？” \n“立即跑到西伯利亚以避免被踩死” \n\n95、\n“为什么那个枪击政府豪华轿车的家伙会在红场打偏子弹？” \n“因为刚巧挨着他的公民们拼命抢那把枪并叫着：‘让我来射击！’\n\n96、\n“为什么我国政府不急着登月？” \n“如果宇航员拒绝回来怎么办？”\n\n97、\n“为什么巡警总是三人一队？” \n“这是专门的安排。一个会阅读，一个会写字，自然第三个要随时监视这两个知识分子”\n\n98、\n有人通过走关系，把列宁同志送到了天堂，这个无神论者被接纳了。\n过了几天，这人给上帝打电话表示感谢，电话接通了，他说：你是上帝吗?\n上帝回答：首先，没有上帝。其次，我们这里每个人都是同志。第三，有事请直说，我还要参加党代表会议。\n\n99、\n大西洋上某处，苏联和美国核潜艇碰巧在一处上浮出水。　\n苏联潜艇的船员在甲板上没秩序地站着队，半醉的舰长生气地吼道：谁把靴子扔到控制台上去啦？我再问一遍：谁他妈把靴子扔到控制台上去啦？\n刚好美国潜艇甲板上的舰长听见了，与苏联舰长相比，他不仅刮了胡子而且精神抖擞。而他的手下更是秩序井然。\n显然他很自豪。他说：呵呵，这要是在我们美国——\n苏联舰长不耐烦地打断他：行啦，没有什么美国啦——我再问一遍，谁他妈把靴子扔到控制台上去啦？！\n\n100、\n勃列日涅夫在冬季奥运会上阅读讲话稿：”O-O-O-O-O。”\n“不，”他的助理向他低声道，“那是奥运会的标志。”\n\n101、\n来了一个格鲁吉亚代表团。他们被斯大林接见，谈话，然后离开，斯大林开始找他的烟斗，找不到。他叫贝利亚。\n“追代表团，找找谁拿了我的烟斗。”他说。\n贝利亚赶忙去追代表团。五分钟后，斯大林在一堆纸下找到了他的烟斗。他叫贝利：“瞧，我找到我的烟斗了。”\n“太晚了，”贝利亚说，”代表团中的半数已经承认他们拿了你的烟斗，另外一半在审讯中死掉了。”\n\n102、\n三个囚犯被送到了古拉格。他们开始谈论为什么他们会来到这里。\n“我来到这儿，是因为我上班总是迟到五分钟，他们指控我是在以怠工来破坏。”第一个说。\n“我来到这儿，是因为我上班总是早到五分钟，他们指控我是间谍”，第二个说。\n“我来到这儿，是因为我上班总是准时赶到，”第三个说，”他们指控我拥有一个西方制的手表。”\n\n103、\n一个美国人刚从莫斯科机场出来，他想打听一下时间。这时从身旁走过一位莫斯科人，手里拎着个沉重的箱子，很吃力的样子。美国人拦住了他，问他当地时间。莫斯科人放下箱子，抬手看了看表，一口气报出来现在的时间然后还有气压温度湿度等信息。美国人很吃惊，问道：这块表的功能可真多，是苏联的技术生产的吗？\n莫斯科人自豪地回答：是的，是我们苏联技术制造的。\n然后又吃力地重新拎起那个箱子接着说道：就是电池重了点。\n\n104、\n越战时期，河内物资奇缺，向苏联求救。\n苏联电：勒紧腰带。\n河内回电：请给腰带 。\n\n105、\n一位美国历史学家和一位俄罗斯历史学家，讨论谁领导二十世纪的前半世纪。\n“我投票赞成胡佛先生，”美国人说，“他尝试着教导我们美国人停止酗酒！”\n“那个没什么了不起！”俄国人接着说，“我选择斯大林，他尝试教我们俄国人不要吃饭。”\n\n106、\n一个年老的女演员想早一点获得国家演员的称号，人们就建议她入党。在入党仪式上人们问她怎么看共产主义。女演员说：所有东西都是充足的，不论是食品还是商品，还允许出国，总之，像在沙皇时代一样。\n\n107、\n问：为什么安德罗波夫，而后是契尔年柯在共产党会议上被一致推选？\n答：这是因为安德罗波夫的肾检验结果最差，契尔年柯的心电图最差。\n\n108、\n一个公民来参加契尔年柯的葬礼。有人向他要票，他答道：到这里来我用的是联票。\n\n109、\n在斯大林格勒更名为伏尔加格勒后，有另一个世界来了一封电报：”同意。约瑟夫•伏尔加”。\n\n110、\n列宁时代像是在隧道里，周围一片黑暗，只是在前面有光；在斯大林时代，像是在汽车里，一人领路，一半人在上坐着，另一半人在上颠簸；在赫鲁哓夫时代，就像在参观团里一样，一个人表演，其他人在笑；在勃列日涅夫时代，像看电影一样，大家都等着散场。\n\n111、\n问：为什么列宁穿皮鞋，斯大林穿靴子？\n答：列宁时代俄罗斯只脏到脚脖子。\n\n112、\n问：什么是全国的电气化？\n答：这就是共产主义减去苏维埃政权。\n问：听说苏联进军捷克斯洛伐克后，就会实现共产主义？是真的吗？\n答：是的，电气化在那里已经实现很多年了。\n\n113、\n问：从马克思主义的观点来看，什么是短缺？\n答：就是不被我们所感觉的客观现实。\n\n114、\n问：犹太人要入党要有什么条件？\n答：两个阿拉伯人的推荐。\n【苏联反犹主义盛行】\n\n115、\n拉宾诺维奇在战斗开始前声明：如果我死了，就追认我有党员吧！如果没死，就不用了。\n\n116、\n问：可以用收取的贿赂交党费吗？\n答：如果你是一个真正的共产党员，那就可以。\n\n117、\n上帝赐给人三种品质：忠诚，聪明，党性，但是任何一个人不会两种。\n因为人如果是聪明和真诚的，他就没有党性；如果他是忠诚和有党性的，他就不是聪明的；如果一个人聪明和有党性，那他就不是真诚的。\n\n118、\n问：在党的十二大上，关于住房问题有什么决议吗？\n答：增加列宁同志的住房面积。\n\n119、\n问：能光屁股坐在刺猬身上吗？\n答：可以，但只是在三种情况下：刺猬的刺被剃掉.是别人的屁股或者是党命令那样做。\n\n120、\n一个妇女在一个几家人合住的住宅的公用浴室里洗澡，而邻居站在走廊的一个小橙上通过门上的玻璃往里看，这个妇女发现后说道：看什么！没见过啊！邻居：我得看看，你是在用谁的肥皂！\n\n121、\n苏联一个桥梁专家访问罗马尼亚时被邀到自己罗马尼亚的同事家做客。客人夸奖主人的别墅非常豪华。主人把客人带到窗前：你见到了那座桥了吗？客人：看见了。主人：这就是原因所在！为了建造这座桥我节省了一些钱。\n过了一年，罗马尼亚工程师回访，他夸奖主人的别墅非常豪华，主人把客人带到窗前：你见到有桥了吗？罗马尼亚工程师：没见到。\n苏联桥梁专家：这就是原因所在！\n\n122、\n捷克人先是建造一个东西，剩下的偷光；而苏联人先是偷得差不多了，余下的用来建造。\n\n123、\n问：为什么在有苏联侨民的西方商店里会经常发生偷窃行为？\n答；这是因为他们的意识里有共产主义的残余。\n\n124、\n著名的俄罗斯歌唱家维尔京斯基，还是在沙皇时代离开俄罗斯的，这次，他又返回了俄罗斯，他带着两个手提箱从车箱里走出来，他放下皮箱，亲吻着大地，看着周围的人：俄罗斯啊，我都不认识你了！\n后来，他一看，皮箱不见了：俄罗斯啊，我认出你来了！\n\n125、\n问：什么国家最富？\n答：苏联。它已经被偷了五十多年了，但还没有被偷光。\n\n126、\n问：德国在马克思那里继承了什么？\n答：对于东德来说是共产党宣言，对于西德来说是资本主义。\n\n127、\n在苏兹达尔的考古发掘中发现了人们从来不知道的圣经的篇章：世界末日可以在单独的国家到来。\n\n128、\n勃列日涅夫问罗马教皇：为什么人们相信罗马天主教的天堂，而不相信共产主义的天堂？\n罗马教皇：这是因为我们的天堂从来没有让别人看到。\n\n129、\n一个乌克兰人被叫到克格勃，\n问：请你解释一下，你为什么经常有从以色列来的邮件？\n答：在战争时期，我曾藏匿过一个犹太人。\n问：你作为一个苏联的乌克兰人，怎么能收这些犹太姥的邮包！你也不为自己的将来着想。\n答：是，我想过，以后我还要藏中国人。\n\n130、\n问：听说在共产主义社会食品可通过电话订购，这是真的吗？\n答：但是发放的时候要通过电视机。\n\n131、\n请问，这就是共产主义，还是会更差劲？\n\n132、\n考古学家在挖掘一个石器时代的山洞，在入口处有一标语：万岁，奴隶制度，全人类的光明未来。\n\n133、\n问：听说在 1980 年在苏联会建成共产主义，这是真的吗？\n答：不，现在换成举办奥林匹克运动会。\n\n134、\n问：里海鳊是什么？\n答：这是鲸的一种，它能游到共产主义。如果游不到，说明它是反革命。\n\n135、\n问：怎么才能知道共产主义已经到来？\n答：将在广播和报纸上宣布。如果那时还剩电视的话，还会通过电视宣布。\n\n136、\n如果你是外交官，你可以一直在国外；\n如果你是科学家，你可以每年出一次国；\n如果你是运动员，你可以四年出一次国；\n如果你是军人，你要12年才能出一次国。（44年卫国战争反攻，56年波匈事件，68年布拉格之春，79年阿富汗）\n\n137、\n两个中学同学相遇然后寒暄。\n“您现在在哪工作”\n“中学老师.您呢?”\n“克格勃。”\n“啊，您在克格勃具体干什么？”\n“我们负责揪出那些对国家不满的家伙。”\n“您的意思是……还有人比较满意？”\n“哦，那些人不归我们管，负责管他们的是纪委。”\n\n138、\n一位年轻人在工作时抱怨道：“这种政府真差劲。”\n结果被一位秘密警察听到而遭逮捕。\n年轻人辩解说：“我根本没讲是哪个政府，你怎么可以随便逮捕我呢？”\n“你少骗人，”秘密警察咆哮道，“我在这里工作二十多年了，哪一个政府差劲我不会知道吗？”\n\n139、\n个美国人和一个苏联人被判下地狱。恶魔告诉他们：“你们有两个选择：美国式和苏联式的地狱。在美国式的地狱中，你们什么都可以做，但是每天早上必须吃一桶屎。而在苏联式的地狱中，也可以想干什么就干什么，不过每天早上得吃两桶屎。” \n美国佬马上选了美国式的地狱。而苏联人则最终选择了自己的祖国。一周后他们又相遇了，苏联人问：“你那如何？” \n美国人回答：“确实如恶魔说的那样。我的地狱还不错。就是每天一桶屎简直要我命。你那呢？” \n差不多和你那一样。就是搞不清楚我们那是屎尿遇见了短缺还是有人把桶都偷跑啦”\n\n140、\n勃列日涅夫发表广场演说，群众听见“……勃列日涅夫同志的逝世令我们非常难过……”，一片哗然。\n勃列日涅夫似乎发现了什么，把手伸进口袋摸了一下。\n“同志们，对不起，离开政治局的时候，我穿了安德罗波夫同志的西装。”\n\n141、\n克格勃审核\n“你爱你的太太吗？”主考官问。\n“是的。”\n“你爱你的国家吗？”主考官又问。\n“是的。”\n“那一个是你的最爱？”主考官问。\n“国家。”\n“好，我们将带你的老婆到这里，你拿这把枪到隔壁房去杀了她。”\n这男子到了隔壁房，没多久便传出６声枪响，接着又传出压碎声持续着数分钟；\n此男子带着松垮的领带走出房间，他将手枪放在桌上，主考官看着他\n并问：“发生什么事？”\n他说：“你给我的枪都装着空包弹，我只好勒死她。”\n\n142、\n赫鲁晓夫访问一所学校。他问一名学生：”你的父亲是谁？“ \n他回答说：”是共产主义！“ \n赫鲁晓夫很满意，他又问：”你的母亲是谁？“ \n他回答说：”是苏联！“ \n赫鲁晓夫又问：”你长大了想当什么？” \n学生说：“孤儿。”\n\n143、\n列宁表明该如何管理国家 \n斯大林表明该如何不管理国家 \n赫鲁晓夫试图表明谁都能管理国家 \n勃列日涅夫正在表明国家是根本不需要管理的\n\n144、\n1937年苏联当局征求诗人普希金的逝世百年纪念铜像设计， \n佳作有以下三件： \n站在高加索山上眺望远方的普希金， \n决斗时被子弹击中即将倒下的普希金， \n艺术女神替普希金戴上月桂冠。 \n但是，优胜作品是.... \n正在阅读普希金作品的斯大林同志。\n\n145、\n列车员叫醒一个靠着窗口睡着了的旅客:“同志，你的票子？” “票？什么票？我没有票子！” “没票？那你打算去哪里？” “我什么地方也不想去！” “那你为什么上这列火车？” “上车前，克格勃的同志们刚在大庭广众之下逮捕了一名间谍，大家都在看热闹，我也在看，后来其中一个领头的同志对着我叫到：‘没什么好看的，快上车坐好！’于是我只好走进车厢……” \n\n146、\n一个盲人在路上遇到了贝利亚同志。 “您好，贝利亚同志！”盲人抢先打招呼。 “怎么，您看得见我？”贝利亚同志心里很纳闷。 “不，贝利亚同志，那是因为给我引路的狗直往后退的缘故。”\n\n147、\n拉宾诺维奇出差，要到三个城市去，它们是：华沙，布拉格，还有巴黎。华沙和布拉格是苏联控制的。 到了华沙，他发给单位一封电报，写着：”自由的华沙万岁！拉宾诺维奇。“ 到了布拉格，他发给单位一封电报，写着：”自由的布拉格万岁！拉宾诺维奇。“到了巴黎，他又发给单位一封电报，写着：”巴黎万岁！自由的拉宾诺维奇。\n\n158、\n在一次记者招待会上，有以下问答：\n问：“今年诺贝尔奖获得者是谁？”\n答：“赫鲁晓夫。”\n问：“赫氏有何成就？”\n答：“他是第一个在西伯利亚播种，去加拿大收获的人。”\n\n159、\n有一次，著名的歌唱家科兹洛夫斯基得知斯大林很赏识他，便向斯大林提出一个请求：“我从来没有去过国外，所以我想……”\n“你不会出逃吧？”\n“瞧您说的，斯大林同志！对我来说，家乡的村庄比外国可要亲得多。”\n“不错，好样的！那你就回家乡去吧。” \n\n160、\n某日，戈尔巴乔夫召开国民大会:同道们!目前国内形势有些紧张，看大家谅解！一个工人站起曰：我们保证按时上班！戈尔巴乔夫大悦，继续说：再过些时日，大家会更紧张，也许会有人受饿！工人又说：我们可延长时间干！戈尔巴乔夫有些感动：随时间发展，大概会有失业现象。工人回答：没关系，我们将加班玩命的工作。戈热泪盈眶：谢谢，但是最后也许会有人饿死！工人大声说：我们２４小时连续工作，怎么样，总书记？！戈狂奔下主席台，牢牢握住该人的手，说：…我…我该该我该怎麽说呢，您从事何种职业。工人受宠若惊，面露难色说：我……我…我是火葬厂的！\n\n161、\n有一次，朱可夫从斯大林的办公室里出来时，怒气冲冲地说：“小胡子魔鬼!”正在接待室的贝利亚听到了这句话，他走进斯大林的办公试冬把这话告诉了斯大林。 斯大林让人把朱可夫叫了回来。“朱可夫同道，您从我办公室出往时说了一句‘小胡子魔鬼’，您是在说谁?”“希特勒!我还能说准呢？斯大林同道！”“贝利亚同道，而您又是在说谁呢?”\n\n\n162、\n“第三次世界大战会发生吗？”“不会！不过争取和平的努力会达到这样的程度：全世界都不会有一块石头保持完整！”\n\n163、\n假如鳄鱼吃了勃烈日涅夫会有什么结果？答案是：鳄鱼会连着屙一个星期的勋章。 \n\n164、\n勃列日涅夫的噩梦：\n捷克人坐在红场上吃犹太薄饼——用筷子。 \n\n165、\n戈尔巴乔夫在别墅与赖莎一起度假。早上，戈尔巴乔夫穿着条内裤走到阳台上呼吸新鲜空气。\n“亲爱的，回来穿上睡衣。”赖莎喊道。\n“赖莎，你是怎么隔着两间屋子看到我的？”\n“不，我在听自由欧洲电台。”\n\n166、\n一天晚间。完成了一天的工作，雅科夫·米哈伊洛维奇·斯维尔德洛夫来弗拉基米尔·列宁的书房小坐。\n“弗拉基米尔·伊里奇，我们要么开一瓶？”斯维尔德洛夫问。\n“不干。我绝不再这样了！”列宁断然拒绝，“绝不！”\n“得了吧，弗拉基米尔·伊里奇！就我们两个！……上次我们开了两瓶，什么也没发生啊？” \n“还什么都没发生呢！你和捷尔仁斯基回去睡觉去了，可我却爬到辆装甲车顶上，扯了一顿屁话……” \n\n167、\n苏联的家具厂生产一种新型号的床：“共产主义型号”。床能轻松塞下三个人，而床沿上则刻着标语：“列宁总与你同在！” \n\n168、\n一艘苏联货船被食人族海盗劫持，海盗准备把所有的海员吃掉。船长问道：\n“亲爱的食人族同志，你们有过集体化吗？”\n“没有！”\n“你们有过个人崇拜吗？”\n“没有！”\n“你们有过十月节吗？”\n“没有！”\n“好吧，那我就真的不能理解你们为什么这么残忍了……”\n\n169、\n勃列日涅夫在电视上对公众讲话：\n“近日在莫斯科有恶毒的流言说我的警卫开的车里不是我而是个假人。我必须得说这是相当肮脏的谎言！他们在给我开车，而不是假人！”\n\n170、\n勃列日涅夫在向工人们讲话：\n“很快我们就能生活得更好！”\n台下传来一个声音：\n“我们怎么办？” \n\n171、\n勃列日涅夫坐车在莫斯科街头闲逛，突然看到一座纪念碑。\n“这座纪念碑是谁的？”\n“契诃夫的，列昂尼德·伊里奇。”\n“哦，很好。我读过他的《姆姆》。”\n“抱歉，列昂尼德·伊里奇，《姆姆》不是契诃夫写的，而是屠格涅夫。”\n“哦，真的么？那这可真蠢。”勃列日涅夫评论道，“《姆姆》是屠格涅夫写的，可契诃夫却得到了纪念碑！”\n\n172、\n科学家联名要求赫鲁晓夫去领导一个癌症治疗所。赫鲁晓夫推脱道：“谢谢同志们的支持，但我对癌症一窍不通啊。”\n科学家们纷纷说道：“赫鲁晓夫同志，您只要应用一下您在农业问题上的经验就好了！您一负责，粮食就全不见了！” \n\n173、\n-为什么在斯大林的遗体被移出列宁墓后，陵墓的看守反而加倍了？\n-因为他们发现赫鲁晓夫曾经抱着铺盖卷在附近晃悠。\n\n174、\n塔斯社通讯：\n“……昨天在莫斯科发生了一起针对勃列日涅夫同志的失败暗杀事件。子弹穿透汽车的防弹玻璃，击中勃列日涅夫同志胸前的勋章，随后反弹并打死了司机。” \n\n175、\n科学家发明了一种电脑，能够计算出与共产主义的距离。在勃列日涅夫的监督下，科学家输入了所有的信息，计算机开始计算。一天、两天，三天……最终计算机得出了结果并打在了卡带上：18千米。\n科学家十分震惊。肯定是算错了！他们重来了一次，还是这个数字！\n学院的锅炉工突然懂了什么：\n“同志们，朋友们，数据没有错！勃列日涅夫同志告诉过我们，每一个五年计划都能让我们向共产主义迈进一步！”\n\n176、\n尼克松先生访问莫斯科，赫鲁晓夫带着他参观首都，尤其是各个新建住宅区。\n“那些是什么？”尼克松突然问道。\n“你什么意思啊？”赫鲁晓夫傲慢地反问，“电视机。”\n“好啊！”尼克松赞叹道，“你们不只已经赶上了我们，在一些地方甚至已经超过了我们。”\n“哪里？”赫鲁晓夫欣喜若狂。\n“比如说吧，我们从不在猪圈里安装电视机。” \n\n177、\n斯大林就要死了，他把赫鲁晓夫招来：\n“尼基塔·谢尔盖耶维奇，我知道你会继承我并超越我，”斯大林说，“我给你准备了两封信。如果你遇到了危机，就拆开第一封；如果再遇到，就拆开第二封。”\n赫鲁晓夫拿走了两封信。1956年，他遇到了匈牙利和苏伊士危机。于是赫鲁晓夫拆开了第一封信，上面写着：“都怪在我头上！”于是苏共二十大召开，斯大林主义终结了。\n1964年，赫鲁晓夫又碰上了勃列日涅夫和柯西金的政变，于是他拆开第二个，只见上面写着：\n“准备两封信。”\n\n178、\n问：能够用香蕉当指南针吗？\n答：可以。把香蕉放在柏林墙上，香蕉被从哪边抽走哪边就是东边。 \n\n179、\n“奶奶，列宁好吗？”\n“当然，孙子，他很好。”\n“斯大林呢？他坏吗？”\n“坏，当然坏。”\n“赫鲁晓夫呢？他怎么样？”\n“等他死了，我们就知道了。” \n\n180、\n党代会。斯大林发言：\n“今天我们有两个问题要讨论。第一，我们需要枪毙所有的政治局委员。第二，我们需要把列宁墓涂成亮绿色。”\n观众席中传来了一个怯怯的声音：\n“为什么涂成亮绿色？”\n“很好，我就知道大家对问题一没有不同意见。”\n\n181、\n在入党审批过程中有一个问题是：“你怎么看待苏联政府？”\n一人回答：“就像看待我妻子一样。”\n“怎么解释？”\n“第一，我爱她；第二，我怕她；第三，我想换一个。” \n\n182、\n在莫斯科红场，人们正排队参观列宁墓卫兵换岗。一个小孩问：\n“爸爸，为什么他们总是要看守这陵墓？”\n“他们不是一直说吗？”父亲答道，“列宁是永生的。如果他看不下去了决定出来怎么办？” \n\n183、\n斯大林招来著名作家肖洛霍夫。\n“我已经读了你的小说《新垦地》。写得非常好，我喜欢。我想，你为啥不写一篇文章，就叫《敌人不投降，就叫他灭亡》？”\n“我害怕我写不好，斯大林同志。最近我的健康状况不好。”\n“我们会帮你的。我们会把你送到格鲁吉亚去，那里有酒有葡萄。”\n“好吧，斯大林同志。那请让我和家人到个别。”\n“为什么？”\n“我怕我的文章不成功。”\n\n184、\n一个外国代表团突击访问了一个集体农庄。没时间准备。代表团走后，集体农庄主席拉过区党委书记说：\n“你们没提前告诉我，所以他们都看见了。牛栏的废墟，那些灰尘，我们的贫穷。”\n“别担心。”党书记说道。\n“不过他们现在就能传的满世界都知道啊。”\n“那就让他们沉浸在一贯的造谣中伤里吧。”党书记答道。 \n\n185、\n在格鲁吉亚共和国的学校中，老师正在让学生说说自己的父亲。\n“图拉什维里，说说你的父亲。”\n“我爸爸种橘子。他把它们带到莫斯科销售，赚了不少钱。”\n“你了，布里泽。”\n“我爸爸种月桂叶。他把它们带到莫斯科销售，赚了不少钱。”\n“你了，克里维泽。”\n“我爸爸在反贪污和投机倒把分局工作。每次布里泽和图拉什维里的爸爸去莫斯科的时候都回去看看我爸爸。因此他赚了不少钱。”\n“你了，查维查瓦泽。”\n“我爸爸是生物工程师。” \n全班大笑。\n“孩子们。”老师严肃地说，“不要把快乐建立在别人的悲伤之上。”\n\n186、\n全世界进行对关于大象的最佳书籍的评奖大赛。\n法国人递交了一册精装的《大象家庭内的三角恋研究》\n英国人提交了一套《大象与世界贸易》\n德国人提交了24卷本的一套《大象学综介》\n美国发放了一百万份传单，上面写着：“赢大象，不需购买。”\n苏联提交了三卷书，题目如下：\n《第1卷：大象在伟大的十月社会主义革的命中的作用》\n《第2卷：大象在世界上最进步的苏联社会的光芒中的快乐生活》\n《第3卷：苏联——大象的祖国》\n\n187、\n一个卫兵问政治犯：\n“刑期多久？”\n“十年。”\n“犯了什么罪？”\n“没犯罪。”\n“你撒谎！没犯罪他们只给判5年！” \n\n188、\n一个日本工人被派到俄罗斯维修日本产的机械。日本人每天工作8小时，不和别人说话。一个月后他的工作期满。在他返回日本之前，日本人眼含泪水地对大家说：“我道歉，我的好工人同志们。我知道工人们应该团结起来，但我有合同在身，我不得不工作，我为没有参与你们的长期罢的工而向你们正式道歉！” \n\n189、\n苏联人、法国人和美国人争论什么是最勇敢的人。\n美国人说：“举例来讲，我们有十辆汽车，其中一辆没有刹车。我们抽签，每人搭一辆开山路。最后我们中的一个人住院，另外九个去看他。”\n“这不算什么。”法国人说，“我们选10个女孩，其中有1个有艾滋病。我们抽签，一人找一个女孩。最后一个人住院，另外九个去看他。”\n苏联人说：“我们聚在公寓里，即便知道我们中有一个告密者。我们讲了一晚上政治笑话，然后九个人进了监狱，另外一个去看他们。”\n\n190、\n一个人把自己的车停在了莫斯科红场上。卫兵赶快跑来，向他怒吼：\n“你疯了么？这是政府所在地！”\n“没问题。”那人答道，“我的锁很结实。” \n\n191、\n一个妇女走进食品商店。\n“你们卖肉吗？”\n“没有。”\n“牛奶呢？”\n“我们这儿只处理肉，对面那家才是没有牛奶的。”\n\n192、\n在奥运会上，苏联掷铁饼（注：在英文中铁饼实为“锤子”，Hammer）选手打破了世界纪录。记者采访他问：\n“你是怎么把锤子抛的那么远的？”\n“如果再搭上个镰刀，我能扔出两倍远。” \n\n193、\n苏联社会七大谜题：\n1、总是没人工作，计划却总是完成；\n2、计划总是完成，可（商店）柜台总是空的；\n3、柜台总是空的，可却没人挨饿；\n4、没人挨饿，可所有人都不高兴；\n5、所有人都不高兴，可是没人抱怨；\n6、没人抱怨，可是监狱却人满为患。\n\n194、\n为了解决黄油短缺问题，政治局要求苏联科学家研究技术，把粪便做成黄油，并在十月革命周年纪念期间完成。在六个月的工作之后，政治局要求进展报告。科学家报告称他们实现了50%的成功。政治局要求解释，答复如下：\n“人们已经可以把它涂在面包上，但尚不会去吃。” \n\n195、\n一只兔子在街上狂奔。\n“你跑得这么快，慌什么？”熊问。\n“你不知道么？他们现在在逮捕所有的骆驼，还要阉割他们。”\n“可你是兔子不是骆驼啊。”\n“对，不过假设他们逮到你，在他们阉掉你之后你就能证明你不是骆驼了！” \n\n196、\n一个犹太人申请移民去以色列。据他说，他的哥哥在以色列病得很重，需要帮助。办公室的官员问他：\n“那为什么不让你的哥哥来这里，而要你亲自过去？”\n“我的哥哥是得了病，但还没有得精神病。”\n\n197、\n问：什么被允许，什么被禁止？\n答：在英国被允许的被允许，被禁止的被禁止；在美国不被禁止的都被允许；在德国不被允许的都被禁止；在法国什么都被允许，包括被禁止的；在苏联什么都被禁止，包括被允许的。 \n\n198、\n问：什么是最短的笑话？\n答：共产主义。 \n问：什么是最长的笑话？\n答：赫鲁晓夫在党代会上的讲话。 \n\n199、\n问：如果社会主义在格陵兰建成会怎样？\n答：首先，雪只有在有配给票时才会下，其次它只会被分配给克格勃军官和他们的家属。\n\n200、\n问：什么单词以R开头且没有结尾？\n答：重组（Reorganization）。 \n\n201、\n问：尼克松来莫斯科时，他和赫鲁晓夫绕克里姆林宫赛并跑了第一，我们该怎么报道？\n答：“在国际长跑比赛中，我们的第一书记同志获得了光荣的第二名，尼克松先生则为倒数第二。”\n\n202、\n-我的妻子已经在厨艺学校学了三年了。\n-哇，那她的厨艺一定很好咯？\n-没有，她们刚学习到苏共第二十次代表大会。 \n\n203、\n-爸，您能给我套车钥匙么？\n-好，别丢了，儿子，七年之后我们就会领到车！ \n\n204、\n-我想预定一辆小汽车。需要多久？\n-从今天开始正好十年。\n-上午还是下午？\n-有区别么？\n-那天上午我们还请了管子工。 \n\n205、\n监狱里两个囚犯正交流经验。\n“你是因为政治犯罪被捕的么？”\n“当然。我是个管子工，被党委员会叫去修下水管。我看了看，说，‘整个体系都该换换了’，于是我就被判了7年。”\n\n","slug":"冷笑话288则","published":0,"date":"2024-01-02T16:09:25.074Z","updated":"2024-01-02T16:09:25.075Z","_id":"clqwm2cgu001ruc7t359h1oy7","comments":1,"layout":"post","photos":[],"link":"","content":"<p>序曲</p>\n<p>一位内务人民委员部审判员结束一天的审判工作，回到办公室，突然独自大笑起来。<br>对面办公桌的同事奇怪的问道：“有什么好笑的事吗？”<br>“是啊，”审判员用手帕擦着笑出来的眼泪：“一个很好笑的笑话……”<br>“哦？说来听听？”<br>“你疯了吗？！我刚判了说这笑话的家伙五年苦役！”</p>\n<span id=\"more\"></span>\n\n<p>1、<br>内务人民委员部的一间牢房里关了三个人，彼此间谈起坐牢的原因。<br>第一个人说：“我因为反对党委书记彼得罗夫。”<br>第二个人说：“我因为支持彼得罗夫。”<br>第三个人说：“我就是彼得罗夫。”</p>\n<p>2、<br>美国外交代表团到苏联访问，苏修接待官员陪他们参观“建设的伟大成就”，并且得意的说：“到了下一个五年计划，每个苏联家庭都可以拥有一架私人飞机！”<br>美国人惊讶的问：“ 他们要飞机干什么呢？”<br>苏修官员说：“当然有用啊……譬如你在莫斯科听说列宁格勒开始供应面包了，你可以马上开飞机赶去排队啊。”</p>\n<p>3、<br>一位公民打电话到基辅电台问主持人：“共产主义到底是艺术还是科学？”<br>主持人说 ：“我也不清楚，但我肯定不是科学”<br>“为什么？”<br>“如果是科学的话，他们应该拿狗做试验。”</p>\n<p>4、<br>苏修穷兵黩武，军中物质紧缺。<br>军需处长在一名下士的陪同下到兵营视察物质供应情况。他们走到油料库附近，在地上发现一个烟头。军需处长不满的说：“这是谁的烟头？！”<br>下士看了看四周，欣喜的说：“看来谁的也不是，上校同志，赶快拣起来吧！”</p>\n<p>5、<br>苏联领袖被邀请到法国巴黎访问。法国官员带他到处看看，他对国防总部、巴黎地下铁、凯旋门、国画馆、高速公路网和闻名世界的TGV快铁都不感兴趣。当法国官员带他到巴黎艾菲尔铁塔前时，他忽然对铁塔很感兴趣。他对法国官员问道：“啊哈！巴黎是不是有九百万人口？”<br>法国官员：“您说的一点都不错。”<br>领袖洋洋得意道：“哈哈，终于找到了，原来你们巴黎九百万人共享一台钟塔！”</p>\n<p>6、<br>地狱有个规矩，谁在人间害了人，被害人的血将淹此人。<br>一次上帝去地狱视察，发现血只浸到贝利亚的腿。上帝就很奇怪，问到：“你杀了这么多人，怎么血只及腿呢？”<br>贝利亚答道：“因为我站在伟大领袖斯大林的肩上！”<br>【贝利亚：苏联秘密警察首脑】<br>7、<br>赫鲁晓夫到处作报告，一天，他去某疯人院作报告，事先该疯人院负责人把疯子召集起来叮嘱：“在赫同志作完报告后要热烈鼓掌”。赫作完报告后果然博得了长时间经久不息的掌声，赫非常得意。但他突然发现，其中有一个人没有鼓掌，他顿时大发雷霆。赫问：“ 你为什么不鼓掌？”此人答曰：“我的疯病已经治好了。”</p>\n<p>8、<br>斯大林、赫鲁晓夫和勃列日涅夫乘坐火车出门。开着开着，火车突然停了。<br>斯大林把头伸出车窗外，怒吼道：“枪毙火车司机！”可是车还是没有动。<br>接着赫鲁晓夫说：“给火车司机恢复名誉！”车仍然没有动。<br>勃列日涅夫说：“同志们，不如拉上窗帘，坐在座位上自己摇动身体，做出列车还在前进的样子……”</p>\n<p>9、<br>苏联的一次大会上，主持人突然说：下面请认为社会主义好的同志坐到会场的左边，认为资本主义好的同志坐到会场右边。大部分人坐到了左边，少数人坐到右边，只有一个人还坐在中间不动。<br>主持人：那位同志，你到底认为社会主义好还是资本主义好？<br>回答：我 认为社会主义好，但是我的生活像是资本主义。<br>主持人慌忙说：那请您赶快坐到主席台上来。</p>\n<p>10、<br>列宁快去世了，叫赶快把继承人斯大林召进克里姆林宫来，临终有几句话要嘱托：“不瞒你说，我还有一个隐忧啊，斯大林。”<br>“说吧，亲爱的伊里奇。”斯大林专心地听着。<br>“ 那就是，人们会跟你走吗？不知你想过了没有？”<br>“他们一定会跟我走的。”斯大林强调说，“一定会！”<br>“但愿如此。”列宁说，“我只是担心，万一他们不跟你走，你怎么办？”<br>“那只好让他们跟你走！”</p>\n<p>11、<br>社会主义者、资本主义者、共产主义者商定要见一面。社会主义者过了约会的时间才到。<br>——“对不起，我去排队买香肠来着。”<br>——“什么是排队？”资本主义者问。<br>——“什么是香肠？”共产主义者问。</p>\n<p>12、<br>数学和科学社会主义有什么区别？<br>在数学上，如果给出什么东西，都需要证明，而科学社会主义什么都能证明，就是什么也不能提供。</p>\n<p>13、<br>马克思想在苏联发表广播演说。勃列日涅夫对他说：“虽然您是奠基人，但是我一个人不敢决定那么重大的问题。我们是集体领导。”<br>“我只想说一句话！”<br>最后，勃列日涅夫只允许他说一句话，并且要他自己负责。马克思凑近话筒，大声说道：<br>“全世界的无产者，请原谅我！”<br>**有的版本还有一个补充的结尾：<br>列宁看到苏联现在建设的社会主义，说：看来我要回到瑞士去，以便重头开始“</p>\n<p>14、<br>有个人向赫鲁晓夫汇报说：“现在大剧院正上演一个剧，里面有您出现，每当您一出场，下面就热烈鼓掌。”赫鲁晓夫听了以后非常得意。有一天他买了一张普通票，去看这个剧，他陷入了沉思，忘记了鼓掌，这时旁边有人推了他一把，紧张地说：“哎！你为什么不鼓掌？不要命啦？！”</p>\n<p>15、<br>在苏共二十三次代表大会上，勃列日涅夫作报告，他问：“我们这里有没有敌人？”一个人回答：“有一个，他坐在第四排第十八号位子上。”勃问：“为什么他是敌人？”回答：“列宁说过敌人是不会打瞌睡的，我发现全场只有他一个人没有打瞌睡！”</p>\n<p>16、<br>演讲人在做关于五年计划成就的报告：在列宁格勒新建了一个电站。<br>大厅里有人说：“我刚从那回来，那没有什么电站。”<br>演讲者没有回答，继续说：“在斯大林格勒已建成了一个化学厂。”<br>大厅里有人说： “一周前我在那里，那里没有什么化学厂。”<br>演讲人：“同志们，你们最好少东游西逛的，要多看一些报纸！比如《真理报》！” </p>\n<p>17、<br>斯大林在大会上引经据典地说：“马克思和列宁说1+1&#x3D;2，而托洛茨基和布哈林说1+1不等于3。是托洛茨基和布哈林说的对呢？还是马克思和列宁说得对呢？”下面听众一脸疑惑，“毫无疑问，是马克思和列宁说的对！”底下热烈鼓掌，“托洛茨基和布哈林是帝国主义派来的间谍，说1+1不等于3的人罪不容赦……”</p>\n<p>18、<br>集体农庄庄员伊万在河里捉到一条大鱼，高兴的回到家里和老婆说：“看，我们有炸鱼吃了！”<br>“没有油啊。”<br>“那就煮！”<br>“没锅。”<br>“烤鱼！”<br>“没柴。”<br>伊万气死了，走到河边把鱼扔了回去。那鱼在水里划了一个半圆，上身出水，举起右鳍激动地高呼：“斯大林万岁！”</p>\n<p>19、<br>“瑞典能否建立共产主义”？<br>“不能。”<br>“为何？”<br>“列宁同志说了：共产主义不在山那边。”</p>\n<p>20、<br>美术馆里有一幅描写亚当和夏娃的画。<br>一个英国人看了，说：“他们一定是英国人，男士有好吃的东西就和女士分享。”<br>一个法国人看了，说：“他们一定是法国人，情侣裸体散步。”<br>一个苏联人看了，说：“他们一定是苏联人，他们没有衣服，吃得很少，却还以为自己在天堂！</p>\n<p>21、<br>一老者人行道闲溜，不慎落入道旁河中。随高呼救命！<br>两警察闻之，视若不见，仍边走边谈笑如旧。<br>老者情急生智，随又高呼“打倒勃列日涅夫”！两警察闻之大惊，随急速跳入河中，将老者拖上岸来铐之。</p>\n<p>22、<br>某日苏联举行国庆游行，沿着大街开来了炮兵、机械化步兵、坦克、自行火炮、战术导弹、战略核导弹，破坏力一个比一个大；队列末尾却是两个带公文包的矮子。<br>在看台上勃列日涅夫惊讶地说：“这两个人破坏力比核导弹还大！他们是什么人？”<br>克格勃头子说：“不是我的人。”<br>国防部长说：“没见过他们。”<br>苏联总理说：“他们是国家计委的……”<br>【计委：计划经济委员会&#x2F;纪委：纪律检查委员会】</p>\n<p>23、<br>勃列日涅夫,杜布切克(捷克总书记),英国首相和美国总统,4人乘坐气球.<br>气球漏气了,抬不动4人,开始下坠,万分危机,必须有人牺牲自己跳出.<br>先是美国总统喊了声”为了自由世界!”,然后跳了出去.气球下坠暂缓,但过一会儿漏气更多,下坠又加快,必须再跳出1人.<br>于是英国首相喊:”为了女王陛下!”,跳了出去.<br>暂缓一会儿又不行了,于是勃列日涅夫喊道:”为了社会主义大家庭!”说着就把杜布切克扔出去了.</p>\n<p>24、<br>一个莫斯科市民的鹦鹉丢了。这是只会骂人的鹦鹉，要是落到克格勃的手里可糟了。这人便在报纸上发表了一篇声明：“本人遗失鹦鹉一只，另外，本人不同意它的政治观点。”</p>\n<p>25、<br>一个英国人,一个法国人,一个苏联人谈论什么是世界上最幸福的事<br>英国人：最幸福的事情就是冬天晚上回家，穿着羊毛裤坐在壁炉前面。<br>法国人：你们英国人就是古板，最幸福的事情是和一个金发女郎一起去地中海度假，然后我们好和好散。<br>苏联人：最幸福的事情就是半夜有警察敲门，开门后：伊万，你被捕了。<br>…：你弄错了，伊万在隔壁。</p>\n<p>26、<br>话说勃烈日涅夫同志当上苏共中央总书记之后，将在乡下的老母亲接到了莫斯科。老太太来了以后，勃列日涅夫得意洋洋地向老妈展示了一番自己的豪华别墅、高级汽车、名贵家具等等，展示完了后，勃列日涅夫问老太太这一切如何？老太太说：“儿子啊，这一切都很好，但是，共产党来了你怎么办？”</p>\n<p>27、<br>勃列日涅夫和美国总统卡特在瑞士开会，休息时间两个人很无聊，就开始比谁的保镖更忠诚。卡特先来，他把自己的保镖叫进来，推开窗（外面是20层楼）说： “约翰，从这里跳下去！”约翰哭着说：“你怎么能这样呢，总统先生，我还有老婆孩子呐。”卡特被感动了，流着泪说是自己不对，叫约翰走了，然后抡到勃列日涅夫，他也大声叫自己的保镖伊万。“伊万，从这里跳下去！”伊万二话不说就要往下跳，卡特一把抱住他说：“你疯了？跳下去会死的！”伊万一边挣扎着要跳下去一边说：“放开我，混蛋，我还有老婆孩子呐。”</p>\n<p>28、<br>列宁的夫人曾经当面指出斯大林的专制独裁统治，令后者气急败坏，斯大林说：“你再说，我就宣布你不是列宁的妻子！</p>\n<p>29、<br>古巴举行盛大五一节游行，卡斯特罗率党和国家领导人全体出席，检阅游行队伍。就在游行队伍通过主席台的时候，卡斯特罗同志突然发现人群中有一个人掏出一块新手帕擦了擦鼻子，于是他马上对身边的一位政治局委员道：“我敢打赌，这个拿手帕擦鼻子的人里面没穿内裤！”委员不以为然，难道卡斯特罗同志真长了透视眼不成？他马上命令警卫把那个人叫道跟前，亲自询问，吃惊地发现，这人长裤里面果然是光着的。委员敬佩地问领袖：“卡斯特罗同志，您是如何知道透过外衣看见他没穿内裤的？”卡斯特罗回答：“我看见他掏出了新手帕，他的布票显然没用来买内裤嘛。”众人大惊，无不佩服领袖超凡的洞察力……</p>\n<p>30、<br>美国人登月成功后,勃列日涅夫当天就打电话给苏联宇航员：“鉴于美国人已经在月球上登陆，现在苏联决定，马上派你们去太阳登陆”。宇航员大惊，哽咽道： “您不知道吗，勃列日涅夫同志，我们会被烧死的”。勃列日捏夫生气地说：“你以为政治局没有考虑过吗？我们已经决定，派你们在晚上在太阳登陆！”</p>\n<p>31、<br>一个美国代表团要访问一个苏联的工厂，当局就预先教工人要怎样回答代表团的提问。代表团来后问一个老工人你每月的工资是多少，老工人回答有3000卢布；代表团又问他有多少存款，他回答有10万卢布；代表团问：你存了这么多钱准备干什么呢？老工人回答说：“我准备买一双靴子。”</p>\n<p>32、<br>二战结束后一个波兰农村老太看到街上贴着的照片就说像自己的外甥<br>别人训斥她：瞎说什么，这是斯大林同志<br>老太：他是干什么的？<br>答：他赶跑了纳粹<br>老太急切地问：他能不能把俄国人也赶跑啊？</p>\n<p>33、<br>老师在莫斯科街上碰到以前的学生斯基洛夫（已经当了克格勃）。<br>老师说：现在的学生学习可真不象话，上课时我问他们《叶甫盖尼·奥涅金》是谁写的，他们居然没人回答；逐个问，居然都说“不是我写的”<br>斯基洛夫：这是一个问题，这件事交给我吧<br>过了一周，斯基洛夫兴致勃勃地找到老师：我审了他们几天，事情解决了；伊万那小子招了，是他写的<br>老师：…………<br>【《叶甫盖尼·奥涅金》：普希金的著名作品】<br>34、<br>去买报纸，要一份《真理报》。报贩回答：《真理》没有了，只有《消息》。 </p>\n<p>35、<br>苏联赫鲁晓夫访问美国，美国总统送一最新高科技电话，曰，上可打天堂，下可打地狱，中可打人间，乃美国最新高科技产品。<br>赫鲁晓夫回国后，一日想起，拿起电话拔通天堂。“喂，你好，请帮我转列宁同志。”“请稍侯…”电话那边接线生答道，“对不起，查无此人，请查清号码再拔”<br>老赫一想，莫非导师不在天堂，在地狱？于是拨到地狱。“喂，你好，请帮我转列宁同志。”“请稍侯…列宁同志在线，现在就帮您转过去”<br>老赫于是将最近几十年的革命形势和国际斗争局势一五一十地向导师作了汇报，并听取了导师的指导。<br>月底，电话费清单寄来，老赫一看大惊！打到天堂的问询电话不过1分钟却收费100美元，打到地狱的1个多小时汇报和批示，却才1美元。大惑不解，遂电话问询美国总统－－这是为何？<br>美国总统在大洋彼岸答曰：“事情是这样的，你们苏联打电话到天堂是长途，打电话到地狱却是市话，所以…”</p>\n<p>36、<br>一日，某君站在柜台前观看。一大脑标价50万美元，某君定睛一看，克林顿大脑。心下叹服，果然是美国总统，不同凡响。再看，另一大脑标价100万美元，乃爱因斯坦大脑，某君再叹，果然是天才天价，值！<br>还看，见一大脑标价200万美元，是朝鲜某相国大脑。某君大惑不解，问售货小姐何故。<br>小姐从容答道，小克老爱大脑虽好，却是用旧的二手货。此相国大脑却是全新，从未用过，故此价值200万！</p>\n<p>37、<br>赫鲁雪夫和肯尼迪交谈，各自吹嘘，肯尼迪说：“美国医学发达，有种药片死人吃了可以复活。”赫鲁雪夫说：“苏联体育发达，有人十分钟可以从莫斯科跑到美国。”肯尼迪要求兑现，赫鲁雪夫慌了手脚，召集文武大臣商量对策，有人出了个好计策说：“这很好办，你先让肯尼迪把药片拿来，让斯大林吃了，那斯大林一定复活，那么你用不了五分钟就可以从苏联跑到美国。”</p>\n<p>38、<br>赫鲁晓夫在苏共二十大揭露斯大林的暴行时，台下有人递条子上去。<br>赫鲁晓夫当场宣读了条子的内容：“赫鲁晓夫同志，当时你在干什么？”。<br>然后问道：“这是谁写的，请站出来！”。<br>连问三次，台下一直没有人站出来。<br>于是赫鲁晓夫说：“现在让我来回答你吧，当时我就坐在你的位置上。”</p>\n<p>39、<br>叶利钦、克林顿和金2，在森林里散步，遇到一只恶狼。<br>狼拦住小克说，俺要吃你。小克慌道，狼啊狼啊，别吃俺，俺给你美元。狼一想，也行。<br>于是走到老叶跟前说，俺要吃你。老叶忙说，俺俄罗斯虽没钱，但俺有美女，给你美女，放俺一马。狼一想，也行罢。<br>狼这回到了金2跟前，说，俺要吃你。<br>金2的拍大腿，说，俺不怕你！<br>狼吃惊道，小克老叶都怕俺，你为何不怕？金2说，俺不怕你，因为俺身后有200万朝鲜痨冻党员，所以俺不怕你。<br>狼卟通一声跪下，声泪俱下说：“总书记啊，俺终于找到组织了！</p>\n<p>40、<br>勃列日涅夫即将访问波兰，波兰当局命令一位著名画家创作一幅名为《勃列日涅夫在波兰》的大型油画作为献礼。很不情愿的画家在威逼下接受了工作。画完成后，波兰一高官前来验收，结果让他大吃一惊：画面上是一男一女在豪华的大床上极尽缠绵，窗外的风景是克里姆林宫。“这是什么？这女的是谁？！”高官愤怒的问。“勃列日涅夫的夫人。”画家答道。“男的呢？！”“勃列日涅夫的秘书。”“可勃列日涅夫同志在哪里？”“勃列日涅夫在波兰。”画家答道。</p>\n<p>41、<br>苏联领导人坐火车旅行。铁轨到了尽头，火车停下。<br>列宁号召：“立即发动无产者搞星期六义务劳动，修铁路，直通共产主义！”<br>斯大林抽着烟斗，严肃地下令：“给我调100万劳改犯来，修不通铁路，统统枪毙。”<br>赫鲁晓夫敲着皮鞋喊：“把后面的铁路接到前面去，火车继续开！”<br>勃列日涅夫挥舞着双手说：“坐在座位上自己摇动身体，做出列车还在前进的样子。”<br>最后，戈尔巴乔夫沉思道：“把火车拆了，到有铁轨的地方再拼装起来。”<br>于是苏联解体了。</p>\n<p>42、<br>幼儿园.小女孩写了首小诗朗诵起来:<br>我家有只大花猫,生下三个猫宝宝,猫眯个儿还没长,喵喵喵喵都入党…<br>园长大喜,夸奖一番:党委下来检查,乖乖你就上吧…<br>检查团来了,小孩朗诵道:<br>我家有只大花猫,生下三个猫宝宝,猫眯个儿还没长,喵喵两个都入党…<br>园长低声提醒:三个,不是两个…<br>小孩委屈道:可是…可是另一只已经睁眼了…</p>\n<p>43、<br>老布什、戈尔巴乔夫、和邓小平各开一辆车，到了一十字路口，上面有两个路牌：东—〉社会主义；西—-〉资本主义，布什连看都不看一拐就走西边去，戈尔巴乔夫到了，左想右想，犹豫了一会还是向西拐了。最后是邓小平，只见他手脚麻利地把两个牌子互换了一下，向着“社会主义”方向前进了。 </p>\n<p>44、<br>一个苏联人准备移民去美国，上级知道了很不高兴。于是组织了一个委员会给他做思想工作，领导说：“同志，你为什么要去美国？是因为不满意没有好吃的？” “不是。”“是因为不满意住房条件太差？”“不是。”“是因为不满意工资水准太低？”“不是。”“那我们不明白了，你没有什么不满意的，为什么要去美国？”“因为在美国，我可以有不满意。”</p>\n<p>45、<br>美国宇航员和苏联宇航员同时登上了月球。苏联宇航员宣布月球属于苏维埃政权，美国宇航员得到来自休斯敦的命令：“不要与苏联人发生冲突”。于是，美国宇航员眼睁睁看着苏联人把整个月球漆成红色然后扬长而去。这时，他们得到了来自休斯敦的指令：“ 在上面写上白色的COCA COLA。”</p>\n<p>46、<br>克里姆林宫，勃列日涅夫拿起通往埃及总统府的电话：“我是勃列日涅夫，我要和萨达特总统的遗孀讲话！”<br>“遗孀？ 萨达特总统可一直都活着呀？”电话另一端传来惊讶的声音。<br>老勃放下电话，冲身旁的克格勃头子大喊：“混蛋！为什么把原订的行动时间推迟了？”</p>\n<p>47、<br>一位莫斯科市民在公交车上：“您好同志，请问您是克格勃吗？”<br>“不是。”<br>“那您的家人或直系亲属有在克格勃工作吗？”<br>“没有。”<br>“那您有朋友在克格勃吗？”<br>“没有。”<br>“那您把脚拿开好吗，您踩到我脚了”</p>\n<p>48、<br>勃列日涅夫执政时期，政局混乱<br>有个人骂了句勃列日涅夫是傻子，结果无期了<br>本来他只要判两年，结果法官说他泄露了国家机密，就无期了</p>\n<p>49、<br>对苏联知识分子来说有五个规则：<br>什么都别去思考；<br>如果你一定要思考，不要说出来；<br>如果你又要思考又要说，那就别写出来；<br>如果你又思考又说还写，那么别签名；<br>如果以上规则你都不遵守，那你就别感到吃惊</p>\n<p>50、<br>斯大林在办公室发现了老鼠。他跟加里宁省主席抱怨这事，后者想了一会说：“你干嘛不立个牌子上面写着：‘集体农庄’？这样一半老鼠会饿死，另一半则会跑掉”</p>\n<p>51、<br>伊万诺维奇入党。这以前他必须经过党委会面试<br>伊万诺维奇同志，你抽烟吗？”<br>“时不时抽一些”<br>“你知道列宁同志不抽烟而且号召其他同志也不抽烟吗？”<br>“既然列宁同志这样说，我会戒烟的”<br>“你喝酒吗？”<br>“喝一点”<br>“列宁同志强烈反对酗酒”<br>“那么我会戒酒的”<br>伊万诺维奇同志，你对女人怎么看？”<br>“有一点。。。。”<br>“你知道列宁同志强烈谴责不道德行为吗？”<br>“既然列宁同志这么看，那么我不会再爱女人啦”<br>“IVANOV同志，你随时准备着为党作出牺牲吗？”<br>“当然。谁愿意这么活着？（WHO NEEDS SUCH LIFE？）”</p>\n<p>52、<br>“将军的儿子能成为元帅吗？”<br>“不可能。元帅都有儿子”</p>\n<p>53、<br>勃列日涅夫访问印度时，大批印度人到机场欢迎勃列日涅夫。勃列日涅夫便问当时的印度总理英甘地，你是用什么办法让这么多人来欢迎我的？英甘地回答：凡是来欢迎你的人，都能够得到5个卢比（印度货币）的奖励。<br>后来英甘地到苏联访问时，成千上万的苏联人从机场到莫斯科市内的道路上夹道欢迎。英甘地问勃列日涅夫：你是用什么办法让这么多人来欢迎我的？勃列日涅夫回答：凡是不来欢迎你的莫斯科人，每人罚款5卢布（苏联的货币）</p>\n<p>54、<br>戈尔巴乔夫视察一个集体农场，农场书记抱怨说：这里所有的小猪都长得不错，唯有一只总是病歪歪的。戈尔巴乔夫一听说到：交给我吧，同志。戈尔巴乔夫带回小猪弄了一周眼看不行了小猪要死掉了，于是大清早把小猪放在婴儿车里要丢掉，不巧碰上了米高扬，米高扬笑着说：总书记同志，这么早就出来啦！戈尔巴乔夫神色慌张的说：哦，可不是嘛，我的小孙子闹得不行，带出来透透气。米高扬走到婴儿车前看了一眼说：哦，多好的孩子，长的真像他爷爷！</p>\n<p>55、<br>亚历山大、凯撤、拿破仑做为贵宾，参加红场阅兵。<br>——我要是有苏联的坦克，我将是战无不胜的！亚历山大说。<br>——我要是有苏联的飞机，我将征服全世界！凯撤说。<br>——我要是有真理报，世界现在也不会知道滑铁卢！拿破仑说。</p>\n<p>56、<br>“苏联和英国的童话传说有什么不同？”<br>“英国童话的开头通常是：‘很久很久以前……’而我们的则是；‘不远了，不远了……</p>\n<p>57、<br>斯大林做报告说：……共产主义已经出现在苏联的地平线上了……<br>老工人不知道什么是地平线，回家后问儿子，儿子说：地平线就是能看到却永远走不到的一条线。</p>\n<p>58、<br>——社会主义制度的优越性在哪里？<br>——成功地克服了在其它社会制度里不会存在的困难。</p>\n<p>59、<br>——拉宾诺维奇，你经常读报纸吗？<br>——当然，要不我怎么知道我们过着幸福的生活？</p>\n<p>60、<br>一天戈尔巴乔夫到一个农场视察，看到有几头猪，就到猪旁边拍了一张照片。<br>随行人员在照片上写上：戈尔巴乔夫和猪在一起，但又感到不妥。于是改成：猪和戈尔巴乔夫在一起，可还是感觉不对。最后把照片上的字改成：“左起第三位是戈尔巴乔夫”。</p>\n<p>61、<br>苏联邮政发行历届领导人纪念邮票， 发行没1个月，邮政宣布紧急停止使用该邮票。<br>理由是：寄信人不知道往哪面吐唾沫。</p>\n<p>62、<br>朝鲜：嗯，大哥，我想做个核试验。<br>中国：什么时候?<br>朝鲜：10<br>中国：10什么？10个月？还是10天?<br>朝鲜：9，8，7……<br>中国：你大爷的！</p>\n<p>63、<br>一个美国人和苏联人比赛言论自由.美国人说：“我可以在白宫门前高喊‘打倒美帝国主义’。警察绝对不会抓我。”<br>苏联人很不服气，说：“这有什么。我也可以在克林姆林宫门前高喊‘打倒美帝国主义’，警察也绝对不会抓我。”</p>\n<p>64、<br>在集体农庄党的会议上将研究两个问题：建造木棚和建设共产主义。在没有木板的情况下，直接研究第二个问题。</p>\n<p>65、<br>“同志，你对这个问题有什么意见吗？”党支书问道。<br>“对，我是有意见，但我不同意我的意见！”</p>\n<p>67、<br>工人说:我们已经是共产主义了<br>有人问:为什么?<br>工人说:我们实现了各尽所能,各取所需的分配原则.<br>什么?那人又问<br>工人说:你没见我们的领导各取所需,工人各尽所能!</p>\n<p>68、<br>“在苏联是否可以存在两党制？”<br>“不，不可能，因为我们养不起。” </p>\n<p>69、<br>——什么在苏联是最常见的？<br>——暂时的困难。</p>\n<p>70、<br>苏联时期莫斯科卢比扬卡（克格勃总部）大楼外。<br>一个愁眉苦脸的男子一边走路一边自言自语：肥皂没有，电池没有，袜子也没有。……<br>这时旁边走过来一个看起来象是便衣的人小声对他说：公民同志，您要是再这样诋毁我们伟大的社会z主义国家，我就要拿手枪把敲你的脑袋了！<br>那个男子看看便衣警察，继续自言自语：看看，连子弹也没有……</p>\n<p>71、<br>在调查表上有这样一个问题：在执行总路线时你动摇过吗？<br>拉宾诺维奇回答道：“我和总路线一起动摇。”</p>\n<p>72、<br>——共产主义还有会货币吗？<br>——南斯拉夫的修正主义者说会有，中国的教条主义者说没有，我们是辩证地看待这个问题：有，但不是所有人都有。</p>\n<p>73、<br>拉宾诺维奇到资本主义国家出差，在那里，他给单位拍了一个电报：“我选择了自由。”这事发生后，单位马上召集了党代会谴责拉宾诺维奇，并要做出组织结论。在会议中间，拉宾诺维奇突然走进了会场！全场哑然。<br>拉宾诺维奇说道：“我非常感兴趣，你们是怎样理解自由的。”</p>\n<p>74、<br>——苏联人第六感的什么方面最发达？<br>——高度的满足感。 </p>\n<p>75、<br>——为什么我们执行总路线那么慢 ?<br>——因为每次党代会转的弯太大。</p>\n<p>76、<br>——有 40 颗牙4条腿的是什么东西？<br>——鳄鱼。<br>——有4颗牙40 条腿的是什么东西？<br>——政治局 </p>\n<p>77、<br>“假设你在酒吧里，而一个陌生人坐到你的身边并开始唉声叹气，你该怎么做<br>“立即去阻止这种反苏宣传” </p>\n<p>78、<br>“共产主义实现时警察还存在吗？”<br>“当然不。那时候所有公民都已经学会自己逮捕自己”</p>\n<p>79、<br>一个苏联人家中总是被偷，于是很郁闷的问邻居：“什么时候我们家的东西才能不被偷？”<br>邻居：“等到了共产主义社会就不被偷了。”<br>“为什么？”<br>“因为在社会主义阶段就已经被偷光了。</p>\n<p>80、<br>苏联特工对美国特工夸口道：“我们知道你们国家所有核导弹发射井的位置。”<br>美国特工说：“那又有什么，我们知道你们未来20年全体政治局委员名单。”</p>\n<p>81、<br>亞美尼亞電台播放著機智問答說：<br>「雞和蛋哪一個先有？」<br>解答者在一旁暗暗地答道：「從前兩者都有。」</p>\n<p>82、<br>一对夫妇生了一个孩子，如果长得像父母，那就是按反动的基因学说生出来的，如果长得像他们的邻居，那就是按照李森科的革命的环境决定学说生出来的。</p>\n<p>83、<br>戈尔巴乔夫颁布限酒令后，想要买到酒只能在指定销售处排长队来买。<br>一个莫斯科人排队排烦了，就嚷道：“我要到克林姆林宫把戈尔巴乔夫干掉。”然后转身离去。<br>一会儿他有回来了，旁边人问他：“已经干掉了吗？”<br>他说：“干什么干啊！那里的队比这里还长。”</p>\n<p>84、<br>“可能在美国建成共产主义吗？”<br>“可能的。但是那样的话我们到哪里买粮食？”</p>\n<p>85、<br>“下次选举的结果会是怎样的？”<br>“没有人知道。有人从中央委员会那里偷走了下次选举的确切结果</p>\n<p>86、<br>“为什么有人说匈牙利人喜欢苏联人而讨厌美国人？”<br>“因为苏联人帮助匈牙利人摆脱了一次专制，而美国人没有解决另外一个”</p>\n<p>87、<br>拉宾诺维奇在克里姆林宫里工作，他待在塔楼前望着远方，以便在共产主义到来时及时发出信号。美国人想要引诱他为他们工作，让它在经济危机到来时发出警告。拉宾诺维奇回答说：<br>——不，我需要一个固定的工作。</p>\n<p>88、<br>美国百万富翁买下苏联国家百货商场，并宜布要免费分发商品。<br>很快百货商店和通向这里的道路就开始堵塞，并有许多因拥挤而死伤的人。人们问百万富翁问：　<br>——你为什么要这样做？<br>——我非常感兴趣，当你们实行按需分配时会是什么样子。</p>\n<p>89、<br>——为什么共产党员不能接受圣经？<br>——根据圣经，先有混乱，然后根据上帝的计划引入秩序。共产主义的经验告诉我们，先有秩序，然后混乱就会到来</p>\n<p>90、<br>——是什么原因决定了我们能在西方国家买那么多小麦？<br>——要知道资本主义的最大缺点就是生产过剩。</p>\n<p>91、<br>一个年轻的东德共产党员向他的首长提出了一个请求：他想得到移民西德的许可<br>“为什么你竟然会想离开社会主义天堂，小同志？”<br>“首长，我有一个主要的原因和一个次要的原因。次要原因是我知道我们党已经在民主德国建立了一个天堂，而我害怕这个天堂不能延续很久”<br>“别担心！孩子，这里将永远是天堂”<br>“那，好吧，首长，这就是我说的主要原因了”</p>\n<p>92、<br>五一劳动节游行中，一个非常老的犹太人举着一个标语：“为了我快乐的童年时代，谢谢你，斯大林同志”<br>党代表找到他：“那是什么 ？你在嘲弄我党吗？谁都可以看出，当年还是孩子的时候，斯大林同志还没有出生”<br>“确切的说，那就是我感谢他的原因”</p>\n<p>93、<br>“美国的摩天楼真是全世界最高的吗？”<br>“是的。但是苏联制造的晶体管是全世界最大的” </p>\n<p>94、<br>“如果我们放开西部边界管制的话，我们应该做什么？”<br>“立即跑到西伯利亚以避免被踩死” </p>\n<p>95、<br>“为什么那个枪击政府豪华轿车的家伙会在红场打偏子弹？”<br>“因为刚巧挨着他的公民们拼命抢那把枪并叫着：‘让我来射击！’</p>\n<p>96、<br>“为什么我国政府不急着登月？”<br>“如果宇航员拒绝回来怎么办？”</p>\n<p>97、<br>“为什么巡警总是三人一队？”<br>“这是专门的安排。一个会阅读，一个会写字，自然第三个要随时监视这两个知识分子”</p>\n<p>98、<br>有人通过走关系，把列宁同志送到了天堂，这个无神论者被接纳了。<br>过了几天，这人给上帝打电话表示感谢，电话接通了，他说：你是上帝吗?<br>上帝回答：首先，没有上帝。其次，我们这里每个人都是同志。第三，有事请直说，我还要参加党代表会议。</p>\n<p>99、<br>大西洋上某处，苏联和美国核潜艇碰巧在一处上浮出水。　<br>苏联潜艇的船员在甲板上没秩序地站着队，半醉的舰长生气地吼道：谁把靴子扔到控制台上去啦？我再问一遍：谁他妈把靴子扔到控制台上去啦？<br>刚好美国潜艇甲板上的舰长听见了，与苏联舰长相比，他不仅刮了胡子而且精神抖擞。而他的手下更是秩序井然。<br>显然他很自豪。他说：呵呵，这要是在我们美国——<br>苏联舰长不耐烦地打断他：行啦，没有什么美国啦——我再问一遍，谁他妈把靴子扔到控制台上去啦？！</p>\n<p>100、<br>勃列日涅夫在冬季奥运会上阅读讲话稿：”O-O-O-O-O。”<br>“不，”他的助理向他低声道，“那是奥运会的标志。”</p>\n<p>101、<br>来了一个格鲁吉亚代表团。他们被斯大林接见，谈话，然后离开，斯大林开始找他的烟斗，找不到。他叫贝利亚。<br>“追代表团，找找谁拿了我的烟斗。”他说。<br>贝利亚赶忙去追代表团。五分钟后，斯大林在一堆纸下找到了他的烟斗。他叫贝利：“瞧，我找到我的烟斗了。”<br>“太晚了，”贝利亚说，”代表团中的半数已经承认他们拿了你的烟斗，另外一半在审讯中死掉了。”</p>\n<p>102、<br>三个囚犯被送到了古拉格。他们开始谈论为什么他们会来到这里。<br>“我来到这儿，是因为我上班总是迟到五分钟，他们指控我是在以怠工来破坏。”第一个说。<br>“我来到这儿，是因为我上班总是早到五分钟，他们指控我是间谍”，第二个说。<br>“我来到这儿，是因为我上班总是准时赶到，”第三个说，”他们指控我拥有一个西方制的手表。”</p>\n<p>103、<br>一个美国人刚从莫斯科机场出来，他想打听一下时间。这时从身旁走过一位莫斯科人，手里拎着个沉重的箱子，很吃力的样子。美国人拦住了他，问他当地时间。莫斯科人放下箱子，抬手看了看表，一口气报出来现在的时间然后还有气压温度湿度等信息。美国人很吃惊，问道：这块表的功能可真多，是苏联的技术生产的吗？<br>莫斯科人自豪地回答：是的，是我们苏联技术制造的。<br>然后又吃力地重新拎起那个箱子接着说道：就是电池重了点。</p>\n<p>104、<br>越战时期，河内物资奇缺，向苏联求救。<br>苏联电：勒紧腰带。<br>河内回电：请给腰带 。</p>\n<p>105、<br>一位美国历史学家和一位俄罗斯历史学家，讨论谁领导二十世纪的前半世纪。<br>“我投票赞成胡佛先生，”美国人说，“他尝试着教导我们美国人停止酗酒！”<br>“那个没什么了不起！”俄国人接着说，“我选择斯大林，他尝试教我们俄国人不要吃饭。”</p>\n<p>106、<br>一个年老的女演员想早一点获得国家演员的称号，人们就建议她入党。在入党仪式上人们问她怎么看共产主义。女演员说：所有东西都是充足的，不论是食品还是商品，还允许出国，总之，像在沙皇时代一样。</p>\n<p>107、<br>问：为什么安德罗波夫，而后是契尔年柯在共产党会议上被一致推选？<br>答：这是因为安德罗波夫的肾检验结果最差，契尔年柯的心电图最差。</p>\n<p>108、<br>一个公民来参加契尔年柯的葬礼。有人向他要票，他答道：到这里来我用的是联票。</p>\n<p>109、<br>在斯大林格勒更名为伏尔加格勒后，有另一个世界来了一封电报：”同意。约瑟夫•伏尔加”。</p>\n<p>110、<br>列宁时代像是在隧道里，周围一片黑暗，只是在前面有光；在斯大林时代，像是在汽车里，一人领路，一半人在上坐着，另一半人在上颠簸；在赫鲁哓夫时代，就像在参观团里一样，一个人表演，其他人在笑；在勃列日涅夫时代，像看电影一样，大家都等着散场。</p>\n<p>111、<br>问：为什么列宁穿皮鞋，斯大林穿靴子？<br>答：列宁时代俄罗斯只脏到脚脖子。</p>\n<p>112、<br>问：什么是全国的电气化？<br>答：这就是共产主义减去苏维埃政权。<br>问：听说苏联进军捷克斯洛伐克后，就会实现共产主义？是真的吗？<br>答：是的，电气化在那里已经实现很多年了。</p>\n<p>113、<br>问：从马克思主义的观点来看，什么是短缺？<br>答：就是不被我们所感觉的客观现实。</p>\n<p>114、<br>问：犹太人要入党要有什么条件？<br>答：两个阿拉伯人的推荐。<br>【苏联反犹主义盛行】</p>\n<p>115、<br>拉宾诺维奇在战斗开始前声明：如果我死了，就追认我有党员吧！如果没死，就不用了。</p>\n<p>116、<br>问：可以用收取的贿赂交党费吗？<br>答：如果你是一个真正的共产党员，那就可以。</p>\n<p>117、<br>上帝赐给人三种品质：忠诚，聪明，党性，但是任何一个人不会两种。<br>因为人如果是聪明和真诚的，他就没有党性；如果他是忠诚和有党性的，他就不是聪明的；如果一个人聪明和有党性，那他就不是真诚的。</p>\n<p>118、<br>问：在党的十二大上，关于住房问题有什么决议吗？<br>答：增加列宁同志的住房面积。</p>\n<p>119、<br>问：能光屁股坐在刺猬身上吗？<br>答：可以，但只是在三种情况下：刺猬的刺被剃掉.是别人的屁股或者是党命令那样做。</p>\n<p>120、<br>一个妇女在一个几家人合住的住宅的公用浴室里洗澡，而邻居站在走廊的一个小橙上通过门上的玻璃往里看，这个妇女发现后说道：看什么！没见过啊！邻居：我得看看，你是在用谁的肥皂！</p>\n<p>121、<br>苏联一个桥梁专家访问罗马尼亚时被邀到自己罗马尼亚的同事家做客。客人夸奖主人的别墅非常豪华。主人把客人带到窗前：你见到了那座桥了吗？客人：看见了。主人：这就是原因所在！为了建造这座桥我节省了一些钱。<br>过了一年，罗马尼亚工程师回访，他夸奖主人的别墅非常豪华，主人把客人带到窗前：你见到有桥了吗？罗马尼亚工程师：没见到。<br>苏联桥梁专家：这就是原因所在！</p>\n<p>122、<br>捷克人先是建造一个东西，剩下的偷光；而苏联人先是偷得差不多了，余下的用来建造。</p>\n<p>123、<br>问：为什么在有苏联侨民的西方商店里会经常发生偷窃行为？<br>答；这是因为他们的意识里有共产主义的残余。</p>\n<p>124、<br>著名的俄罗斯歌唱家维尔京斯基，还是在沙皇时代离开俄罗斯的，这次，他又返回了俄罗斯，他带着两个手提箱从车箱里走出来，他放下皮箱，亲吻着大地，看着周围的人：俄罗斯啊，我都不认识你了！<br>后来，他一看，皮箱不见了：俄罗斯啊，我认出你来了！</p>\n<p>125、<br>问：什么国家最富？<br>答：苏联。它已经被偷了五十多年了，但还没有被偷光。</p>\n<p>126、<br>问：德国在马克思那里继承了什么？<br>答：对于东德来说是共产党宣言，对于西德来说是资本主义。</p>\n<p>127、<br>在苏兹达尔的考古发掘中发现了人们从来不知道的圣经的篇章：世界末日可以在单独的国家到来。</p>\n<p>128、<br>勃列日涅夫问罗马教皇：为什么人们相信罗马天主教的天堂，而不相信共产主义的天堂？<br>罗马教皇：这是因为我们的天堂从来没有让别人看到。</p>\n<p>129、<br>一个乌克兰人被叫到克格勃，<br>问：请你解释一下，你为什么经常有从以色列来的邮件？<br>答：在战争时期，我曾藏匿过一个犹太人。<br>问：你作为一个苏联的乌克兰人，怎么能收这些犹太姥的邮包！你也不为自己的将来着想。<br>答：是，我想过，以后我还要藏中国人。</p>\n<p>130、<br>问：听说在共产主义社会食品可通过电话订购，这是真的吗？<br>答：但是发放的时候要通过电视机。</p>\n<p>131、<br>请问，这就是共产主义，还是会更差劲？</p>\n<p>132、<br>考古学家在挖掘一个石器时代的山洞，在入口处有一标语：万岁，奴隶制度，全人类的光明未来。</p>\n<p>133、<br>问：听说在 1980 年在苏联会建成共产主义，这是真的吗？<br>答：不，现在换成举办奥林匹克运动会。</p>\n<p>134、<br>问：里海鳊是什么？<br>答：这是鲸的一种，它能游到共产主义。如果游不到，说明它是反革命。</p>\n<p>135、<br>问：怎么才能知道共产主义已经到来？<br>答：将在广播和报纸上宣布。如果那时还剩电视的话，还会通过电视宣布。</p>\n<p>136、<br>如果你是外交官，你可以一直在国外；<br>如果你是科学家，你可以每年出一次国；<br>如果你是运动员，你可以四年出一次国；<br>如果你是军人，你要12年才能出一次国。（44年卫国战争反攻，56年波匈事件，68年布拉格之春，79年阿富汗）</p>\n<p>137、<br>两个中学同学相遇然后寒暄。<br>“您现在在哪工作”<br>“中学老师.您呢?”<br>“克格勃。”<br>“啊，您在克格勃具体干什么？”<br>“我们负责揪出那些对国家不满的家伙。”<br>“您的意思是……还有人比较满意？”<br>“哦，那些人不归我们管，负责管他们的是纪委。”</p>\n<p>138、<br>一位年轻人在工作时抱怨道：“这种政府真差劲。”<br>结果被一位秘密警察听到而遭逮捕。<br>年轻人辩解说：“我根本没讲是哪个政府，你怎么可以随便逮捕我呢？”<br>“你少骗人，”秘密警察咆哮道，“我在这里工作二十多年了，哪一个政府差劲我不会知道吗？”</p>\n<p>139、<br>个美国人和一个苏联人被判下地狱。恶魔告诉他们：“你们有两个选择：美国式和苏联式的地狱。在美国式的地狱中，你们什么都可以做，但是每天早上必须吃一桶屎。而在苏联式的地狱中，也可以想干什么就干什么，不过每天早上得吃两桶屎。”<br>美国佬马上选了美国式的地狱。而苏联人则最终选择了自己的祖国。一周后他们又相遇了，苏联人问：“你那如何？”<br>美国人回答：“确实如恶魔说的那样。我的地狱还不错。就是每天一桶屎简直要我命。你那呢？”<br>差不多和你那一样。就是搞不清楚我们那是屎尿遇见了短缺还是有人把桶都偷跑啦”</p>\n<p>140、<br>勃列日涅夫发表广场演说，群众听见“……勃列日涅夫同志的逝世令我们非常难过……”，一片哗然。<br>勃列日涅夫似乎发现了什么，把手伸进口袋摸了一下。<br>“同志们，对不起，离开政治局的时候，我穿了安德罗波夫同志的西装。”</p>\n<p>141、<br>克格勃审核<br>“你爱你的太太吗？”主考官问。<br>“是的。”<br>“你爱你的国家吗？”主考官又问。<br>“是的。”<br>“那一个是你的最爱？”主考官问。<br>“国家。”<br>“好，我们将带你的老婆到这里，你拿这把枪到隔壁房去杀了她。”<br>这男子到了隔壁房，没多久便传出６声枪响，接着又传出压碎声持续着数分钟；<br>此男子带着松垮的领带走出房间，他将手枪放在桌上，主考官看着他<br>并问：“发生什么事？”<br>他说：“你给我的枪都装着空包弹，我只好勒死她。”</p>\n<p>142、<br>赫鲁晓夫访问一所学校。他问一名学生：”你的父亲是谁？“<br>他回答说：”是共产主义！“<br>赫鲁晓夫很满意，他又问：”你的母亲是谁？“<br>他回答说：”是苏联！“<br>赫鲁晓夫又问：”你长大了想当什么？”<br>学生说：“孤儿。”</p>\n<p>143、<br>列宁表明该如何管理国家<br>斯大林表明该如何不管理国家<br>赫鲁晓夫试图表明谁都能管理国家<br>勃列日涅夫正在表明国家是根本不需要管理的</p>\n<p>144、<br>1937年苏联当局征求诗人普希金的逝世百年纪念铜像设计，<br>佳作有以下三件：<br>站在高加索山上眺望远方的普希金，<br>决斗时被子弹击中即将倒下的普希金，<br>艺术女神替普希金戴上月桂冠。<br>但是，优胜作品是….<br>正在阅读普希金作品的斯大林同志。</p>\n<p>145、<br>列车员叫醒一个靠着窗口睡着了的旅客:“同志，你的票子？” “票？什么票？我没有票子！” “没票？那你打算去哪里？” “我什么地方也不想去！” “那你为什么上这列火车？” “上车前，克格勃的同志们刚在大庭广众之下逮捕了一名间谍，大家都在看热闹，我也在看，后来其中一个领头的同志对着我叫到：‘没什么好看的，快上车坐好！’于是我只好走进车厢……” </p>\n<p>146、<br>一个盲人在路上遇到了贝利亚同志。 “您好，贝利亚同志！”盲人抢先打招呼。 “怎么，您看得见我？”贝利亚同志心里很纳闷。 “不，贝利亚同志，那是因为给我引路的狗直往后退的缘故。”</p>\n<p>147、<br>拉宾诺维奇出差，要到三个城市去，它们是：华沙，布拉格，还有巴黎。华沙和布拉格是苏联控制的。 到了华沙，他发给单位一封电报，写着：”自由的华沙万岁！拉宾诺维奇。“ 到了布拉格，他发给单位一封电报，写着：”自由的布拉格万岁！拉宾诺维奇。“到了巴黎，他又发给单位一封电报，写着：”巴黎万岁！自由的拉宾诺维奇。</p>\n<p>158、<br>在一次记者招待会上，有以下问答：<br>问：“今年诺贝尔奖获得者是谁？”<br>答：“赫鲁晓夫。”<br>问：“赫氏有何成就？”<br>答：“他是第一个在西伯利亚播种，去加拿大收获的人。”</p>\n<p>159、<br>有一次，著名的歌唱家科兹洛夫斯基得知斯大林很赏识他，便向斯大林提出一个请求：“我从来没有去过国外，所以我想……”<br>“你不会出逃吧？”<br>“瞧您说的，斯大林同志！对我来说，家乡的村庄比外国可要亲得多。”<br>“不错，好样的！那你就回家乡去吧。” </p>\n<p>160、<br>某日，戈尔巴乔夫召开国民大会:同道们!目前国内形势有些紧张，看大家谅解！一个工人站起曰：我们保证按时上班！戈尔巴乔夫大悦，继续说：再过些时日，大家会更紧张，也许会有人受饿！工人又说：我们可延长时间干！戈尔巴乔夫有些感动：随时间发展，大概会有失业现象。工人回答：没关系，我们将加班玩命的工作。戈热泪盈眶：谢谢，但是最后也许会有人饿死！工人大声说：我们２４小时连续工作，怎么样，总书记？！戈狂奔下主席台，牢牢握住该人的手，说：…我…我该该我该怎麽说呢，您从事何种职业。工人受宠若惊，面露难色说：我……我…我是火葬厂的！</p>\n<p>161、<br>有一次，朱可夫从斯大林的办公室里出来时，怒气冲冲地说：“小胡子魔鬼!”正在接待室的贝利亚听到了这句话，他走进斯大林的办公试冬把这话告诉了斯大林。 斯大林让人把朱可夫叫了回来。“朱可夫同道，您从我办公室出往时说了一句‘小胡子魔鬼’，您是在说谁?”“希特勒!我还能说准呢？斯大林同道！”“贝利亚同道，而您又是在说谁呢?”</p>\n<p>162、<br>“第三次世界大战会发生吗？”“不会！不过争取和平的努力会达到这样的程度：全世界都不会有一块石头保持完整！”</p>\n<p>163、<br>假如鳄鱼吃了勃烈日涅夫会有什么结果？答案是：鳄鱼会连着屙一个星期的勋章。 </p>\n<p>164、<br>勃列日涅夫的噩梦：<br>捷克人坐在红场上吃犹太薄饼——用筷子。 </p>\n<p>165、<br>戈尔巴乔夫在别墅与赖莎一起度假。早上，戈尔巴乔夫穿着条内裤走到阳台上呼吸新鲜空气。<br>“亲爱的，回来穿上睡衣。”赖莎喊道。<br>“赖莎，你是怎么隔着两间屋子看到我的？”<br>“不，我在听自由欧洲电台。”</p>\n<p>166、<br>一天晚间。完成了一天的工作，雅科夫·米哈伊洛维奇·斯维尔德洛夫来弗拉基米尔·列宁的书房小坐。<br>“弗拉基米尔·伊里奇，我们要么开一瓶？”斯维尔德洛夫问。<br>“不干。我绝不再这样了！”列宁断然拒绝，“绝不！”<br>“得了吧，弗拉基米尔·伊里奇！就我们两个！……上次我们开了两瓶，什么也没发生啊？”<br>“还什么都没发生呢！你和捷尔仁斯基回去睡觉去了，可我却爬到辆装甲车顶上，扯了一顿屁话……” </p>\n<p>167、<br>苏联的家具厂生产一种新型号的床：“共产主义型号”。床能轻松塞下三个人，而床沿上则刻着标语：“列宁总与你同在！” </p>\n<p>168、<br>一艘苏联货船被食人族海盗劫持，海盗准备把所有的海员吃掉。船长问道：<br>“亲爱的食人族同志，你们有过集体化吗？”<br>“没有！”<br>“你们有过个人崇拜吗？”<br>“没有！”<br>“你们有过十月节吗？”<br>“没有！”<br>“好吧，那我就真的不能理解你们为什么这么残忍了……”</p>\n<p>169、<br>勃列日涅夫在电视上对公众讲话：<br>“近日在莫斯科有恶毒的流言说我的警卫开的车里不是我而是个假人。我必须得说这是相当肮脏的谎言！他们在给我开车，而不是假人！”</p>\n<p>170、<br>勃列日涅夫在向工人们讲话：<br>“很快我们就能生活得更好！”<br>台下传来一个声音：<br>“我们怎么办？” </p>\n<p>171、<br>勃列日涅夫坐车在莫斯科街头闲逛，突然看到一座纪念碑。<br>“这座纪念碑是谁的？”<br>“契诃夫的，列昂尼德·伊里奇。”<br>“哦，很好。我读过他的《姆姆》。”<br>“抱歉，列昂尼德·伊里奇，《姆姆》不是契诃夫写的，而是屠格涅夫。”<br>“哦，真的么？那这可真蠢。”勃列日涅夫评论道，“《姆姆》是屠格涅夫写的，可契诃夫却得到了纪念碑！”</p>\n<p>172、<br>科学家联名要求赫鲁晓夫去领导一个癌症治疗所。赫鲁晓夫推脱道：“谢谢同志们的支持，但我对癌症一窍不通啊。”<br>科学家们纷纷说道：“赫鲁晓夫同志，您只要应用一下您在农业问题上的经验就好了！您一负责，粮食就全不见了！” </p>\n<p>173、<br>-为什么在斯大林的遗体被移出列宁墓后，陵墓的看守反而加倍了？<br>-因为他们发现赫鲁晓夫曾经抱着铺盖卷在附近晃悠。</p>\n<p>174、<br>塔斯社通讯：<br>“……昨天在莫斯科发生了一起针对勃列日涅夫同志的失败暗杀事件。子弹穿透汽车的防弹玻璃，击中勃列日涅夫同志胸前的勋章，随后反弹并打死了司机。” </p>\n<p>175、<br>科学家发明了一种电脑，能够计算出与共产主义的距离。在勃列日涅夫的监督下，科学家输入了所有的信息，计算机开始计算。一天、两天，三天……最终计算机得出了结果并打在了卡带上：18千米。<br>科学家十分震惊。肯定是算错了！他们重来了一次，还是这个数字！<br>学院的锅炉工突然懂了什么：<br>“同志们，朋友们，数据没有错！勃列日涅夫同志告诉过我们，每一个五年计划都能让我们向共产主义迈进一步！”</p>\n<p>176、<br>尼克松先生访问莫斯科，赫鲁晓夫带着他参观首都，尤其是各个新建住宅区。<br>“那些是什么？”尼克松突然问道。<br>“你什么意思啊？”赫鲁晓夫傲慢地反问，“电视机。”<br>“好啊！”尼克松赞叹道，“你们不只已经赶上了我们，在一些地方甚至已经超过了我们。”<br>“哪里？”赫鲁晓夫欣喜若狂。<br>“比如说吧，我们从不在猪圈里安装电视机。” </p>\n<p>177、<br>斯大林就要死了，他把赫鲁晓夫招来：<br>“尼基塔·谢尔盖耶维奇，我知道你会继承我并超越我，”斯大林说，“我给你准备了两封信。如果你遇到了危机，就拆开第一封；如果再遇到，就拆开第二封。”<br>赫鲁晓夫拿走了两封信。1956年，他遇到了匈牙利和苏伊士危机。于是赫鲁晓夫拆开了第一封信，上面写着：“都怪在我头上！”于是苏共二十大召开，斯大林主义终结了。<br>1964年，赫鲁晓夫又碰上了勃列日涅夫和柯西金的政变，于是他拆开第二个，只见上面写着：<br>“准备两封信。”</p>\n<p>178、<br>问：能够用香蕉当指南针吗？<br>答：可以。把香蕉放在柏林墙上，香蕉被从哪边抽走哪边就是东边。 </p>\n<p>179、<br>“奶奶，列宁好吗？”<br>“当然，孙子，他很好。”<br>“斯大林呢？他坏吗？”<br>“坏，当然坏。”<br>“赫鲁晓夫呢？他怎么样？”<br>“等他死了，我们就知道了。” </p>\n<p>180、<br>党代会。斯大林发言：<br>“今天我们有两个问题要讨论。第一，我们需要枪毙所有的政治局委员。第二，我们需要把列宁墓涂成亮绿色。”<br>观众席中传来了一个怯怯的声音：<br>“为什么涂成亮绿色？”<br>“很好，我就知道大家对问题一没有不同意见。”</p>\n<p>181、<br>在入党审批过程中有一个问题是：“你怎么看待苏联政府？”<br>一人回答：“就像看待我妻子一样。”<br>“怎么解释？”<br>“第一，我爱她；第二，我怕她；第三，我想换一个。” </p>\n<p>182、<br>在莫斯科红场，人们正排队参观列宁墓卫兵换岗。一个小孩问：<br>“爸爸，为什么他们总是要看守这陵墓？”<br>“他们不是一直说吗？”父亲答道，“列宁是永生的。如果他看不下去了决定出来怎么办？” </p>\n<p>183、<br>斯大林招来著名作家肖洛霍夫。<br>“我已经读了你的小说《新垦地》。写得非常好，我喜欢。我想，你为啥不写一篇文章，就叫《敌人不投降，就叫他灭亡》？”<br>“我害怕我写不好，斯大林同志。最近我的健康状况不好。”<br>“我们会帮你的。我们会把你送到格鲁吉亚去，那里有酒有葡萄。”<br>“好吧，斯大林同志。那请让我和家人到个别。”<br>“为什么？”<br>“我怕我的文章不成功。”</p>\n<p>184、<br>一个外国代表团突击访问了一个集体农庄。没时间准备。代表团走后，集体农庄主席拉过区党委书记说：<br>“你们没提前告诉我，所以他们都看见了。牛栏的废墟，那些灰尘，我们的贫穷。”<br>“别担心。”党书记说道。<br>“不过他们现在就能传的满世界都知道啊。”<br>“那就让他们沉浸在一贯的造谣中伤里吧。”党书记答道。 </p>\n<p>185、<br>在格鲁吉亚共和国的学校中，老师正在让学生说说自己的父亲。<br>“图拉什维里，说说你的父亲。”<br>“我爸爸种橘子。他把它们带到莫斯科销售，赚了不少钱。”<br>“你了，布里泽。”<br>“我爸爸种月桂叶。他把它们带到莫斯科销售，赚了不少钱。”<br>“你了，克里维泽。”<br>“我爸爸在反贪污和投机倒把分局工作。每次布里泽和图拉什维里的爸爸去莫斯科的时候都回去看看我爸爸。因此他赚了不少钱。”<br>“你了，查维查瓦泽。”<br>“我爸爸是生物工程师。”<br>全班大笑。<br>“孩子们。”老师严肃地说，“不要把快乐建立在别人的悲伤之上。”</p>\n<p>186、<br>全世界进行对关于大象的最佳书籍的评奖大赛。<br>法国人递交了一册精装的《大象家庭内的三角恋研究》<br>英国人提交了一套《大象与世界贸易》<br>德国人提交了24卷本的一套《大象学综介》<br>美国发放了一百万份传单，上面写着：“赢大象，不需购买。”<br>苏联提交了三卷书，题目如下：<br>《第1卷：大象在伟大的十月社会主义革的命中的作用》<br>《第2卷：大象在世界上最进步的苏联社会的光芒中的快乐生活》<br>《第3卷：苏联——大象的祖国》</p>\n<p>187、<br>一个卫兵问政治犯：<br>“刑期多久？”<br>“十年。”<br>“犯了什么罪？”<br>“没犯罪。”<br>“你撒谎！没犯罪他们只给判5年！” </p>\n<p>188、<br>一个日本工人被派到俄罗斯维修日本产的机械。日本人每天工作8小时，不和别人说话。一个月后他的工作期满。在他返回日本之前，日本人眼含泪水地对大家说：“我道歉，我的好工人同志们。我知道工人们应该团结起来，但我有合同在身，我不得不工作，我为没有参与你们的长期罢的工而向你们正式道歉！” </p>\n<p>189、<br>苏联人、法国人和美国人争论什么是最勇敢的人。<br>美国人说：“举例来讲，我们有十辆汽车，其中一辆没有刹车。我们抽签，每人搭一辆开山路。最后我们中的一个人住院，另外九个去看他。”<br>“这不算什么。”法国人说，“我们选10个女孩，其中有1个有艾滋病。我们抽签，一人找一个女孩。最后一个人住院，另外九个去看他。”<br>苏联人说：“我们聚在公寓里，即便知道我们中有一个告密者。我们讲了一晚上政治笑话，然后九个人进了监狱，另外一个去看他们。”</p>\n<p>190、<br>一个人把自己的车停在了莫斯科红场上。卫兵赶快跑来，向他怒吼：<br>“你疯了么？这是政府所在地！”<br>“没问题。”那人答道，“我的锁很结实。” </p>\n<p>191、<br>一个妇女走进食品商店。<br>“你们卖肉吗？”<br>“没有。”<br>“牛奶呢？”<br>“我们这儿只处理肉，对面那家才是没有牛奶的。”</p>\n<p>192、<br>在奥运会上，苏联掷铁饼（注：在英文中铁饼实为“锤子”，Hammer）选手打破了世界纪录。记者采访他问：<br>“你是怎么把锤子抛的那么远的？”<br>“如果再搭上个镰刀，我能扔出两倍远。” </p>\n<p>193、<br>苏联社会七大谜题：<br>1、总是没人工作，计划却总是完成；<br>2、计划总是完成，可（商店）柜台总是空的；<br>3、柜台总是空的，可却没人挨饿；<br>4、没人挨饿，可所有人都不高兴；<br>5、所有人都不高兴，可是没人抱怨；<br>6、没人抱怨，可是监狱却人满为患。</p>\n<p>194、<br>为了解决黄油短缺问题，政治局要求苏联科学家研究技术，把粪便做成黄油，并在十月革命周年纪念期间完成。在六个月的工作之后，政治局要求进展报告。科学家报告称他们实现了50%的成功。政治局要求解释，答复如下：<br>“人们已经可以把它涂在面包上，但尚不会去吃。” </p>\n<p>195、<br>一只兔子在街上狂奔。<br>“你跑得这么快，慌什么？”熊问。<br>“你不知道么？他们现在在逮捕所有的骆驼，还要阉割他们。”<br>“可你是兔子不是骆驼啊。”<br>“对，不过假设他们逮到你，在他们阉掉你之后你就能证明你不是骆驼了！” </p>\n<p>196、<br>一个犹太人申请移民去以色列。据他说，他的哥哥在以色列病得很重，需要帮助。办公室的官员问他：<br>“那为什么不让你的哥哥来这里，而要你亲自过去？”<br>“我的哥哥是得了病，但还没有得精神病。”</p>\n<p>197、<br>问：什么被允许，什么被禁止？<br>答：在英国被允许的被允许，被禁止的被禁止；在美国不被禁止的都被允许；在德国不被允许的都被禁止；在法国什么都被允许，包括被禁止的；在苏联什么都被禁止，包括被允许的。 </p>\n<p>198、<br>问：什么是最短的笑话？<br>答：共产主义。<br>问：什么是最长的笑话？<br>答：赫鲁晓夫在党代会上的讲话。 </p>\n<p>199、<br>问：如果社会主义在格陵兰建成会怎样？<br>答：首先，雪只有在有配给票时才会下，其次它只会被分配给克格勃军官和他们的家属。</p>\n<p>200、<br>问：什么单词以R开头且没有结尾？<br>答：重组（Reorganization）。 </p>\n<p>201、<br>问：尼克松来莫斯科时，他和赫鲁晓夫绕克里姆林宫赛并跑了第一，我们该怎么报道？<br>答：“在国际长跑比赛中，我们的第一书记同志获得了光荣的第二名，尼克松先生则为倒数第二。”</p>\n<p>202、<br>-我的妻子已经在厨艺学校学了三年了。<br>-哇，那她的厨艺一定很好咯？<br>-没有，她们刚学习到苏共第二十次代表大会。 </p>\n<p>203、<br>-爸，您能给我套车钥匙么？<br>-好，别丢了，儿子，七年之后我们就会领到车！ </p>\n<p>204、<br>-我想预定一辆小汽车。需要多久？<br>-从今天开始正好十年。<br>-上午还是下午？<br>-有区别么？<br>-那天上午我们还请了管子工。 </p>\n<p>205、<br>监狱里两个囚犯正交流经验。<br>“你是因为政治犯罪被捕的么？”<br>“当然。我是个管子工，被党委员会叫去修下水管。我看了看，说，‘整个体系都该换换了’，于是我就被判了7年。”</p>\n","site":{"data":{"gallery":{"图片名称":{"full_link":"http://miccall.tech/img/twx.jpg","thumb_link":"http://miccall.tech/img/twx.jpg","descr":"图片描述"}},"links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}},"_links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}}}},"excerpt":"<p>序曲</p>\n<p>一位内务人民委员部审判员结束一天的审判工作，回到办公室，突然独自大笑起来。<br>对面办公桌的同事奇怪的问道：“有什么好笑的事吗？”<br>“是啊，”审判员用手帕擦着笑出来的眼泪：“一个很好笑的笑话……”<br>“哦？说来听听？”<br>“你疯了吗？！我刚判了说这笑话的家伙五年苦役！”</p>","more":"<p>1、<br>内务人民委员部的一间牢房里关了三个人，彼此间谈起坐牢的原因。<br>第一个人说：“我因为反对党委书记彼得罗夫。”<br>第二个人说：“我因为支持彼得罗夫。”<br>第三个人说：“我就是彼得罗夫。”</p>\n<p>2、<br>美国外交代表团到苏联访问，苏修接待官员陪他们参观“建设的伟大成就”，并且得意的说：“到了下一个五年计划，每个苏联家庭都可以拥有一架私人飞机！”<br>美国人惊讶的问：“ 他们要飞机干什么呢？”<br>苏修官员说：“当然有用啊……譬如你在莫斯科听说列宁格勒开始供应面包了，你可以马上开飞机赶去排队啊。”</p>\n<p>3、<br>一位公民打电话到基辅电台问主持人：“共产主义到底是艺术还是科学？”<br>主持人说 ：“我也不清楚，但我肯定不是科学”<br>“为什么？”<br>“如果是科学的话，他们应该拿狗做试验。”</p>\n<p>4、<br>苏修穷兵黩武，军中物质紧缺。<br>军需处长在一名下士的陪同下到兵营视察物质供应情况。他们走到油料库附近，在地上发现一个烟头。军需处长不满的说：“这是谁的烟头？！”<br>下士看了看四周，欣喜的说：“看来谁的也不是，上校同志，赶快拣起来吧！”</p>\n<p>5、<br>苏联领袖被邀请到法国巴黎访问。法国官员带他到处看看，他对国防总部、巴黎地下铁、凯旋门、国画馆、高速公路网和闻名世界的TGV快铁都不感兴趣。当法国官员带他到巴黎艾菲尔铁塔前时，他忽然对铁塔很感兴趣。他对法国官员问道：“啊哈！巴黎是不是有九百万人口？”<br>法国官员：“您说的一点都不错。”<br>领袖洋洋得意道：“哈哈，终于找到了，原来你们巴黎九百万人共享一台钟塔！”</p>\n<p>6、<br>地狱有个规矩，谁在人间害了人，被害人的血将淹此人。<br>一次上帝去地狱视察，发现血只浸到贝利亚的腿。上帝就很奇怪，问到：“你杀了这么多人，怎么血只及腿呢？”<br>贝利亚答道：“因为我站在伟大领袖斯大林的肩上！”<br>【贝利亚：苏联秘密警察首脑】<br>7、<br>赫鲁晓夫到处作报告，一天，他去某疯人院作报告，事先该疯人院负责人把疯子召集起来叮嘱：“在赫同志作完报告后要热烈鼓掌”。赫作完报告后果然博得了长时间经久不息的掌声，赫非常得意。但他突然发现，其中有一个人没有鼓掌，他顿时大发雷霆。赫问：“ 你为什么不鼓掌？”此人答曰：“我的疯病已经治好了。”</p>\n<p>8、<br>斯大林、赫鲁晓夫和勃列日涅夫乘坐火车出门。开着开着，火车突然停了。<br>斯大林把头伸出车窗外，怒吼道：“枪毙火车司机！”可是车还是没有动。<br>接着赫鲁晓夫说：“给火车司机恢复名誉！”车仍然没有动。<br>勃列日涅夫说：“同志们，不如拉上窗帘，坐在座位上自己摇动身体，做出列车还在前进的样子……”</p>\n<p>9、<br>苏联的一次大会上，主持人突然说：下面请认为社会主义好的同志坐到会场的左边，认为资本主义好的同志坐到会场右边。大部分人坐到了左边，少数人坐到右边，只有一个人还坐在中间不动。<br>主持人：那位同志，你到底认为社会主义好还是资本主义好？<br>回答：我 认为社会主义好，但是我的生活像是资本主义。<br>主持人慌忙说：那请您赶快坐到主席台上来。</p>\n<p>10、<br>列宁快去世了，叫赶快把继承人斯大林召进克里姆林宫来，临终有几句话要嘱托：“不瞒你说，我还有一个隐忧啊，斯大林。”<br>“说吧，亲爱的伊里奇。”斯大林专心地听着。<br>“ 那就是，人们会跟你走吗？不知你想过了没有？”<br>“他们一定会跟我走的。”斯大林强调说，“一定会！”<br>“但愿如此。”列宁说，“我只是担心，万一他们不跟你走，你怎么办？”<br>“那只好让他们跟你走！”</p>\n<p>11、<br>社会主义者、资本主义者、共产主义者商定要见一面。社会主义者过了约会的时间才到。<br>——“对不起，我去排队买香肠来着。”<br>——“什么是排队？”资本主义者问。<br>——“什么是香肠？”共产主义者问。</p>\n<p>12、<br>数学和科学社会主义有什么区别？<br>在数学上，如果给出什么东西，都需要证明，而科学社会主义什么都能证明，就是什么也不能提供。</p>\n<p>13、<br>马克思想在苏联发表广播演说。勃列日涅夫对他说：“虽然您是奠基人，但是我一个人不敢决定那么重大的问题。我们是集体领导。”<br>“我只想说一句话！”<br>最后，勃列日涅夫只允许他说一句话，并且要他自己负责。马克思凑近话筒，大声说道：<br>“全世界的无产者，请原谅我！”<br>**有的版本还有一个补充的结尾：<br>列宁看到苏联现在建设的社会主义，说：看来我要回到瑞士去，以便重头开始“</p>\n<p>14、<br>有个人向赫鲁晓夫汇报说：“现在大剧院正上演一个剧，里面有您出现，每当您一出场，下面就热烈鼓掌。”赫鲁晓夫听了以后非常得意。有一天他买了一张普通票，去看这个剧，他陷入了沉思，忘记了鼓掌，这时旁边有人推了他一把，紧张地说：“哎！你为什么不鼓掌？不要命啦？！”</p>\n<p>15、<br>在苏共二十三次代表大会上，勃列日涅夫作报告，他问：“我们这里有没有敌人？”一个人回答：“有一个，他坐在第四排第十八号位子上。”勃问：“为什么他是敌人？”回答：“列宁说过敌人是不会打瞌睡的，我发现全场只有他一个人没有打瞌睡！”</p>\n<p>16、<br>演讲人在做关于五年计划成就的报告：在列宁格勒新建了一个电站。<br>大厅里有人说：“我刚从那回来，那没有什么电站。”<br>演讲者没有回答，继续说：“在斯大林格勒已建成了一个化学厂。”<br>大厅里有人说： “一周前我在那里，那里没有什么化学厂。”<br>演讲人：“同志们，你们最好少东游西逛的，要多看一些报纸！比如《真理报》！” </p>\n<p>17、<br>斯大林在大会上引经据典地说：“马克思和列宁说1+1&#x3D;2，而托洛茨基和布哈林说1+1不等于3。是托洛茨基和布哈林说的对呢？还是马克思和列宁说得对呢？”下面听众一脸疑惑，“毫无疑问，是马克思和列宁说的对！”底下热烈鼓掌，“托洛茨基和布哈林是帝国主义派来的间谍，说1+1不等于3的人罪不容赦……”</p>\n<p>18、<br>集体农庄庄员伊万在河里捉到一条大鱼，高兴的回到家里和老婆说：“看，我们有炸鱼吃了！”<br>“没有油啊。”<br>“那就煮！”<br>“没锅。”<br>“烤鱼！”<br>“没柴。”<br>伊万气死了，走到河边把鱼扔了回去。那鱼在水里划了一个半圆，上身出水，举起右鳍激动地高呼：“斯大林万岁！”</p>\n<p>19、<br>“瑞典能否建立共产主义”？<br>“不能。”<br>“为何？”<br>“列宁同志说了：共产主义不在山那边。”</p>\n<p>20、<br>美术馆里有一幅描写亚当和夏娃的画。<br>一个英国人看了，说：“他们一定是英国人，男士有好吃的东西就和女士分享。”<br>一个法国人看了，说：“他们一定是法国人，情侣裸体散步。”<br>一个苏联人看了，说：“他们一定是苏联人，他们没有衣服，吃得很少，却还以为自己在天堂！</p>\n<p>21、<br>一老者人行道闲溜，不慎落入道旁河中。随高呼救命！<br>两警察闻之，视若不见，仍边走边谈笑如旧。<br>老者情急生智，随又高呼“打倒勃列日涅夫”！两警察闻之大惊，随急速跳入河中，将老者拖上岸来铐之。</p>\n<p>22、<br>某日苏联举行国庆游行，沿着大街开来了炮兵、机械化步兵、坦克、自行火炮、战术导弹、战略核导弹，破坏力一个比一个大；队列末尾却是两个带公文包的矮子。<br>在看台上勃列日涅夫惊讶地说：“这两个人破坏力比核导弹还大！他们是什么人？”<br>克格勃头子说：“不是我的人。”<br>国防部长说：“没见过他们。”<br>苏联总理说：“他们是国家计委的……”<br>【计委：计划经济委员会&#x2F;纪委：纪律检查委员会】</p>\n<p>23、<br>勃列日涅夫,杜布切克(捷克总书记),英国首相和美国总统,4人乘坐气球.<br>气球漏气了,抬不动4人,开始下坠,万分危机,必须有人牺牲自己跳出.<br>先是美国总统喊了声”为了自由世界!”,然后跳了出去.气球下坠暂缓,但过一会儿漏气更多,下坠又加快,必须再跳出1人.<br>于是英国首相喊:”为了女王陛下!”,跳了出去.<br>暂缓一会儿又不行了,于是勃列日涅夫喊道:”为了社会主义大家庭!”说着就把杜布切克扔出去了.</p>\n<p>24、<br>一个莫斯科市民的鹦鹉丢了。这是只会骂人的鹦鹉，要是落到克格勃的手里可糟了。这人便在报纸上发表了一篇声明：“本人遗失鹦鹉一只，另外，本人不同意它的政治观点。”</p>\n<p>25、<br>一个英国人,一个法国人,一个苏联人谈论什么是世界上最幸福的事<br>英国人：最幸福的事情就是冬天晚上回家，穿着羊毛裤坐在壁炉前面。<br>法国人：你们英国人就是古板，最幸福的事情是和一个金发女郎一起去地中海度假，然后我们好和好散。<br>苏联人：最幸福的事情就是半夜有警察敲门，开门后：伊万，你被捕了。<br>…：你弄错了，伊万在隔壁。</p>\n<p>26、<br>话说勃烈日涅夫同志当上苏共中央总书记之后，将在乡下的老母亲接到了莫斯科。老太太来了以后，勃列日涅夫得意洋洋地向老妈展示了一番自己的豪华别墅、高级汽车、名贵家具等等，展示完了后，勃列日涅夫问老太太这一切如何？老太太说：“儿子啊，这一切都很好，但是，共产党来了你怎么办？”</p>\n<p>27、<br>勃列日涅夫和美国总统卡特在瑞士开会，休息时间两个人很无聊，就开始比谁的保镖更忠诚。卡特先来，他把自己的保镖叫进来，推开窗（外面是20层楼）说： “约翰，从这里跳下去！”约翰哭着说：“你怎么能这样呢，总统先生，我还有老婆孩子呐。”卡特被感动了，流着泪说是自己不对，叫约翰走了，然后抡到勃列日涅夫，他也大声叫自己的保镖伊万。“伊万，从这里跳下去！”伊万二话不说就要往下跳，卡特一把抱住他说：“你疯了？跳下去会死的！”伊万一边挣扎着要跳下去一边说：“放开我，混蛋，我还有老婆孩子呐。”</p>\n<p>28、<br>列宁的夫人曾经当面指出斯大林的专制独裁统治，令后者气急败坏，斯大林说：“你再说，我就宣布你不是列宁的妻子！</p>\n<p>29、<br>古巴举行盛大五一节游行，卡斯特罗率党和国家领导人全体出席，检阅游行队伍。就在游行队伍通过主席台的时候，卡斯特罗同志突然发现人群中有一个人掏出一块新手帕擦了擦鼻子，于是他马上对身边的一位政治局委员道：“我敢打赌，这个拿手帕擦鼻子的人里面没穿内裤！”委员不以为然，难道卡斯特罗同志真长了透视眼不成？他马上命令警卫把那个人叫道跟前，亲自询问，吃惊地发现，这人长裤里面果然是光着的。委员敬佩地问领袖：“卡斯特罗同志，您是如何知道透过外衣看见他没穿内裤的？”卡斯特罗回答：“我看见他掏出了新手帕，他的布票显然没用来买内裤嘛。”众人大惊，无不佩服领袖超凡的洞察力……</p>\n<p>30、<br>美国人登月成功后,勃列日涅夫当天就打电话给苏联宇航员：“鉴于美国人已经在月球上登陆，现在苏联决定，马上派你们去太阳登陆”。宇航员大惊，哽咽道： “您不知道吗，勃列日涅夫同志，我们会被烧死的”。勃列日捏夫生气地说：“你以为政治局没有考虑过吗？我们已经决定，派你们在晚上在太阳登陆！”</p>\n<p>31、<br>一个美国代表团要访问一个苏联的工厂，当局就预先教工人要怎样回答代表团的提问。代表团来后问一个老工人你每月的工资是多少，老工人回答有3000卢布；代表团又问他有多少存款，他回答有10万卢布；代表团问：你存了这么多钱准备干什么呢？老工人回答说：“我准备买一双靴子。”</p>\n<p>32、<br>二战结束后一个波兰农村老太看到街上贴着的照片就说像自己的外甥<br>别人训斥她：瞎说什么，这是斯大林同志<br>老太：他是干什么的？<br>答：他赶跑了纳粹<br>老太急切地问：他能不能把俄国人也赶跑啊？</p>\n<p>33、<br>老师在莫斯科街上碰到以前的学生斯基洛夫（已经当了克格勃）。<br>老师说：现在的学生学习可真不象话，上课时我问他们《叶甫盖尼·奥涅金》是谁写的，他们居然没人回答；逐个问，居然都说“不是我写的”<br>斯基洛夫：这是一个问题，这件事交给我吧<br>过了一周，斯基洛夫兴致勃勃地找到老师：我审了他们几天，事情解决了；伊万那小子招了，是他写的<br>老师：…………<br>【《叶甫盖尼·奥涅金》：普希金的著名作品】<br>34、<br>去买报纸，要一份《真理报》。报贩回答：《真理》没有了，只有《消息》。 </p>\n<p>35、<br>苏联赫鲁晓夫访问美国，美国总统送一最新高科技电话，曰，上可打天堂，下可打地狱，中可打人间，乃美国最新高科技产品。<br>赫鲁晓夫回国后，一日想起，拿起电话拔通天堂。“喂，你好，请帮我转列宁同志。”“请稍侯…”电话那边接线生答道，“对不起，查无此人，请查清号码再拔”<br>老赫一想，莫非导师不在天堂，在地狱？于是拨到地狱。“喂，你好，请帮我转列宁同志。”“请稍侯…列宁同志在线，现在就帮您转过去”<br>老赫于是将最近几十年的革命形势和国际斗争局势一五一十地向导师作了汇报，并听取了导师的指导。<br>月底，电话费清单寄来，老赫一看大惊！打到天堂的问询电话不过1分钟却收费100美元，打到地狱的1个多小时汇报和批示，却才1美元。大惑不解，遂电话问询美国总统－－这是为何？<br>美国总统在大洋彼岸答曰：“事情是这样的，你们苏联打电话到天堂是长途，打电话到地狱却是市话，所以…”</p>\n<p>36、<br>一日，某君站在柜台前观看。一大脑标价50万美元，某君定睛一看，克林顿大脑。心下叹服，果然是美国总统，不同凡响。再看，另一大脑标价100万美元，乃爱因斯坦大脑，某君再叹，果然是天才天价，值！<br>还看，见一大脑标价200万美元，是朝鲜某相国大脑。某君大惑不解，问售货小姐何故。<br>小姐从容答道，小克老爱大脑虽好，却是用旧的二手货。此相国大脑却是全新，从未用过，故此价值200万！</p>\n<p>37、<br>赫鲁雪夫和肯尼迪交谈，各自吹嘘，肯尼迪说：“美国医学发达，有种药片死人吃了可以复活。”赫鲁雪夫说：“苏联体育发达，有人十分钟可以从莫斯科跑到美国。”肯尼迪要求兑现，赫鲁雪夫慌了手脚，召集文武大臣商量对策，有人出了个好计策说：“这很好办，你先让肯尼迪把药片拿来，让斯大林吃了，那斯大林一定复活，那么你用不了五分钟就可以从苏联跑到美国。”</p>\n<p>38、<br>赫鲁晓夫在苏共二十大揭露斯大林的暴行时，台下有人递条子上去。<br>赫鲁晓夫当场宣读了条子的内容：“赫鲁晓夫同志，当时你在干什么？”。<br>然后问道：“这是谁写的，请站出来！”。<br>连问三次，台下一直没有人站出来。<br>于是赫鲁晓夫说：“现在让我来回答你吧，当时我就坐在你的位置上。”</p>\n<p>39、<br>叶利钦、克林顿和金2，在森林里散步，遇到一只恶狼。<br>狼拦住小克说，俺要吃你。小克慌道，狼啊狼啊，别吃俺，俺给你美元。狼一想，也行。<br>于是走到老叶跟前说，俺要吃你。老叶忙说，俺俄罗斯虽没钱，但俺有美女，给你美女，放俺一马。狼一想，也行罢。<br>狼这回到了金2跟前，说，俺要吃你。<br>金2的拍大腿，说，俺不怕你！<br>狼吃惊道，小克老叶都怕俺，你为何不怕？金2说，俺不怕你，因为俺身后有200万朝鲜痨冻党员，所以俺不怕你。<br>狼卟通一声跪下，声泪俱下说：“总书记啊，俺终于找到组织了！</p>\n<p>40、<br>勃列日涅夫即将访问波兰，波兰当局命令一位著名画家创作一幅名为《勃列日涅夫在波兰》的大型油画作为献礼。很不情愿的画家在威逼下接受了工作。画完成后，波兰一高官前来验收，结果让他大吃一惊：画面上是一男一女在豪华的大床上极尽缠绵，窗外的风景是克里姆林宫。“这是什么？这女的是谁？！”高官愤怒的问。“勃列日涅夫的夫人。”画家答道。“男的呢？！”“勃列日涅夫的秘书。”“可勃列日涅夫同志在哪里？”“勃列日涅夫在波兰。”画家答道。</p>\n<p>41、<br>苏联领导人坐火车旅行。铁轨到了尽头，火车停下。<br>列宁号召：“立即发动无产者搞星期六义务劳动，修铁路，直通共产主义！”<br>斯大林抽着烟斗，严肃地下令：“给我调100万劳改犯来，修不通铁路，统统枪毙。”<br>赫鲁晓夫敲着皮鞋喊：“把后面的铁路接到前面去，火车继续开！”<br>勃列日涅夫挥舞着双手说：“坐在座位上自己摇动身体，做出列车还在前进的样子。”<br>最后，戈尔巴乔夫沉思道：“把火车拆了，到有铁轨的地方再拼装起来。”<br>于是苏联解体了。</p>\n<p>42、<br>幼儿园.小女孩写了首小诗朗诵起来:<br>我家有只大花猫,生下三个猫宝宝,猫眯个儿还没长,喵喵喵喵都入党…<br>园长大喜,夸奖一番:党委下来检查,乖乖你就上吧…<br>检查团来了,小孩朗诵道:<br>我家有只大花猫,生下三个猫宝宝,猫眯个儿还没长,喵喵两个都入党…<br>园长低声提醒:三个,不是两个…<br>小孩委屈道:可是…可是另一只已经睁眼了…</p>\n<p>43、<br>老布什、戈尔巴乔夫、和邓小平各开一辆车，到了一十字路口，上面有两个路牌：东—〉社会主义；西—-〉资本主义，布什连看都不看一拐就走西边去，戈尔巴乔夫到了，左想右想，犹豫了一会还是向西拐了。最后是邓小平，只见他手脚麻利地把两个牌子互换了一下，向着“社会主义”方向前进了。 </p>\n<p>44、<br>一个苏联人准备移民去美国，上级知道了很不高兴。于是组织了一个委员会给他做思想工作，领导说：“同志，你为什么要去美国？是因为不满意没有好吃的？” “不是。”“是因为不满意住房条件太差？”“不是。”“是因为不满意工资水准太低？”“不是。”“那我们不明白了，你没有什么不满意的，为什么要去美国？”“因为在美国，我可以有不满意。”</p>\n<p>45、<br>美国宇航员和苏联宇航员同时登上了月球。苏联宇航员宣布月球属于苏维埃政权，美国宇航员得到来自休斯敦的命令：“不要与苏联人发生冲突”。于是，美国宇航员眼睁睁看着苏联人把整个月球漆成红色然后扬长而去。这时，他们得到了来自休斯敦的指令：“ 在上面写上白色的COCA COLA。”</p>\n<p>46、<br>克里姆林宫，勃列日涅夫拿起通往埃及总统府的电话：“我是勃列日涅夫，我要和萨达特总统的遗孀讲话！”<br>“遗孀？ 萨达特总统可一直都活着呀？”电话另一端传来惊讶的声音。<br>老勃放下电话，冲身旁的克格勃头子大喊：“混蛋！为什么把原订的行动时间推迟了？”</p>\n<p>47、<br>一位莫斯科市民在公交车上：“您好同志，请问您是克格勃吗？”<br>“不是。”<br>“那您的家人或直系亲属有在克格勃工作吗？”<br>“没有。”<br>“那您有朋友在克格勃吗？”<br>“没有。”<br>“那您把脚拿开好吗，您踩到我脚了”</p>\n<p>48、<br>勃列日涅夫执政时期，政局混乱<br>有个人骂了句勃列日涅夫是傻子，结果无期了<br>本来他只要判两年，结果法官说他泄露了国家机密，就无期了</p>\n<p>49、<br>对苏联知识分子来说有五个规则：<br>什么都别去思考；<br>如果你一定要思考，不要说出来；<br>如果你又要思考又要说，那就别写出来；<br>如果你又思考又说还写，那么别签名；<br>如果以上规则你都不遵守，那你就别感到吃惊</p>\n<p>50、<br>斯大林在办公室发现了老鼠。他跟加里宁省主席抱怨这事，后者想了一会说：“你干嘛不立个牌子上面写着：‘集体农庄’？这样一半老鼠会饿死，另一半则会跑掉”</p>\n<p>51、<br>伊万诺维奇入党。这以前他必须经过党委会面试<br>伊万诺维奇同志，你抽烟吗？”<br>“时不时抽一些”<br>“你知道列宁同志不抽烟而且号召其他同志也不抽烟吗？”<br>“既然列宁同志这样说，我会戒烟的”<br>“你喝酒吗？”<br>“喝一点”<br>“列宁同志强烈反对酗酒”<br>“那么我会戒酒的”<br>伊万诺维奇同志，你对女人怎么看？”<br>“有一点。。。。”<br>“你知道列宁同志强烈谴责不道德行为吗？”<br>“既然列宁同志这么看，那么我不会再爱女人啦”<br>“IVANOV同志，你随时准备着为党作出牺牲吗？”<br>“当然。谁愿意这么活着？（WHO NEEDS SUCH LIFE？）”</p>\n<p>52、<br>“将军的儿子能成为元帅吗？”<br>“不可能。元帅都有儿子”</p>\n<p>53、<br>勃列日涅夫访问印度时，大批印度人到机场欢迎勃列日涅夫。勃列日涅夫便问当时的印度总理英甘地，你是用什么办法让这么多人来欢迎我的？英甘地回答：凡是来欢迎你的人，都能够得到5个卢比（印度货币）的奖励。<br>后来英甘地到苏联访问时，成千上万的苏联人从机场到莫斯科市内的道路上夹道欢迎。英甘地问勃列日涅夫：你是用什么办法让这么多人来欢迎我的？勃列日涅夫回答：凡是不来欢迎你的莫斯科人，每人罚款5卢布（苏联的货币）</p>\n<p>54、<br>戈尔巴乔夫视察一个集体农场，农场书记抱怨说：这里所有的小猪都长得不错，唯有一只总是病歪歪的。戈尔巴乔夫一听说到：交给我吧，同志。戈尔巴乔夫带回小猪弄了一周眼看不行了小猪要死掉了，于是大清早把小猪放在婴儿车里要丢掉，不巧碰上了米高扬，米高扬笑着说：总书记同志，这么早就出来啦！戈尔巴乔夫神色慌张的说：哦，可不是嘛，我的小孙子闹得不行，带出来透透气。米高扬走到婴儿车前看了一眼说：哦，多好的孩子，长的真像他爷爷！</p>\n<p>55、<br>亚历山大、凯撤、拿破仑做为贵宾，参加红场阅兵。<br>——我要是有苏联的坦克，我将是战无不胜的！亚历山大说。<br>——我要是有苏联的飞机，我将征服全世界！凯撤说。<br>——我要是有真理报，世界现在也不会知道滑铁卢！拿破仑说。</p>\n<p>56、<br>“苏联和英国的童话传说有什么不同？”<br>“英国童话的开头通常是：‘很久很久以前……’而我们的则是；‘不远了，不远了……</p>\n<p>57、<br>斯大林做报告说：……共产主义已经出现在苏联的地平线上了……<br>老工人不知道什么是地平线，回家后问儿子，儿子说：地平线就是能看到却永远走不到的一条线。</p>\n<p>58、<br>——社会主义制度的优越性在哪里？<br>——成功地克服了在其它社会制度里不会存在的困难。</p>\n<p>59、<br>——拉宾诺维奇，你经常读报纸吗？<br>——当然，要不我怎么知道我们过着幸福的生活？</p>\n<p>60、<br>一天戈尔巴乔夫到一个农场视察，看到有几头猪，就到猪旁边拍了一张照片。<br>随行人员在照片上写上：戈尔巴乔夫和猪在一起，但又感到不妥。于是改成：猪和戈尔巴乔夫在一起，可还是感觉不对。最后把照片上的字改成：“左起第三位是戈尔巴乔夫”。</p>\n<p>61、<br>苏联邮政发行历届领导人纪念邮票， 发行没1个月，邮政宣布紧急停止使用该邮票。<br>理由是：寄信人不知道往哪面吐唾沫。</p>\n<p>62、<br>朝鲜：嗯，大哥，我想做个核试验。<br>中国：什么时候?<br>朝鲜：10<br>中国：10什么？10个月？还是10天?<br>朝鲜：9，8，7……<br>中国：你大爷的！</p>\n<p>63、<br>一个美国人和苏联人比赛言论自由.美国人说：“我可以在白宫门前高喊‘打倒美帝国主义’。警察绝对不会抓我。”<br>苏联人很不服气，说：“这有什么。我也可以在克林姆林宫门前高喊‘打倒美帝国主义’，警察也绝对不会抓我。”</p>\n<p>64、<br>在集体农庄党的会议上将研究两个问题：建造木棚和建设共产主义。在没有木板的情况下，直接研究第二个问题。</p>\n<p>65、<br>“同志，你对这个问题有什么意见吗？”党支书问道。<br>“对，我是有意见，但我不同意我的意见！”</p>\n<p>67、<br>工人说:我们已经是共产主义了<br>有人问:为什么?<br>工人说:我们实现了各尽所能,各取所需的分配原则.<br>什么?那人又问<br>工人说:你没见我们的领导各取所需,工人各尽所能!</p>\n<p>68、<br>“在苏联是否可以存在两党制？”<br>“不，不可能，因为我们养不起。” </p>\n<p>69、<br>——什么在苏联是最常见的？<br>——暂时的困难。</p>\n<p>70、<br>苏联时期莫斯科卢比扬卡（克格勃总部）大楼外。<br>一个愁眉苦脸的男子一边走路一边自言自语：肥皂没有，电池没有，袜子也没有。……<br>这时旁边走过来一个看起来象是便衣的人小声对他说：公民同志，您要是再这样诋毁我们伟大的社会z主义国家，我就要拿手枪把敲你的脑袋了！<br>那个男子看看便衣警察，继续自言自语：看看，连子弹也没有……</p>\n<p>71、<br>在调查表上有这样一个问题：在执行总路线时你动摇过吗？<br>拉宾诺维奇回答道：“我和总路线一起动摇。”</p>\n<p>72、<br>——共产主义还有会货币吗？<br>——南斯拉夫的修正主义者说会有，中国的教条主义者说没有，我们是辩证地看待这个问题：有，但不是所有人都有。</p>\n<p>73、<br>拉宾诺维奇到资本主义国家出差，在那里，他给单位拍了一个电报：“我选择了自由。”这事发生后，单位马上召集了党代会谴责拉宾诺维奇，并要做出组织结论。在会议中间，拉宾诺维奇突然走进了会场！全场哑然。<br>拉宾诺维奇说道：“我非常感兴趣，你们是怎样理解自由的。”</p>\n<p>74、<br>——苏联人第六感的什么方面最发达？<br>——高度的满足感。 </p>\n<p>75、<br>——为什么我们执行总路线那么慢 ?<br>——因为每次党代会转的弯太大。</p>\n<p>76、<br>——有 40 颗牙4条腿的是什么东西？<br>——鳄鱼。<br>——有4颗牙40 条腿的是什么东西？<br>——政治局 </p>\n<p>77、<br>“假设你在酒吧里，而一个陌生人坐到你的身边并开始唉声叹气，你该怎么做<br>“立即去阻止这种反苏宣传” </p>\n<p>78、<br>“共产主义实现时警察还存在吗？”<br>“当然不。那时候所有公民都已经学会自己逮捕自己”</p>\n<p>79、<br>一个苏联人家中总是被偷，于是很郁闷的问邻居：“什么时候我们家的东西才能不被偷？”<br>邻居：“等到了共产主义社会就不被偷了。”<br>“为什么？”<br>“因为在社会主义阶段就已经被偷光了。</p>\n<p>80、<br>苏联特工对美国特工夸口道：“我们知道你们国家所有核导弹发射井的位置。”<br>美国特工说：“那又有什么，我们知道你们未来20年全体政治局委员名单。”</p>\n<p>81、<br>亞美尼亞電台播放著機智問答說：<br>「雞和蛋哪一個先有？」<br>解答者在一旁暗暗地答道：「從前兩者都有。」</p>\n<p>82、<br>一对夫妇生了一个孩子，如果长得像父母，那就是按反动的基因学说生出来的，如果长得像他们的邻居，那就是按照李森科的革命的环境决定学说生出来的。</p>\n<p>83、<br>戈尔巴乔夫颁布限酒令后，想要买到酒只能在指定销售处排长队来买。<br>一个莫斯科人排队排烦了，就嚷道：“我要到克林姆林宫把戈尔巴乔夫干掉。”然后转身离去。<br>一会儿他有回来了，旁边人问他：“已经干掉了吗？”<br>他说：“干什么干啊！那里的队比这里还长。”</p>\n<p>84、<br>“可能在美国建成共产主义吗？”<br>“可能的。但是那样的话我们到哪里买粮食？”</p>\n<p>85、<br>“下次选举的结果会是怎样的？”<br>“没有人知道。有人从中央委员会那里偷走了下次选举的确切结果</p>\n<p>86、<br>“为什么有人说匈牙利人喜欢苏联人而讨厌美国人？”<br>“因为苏联人帮助匈牙利人摆脱了一次专制，而美国人没有解决另外一个”</p>\n<p>87、<br>拉宾诺维奇在克里姆林宫里工作，他待在塔楼前望着远方，以便在共产主义到来时及时发出信号。美国人想要引诱他为他们工作，让它在经济危机到来时发出警告。拉宾诺维奇回答说：<br>——不，我需要一个固定的工作。</p>\n<p>88、<br>美国百万富翁买下苏联国家百货商场，并宜布要免费分发商品。<br>很快百货商店和通向这里的道路就开始堵塞，并有许多因拥挤而死伤的人。人们问百万富翁问：　<br>——你为什么要这样做？<br>——我非常感兴趣，当你们实行按需分配时会是什么样子。</p>\n<p>89、<br>——为什么共产党员不能接受圣经？<br>——根据圣经，先有混乱，然后根据上帝的计划引入秩序。共产主义的经验告诉我们，先有秩序，然后混乱就会到来</p>\n<p>90、<br>——是什么原因决定了我们能在西方国家买那么多小麦？<br>——要知道资本主义的最大缺点就是生产过剩。</p>\n<p>91、<br>一个年轻的东德共产党员向他的首长提出了一个请求：他想得到移民西德的许可<br>“为什么你竟然会想离开社会主义天堂，小同志？”<br>“首长，我有一个主要的原因和一个次要的原因。次要原因是我知道我们党已经在民主德国建立了一个天堂，而我害怕这个天堂不能延续很久”<br>“别担心！孩子，这里将永远是天堂”<br>“那，好吧，首长，这就是我说的主要原因了”</p>\n<p>92、<br>五一劳动节游行中，一个非常老的犹太人举着一个标语：“为了我快乐的童年时代，谢谢你，斯大林同志”<br>党代表找到他：“那是什么 ？你在嘲弄我党吗？谁都可以看出，当年还是孩子的时候，斯大林同志还没有出生”<br>“确切的说，那就是我感谢他的原因”</p>\n<p>93、<br>“美国的摩天楼真是全世界最高的吗？”<br>“是的。但是苏联制造的晶体管是全世界最大的” </p>\n<p>94、<br>“如果我们放开西部边界管制的话，我们应该做什么？”<br>“立即跑到西伯利亚以避免被踩死” </p>\n<p>95、<br>“为什么那个枪击政府豪华轿车的家伙会在红场打偏子弹？”<br>“因为刚巧挨着他的公民们拼命抢那把枪并叫着：‘让我来射击！’</p>\n<p>96、<br>“为什么我国政府不急着登月？”<br>“如果宇航员拒绝回来怎么办？”</p>\n<p>97、<br>“为什么巡警总是三人一队？”<br>“这是专门的安排。一个会阅读，一个会写字，自然第三个要随时监视这两个知识分子”</p>\n<p>98、<br>有人通过走关系，把列宁同志送到了天堂，这个无神论者被接纳了。<br>过了几天，这人给上帝打电话表示感谢，电话接通了，他说：你是上帝吗?<br>上帝回答：首先，没有上帝。其次，我们这里每个人都是同志。第三，有事请直说，我还要参加党代表会议。</p>\n<p>99、<br>大西洋上某处，苏联和美国核潜艇碰巧在一处上浮出水。　<br>苏联潜艇的船员在甲板上没秩序地站着队，半醉的舰长生气地吼道：谁把靴子扔到控制台上去啦？我再问一遍：谁他妈把靴子扔到控制台上去啦？<br>刚好美国潜艇甲板上的舰长听见了，与苏联舰长相比，他不仅刮了胡子而且精神抖擞。而他的手下更是秩序井然。<br>显然他很自豪。他说：呵呵，这要是在我们美国——<br>苏联舰长不耐烦地打断他：行啦，没有什么美国啦——我再问一遍，谁他妈把靴子扔到控制台上去啦？！</p>\n<p>100、<br>勃列日涅夫在冬季奥运会上阅读讲话稿：”O-O-O-O-O。”<br>“不，”他的助理向他低声道，“那是奥运会的标志。”</p>\n<p>101、<br>来了一个格鲁吉亚代表团。他们被斯大林接见，谈话，然后离开，斯大林开始找他的烟斗，找不到。他叫贝利亚。<br>“追代表团，找找谁拿了我的烟斗。”他说。<br>贝利亚赶忙去追代表团。五分钟后，斯大林在一堆纸下找到了他的烟斗。他叫贝利：“瞧，我找到我的烟斗了。”<br>“太晚了，”贝利亚说，”代表团中的半数已经承认他们拿了你的烟斗，另外一半在审讯中死掉了。”</p>\n<p>102、<br>三个囚犯被送到了古拉格。他们开始谈论为什么他们会来到这里。<br>“我来到这儿，是因为我上班总是迟到五分钟，他们指控我是在以怠工来破坏。”第一个说。<br>“我来到这儿，是因为我上班总是早到五分钟，他们指控我是间谍”，第二个说。<br>“我来到这儿，是因为我上班总是准时赶到，”第三个说，”他们指控我拥有一个西方制的手表。”</p>\n<p>103、<br>一个美国人刚从莫斯科机场出来，他想打听一下时间。这时从身旁走过一位莫斯科人，手里拎着个沉重的箱子，很吃力的样子。美国人拦住了他，问他当地时间。莫斯科人放下箱子，抬手看了看表，一口气报出来现在的时间然后还有气压温度湿度等信息。美国人很吃惊，问道：这块表的功能可真多，是苏联的技术生产的吗？<br>莫斯科人自豪地回答：是的，是我们苏联技术制造的。<br>然后又吃力地重新拎起那个箱子接着说道：就是电池重了点。</p>\n<p>104、<br>越战时期，河内物资奇缺，向苏联求救。<br>苏联电：勒紧腰带。<br>河内回电：请给腰带 。</p>\n<p>105、<br>一位美国历史学家和一位俄罗斯历史学家，讨论谁领导二十世纪的前半世纪。<br>“我投票赞成胡佛先生，”美国人说，“他尝试着教导我们美国人停止酗酒！”<br>“那个没什么了不起！”俄国人接着说，“我选择斯大林，他尝试教我们俄国人不要吃饭。”</p>\n<p>106、<br>一个年老的女演员想早一点获得国家演员的称号，人们就建议她入党。在入党仪式上人们问她怎么看共产主义。女演员说：所有东西都是充足的，不论是食品还是商品，还允许出国，总之，像在沙皇时代一样。</p>\n<p>107、<br>问：为什么安德罗波夫，而后是契尔年柯在共产党会议上被一致推选？<br>答：这是因为安德罗波夫的肾检验结果最差，契尔年柯的心电图最差。</p>\n<p>108、<br>一个公民来参加契尔年柯的葬礼。有人向他要票，他答道：到这里来我用的是联票。</p>\n<p>109、<br>在斯大林格勒更名为伏尔加格勒后，有另一个世界来了一封电报：”同意。约瑟夫•伏尔加”。</p>\n<p>110、<br>列宁时代像是在隧道里，周围一片黑暗，只是在前面有光；在斯大林时代，像是在汽车里，一人领路，一半人在上坐着，另一半人在上颠簸；在赫鲁哓夫时代，就像在参观团里一样，一个人表演，其他人在笑；在勃列日涅夫时代，像看电影一样，大家都等着散场。</p>\n<p>111、<br>问：为什么列宁穿皮鞋，斯大林穿靴子？<br>答：列宁时代俄罗斯只脏到脚脖子。</p>\n<p>112、<br>问：什么是全国的电气化？<br>答：这就是共产主义减去苏维埃政权。<br>问：听说苏联进军捷克斯洛伐克后，就会实现共产主义？是真的吗？<br>答：是的，电气化在那里已经实现很多年了。</p>\n<p>113、<br>问：从马克思主义的观点来看，什么是短缺？<br>答：就是不被我们所感觉的客观现实。</p>\n<p>114、<br>问：犹太人要入党要有什么条件？<br>答：两个阿拉伯人的推荐。<br>【苏联反犹主义盛行】</p>\n<p>115、<br>拉宾诺维奇在战斗开始前声明：如果我死了，就追认我有党员吧！如果没死，就不用了。</p>\n<p>116、<br>问：可以用收取的贿赂交党费吗？<br>答：如果你是一个真正的共产党员，那就可以。</p>\n<p>117、<br>上帝赐给人三种品质：忠诚，聪明，党性，但是任何一个人不会两种。<br>因为人如果是聪明和真诚的，他就没有党性；如果他是忠诚和有党性的，他就不是聪明的；如果一个人聪明和有党性，那他就不是真诚的。</p>\n<p>118、<br>问：在党的十二大上，关于住房问题有什么决议吗？<br>答：增加列宁同志的住房面积。</p>\n<p>119、<br>问：能光屁股坐在刺猬身上吗？<br>答：可以，但只是在三种情况下：刺猬的刺被剃掉.是别人的屁股或者是党命令那样做。</p>\n<p>120、<br>一个妇女在一个几家人合住的住宅的公用浴室里洗澡，而邻居站在走廊的一个小橙上通过门上的玻璃往里看，这个妇女发现后说道：看什么！没见过啊！邻居：我得看看，你是在用谁的肥皂！</p>\n<p>121、<br>苏联一个桥梁专家访问罗马尼亚时被邀到自己罗马尼亚的同事家做客。客人夸奖主人的别墅非常豪华。主人把客人带到窗前：你见到了那座桥了吗？客人：看见了。主人：这就是原因所在！为了建造这座桥我节省了一些钱。<br>过了一年，罗马尼亚工程师回访，他夸奖主人的别墅非常豪华，主人把客人带到窗前：你见到有桥了吗？罗马尼亚工程师：没见到。<br>苏联桥梁专家：这就是原因所在！</p>\n<p>122、<br>捷克人先是建造一个东西，剩下的偷光；而苏联人先是偷得差不多了，余下的用来建造。</p>\n<p>123、<br>问：为什么在有苏联侨民的西方商店里会经常发生偷窃行为？<br>答；这是因为他们的意识里有共产主义的残余。</p>\n<p>124、<br>著名的俄罗斯歌唱家维尔京斯基，还是在沙皇时代离开俄罗斯的，这次，他又返回了俄罗斯，他带着两个手提箱从车箱里走出来，他放下皮箱，亲吻着大地，看着周围的人：俄罗斯啊，我都不认识你了！<br>后来，他一看，皮箱不见了：俄罗斯啊，我认出你来了！</p>\n<p>125、<br>问：什么国家最富？<br>答：苏联。它已经被偷了五十多年了，但还没有被偷光。</p>\n<p>126、<br>问：德国在马克思那里继承了什么？<br>答：对于东德来说是共产党宣言，对于西德来说是资本主义。</p>\n<p>127、<br>在苏兹达尔的考古发掘中发现了人们从来不知道的圣经的篇章：世界末日可以在单独的国家到来。</p>\n<p>128、<br>勃列日涅夫问罗马教皇：为什么人们相信罗马天主教的天堂，而不相信共产主义的天堂？<br>罗马教皇：这是因为我们的天堂从来没有让别人看到。</p>\n<p>129、<br>一个乌克兰人被叫到克格勃，<br>问：请你解释一下，你为什么经常有从以色列来的邮件？<br>答：在战争时期，我曾藏匿过一个犹太人。<br>问：你作为一个苏联的乌克兰人，怎么能收这些犹太姥的邮包！你也不为自己的将来着想。<br>答：是，我想过，以后我还要藏中国人。</p>\n<p>130、<br>问：听说在共产主义社会食品可通过电话订购，这是真的吗？<br>答：但是发放的时候要通过电视机。</p>\n<p>131、<br>请问，这就是共产主义，还是会更差劲？</p>\n<p>132、<br>考古学家在挖掘一个石器时代的山洞，在入口处有一标语：万岁，奴隶制度，全人类的光明未来。</p>\n<p>133、<br>问：听说在 1980 年在苏联会建成共产主义，这是真的吗？<br>答：不，现在换成举办奥林匹克运动会。</p>\n<p>134、<br>问：里海鳊是什么？<br>答：这是鲸的一种，它能游到共产主义。如果游不到，说明它是反革命。</p>\n<p>135、<br>问：怎么才能知道共产主义已经到来？<br>答：将在广播和报纸上宣布。如果那时还剩电视的话，还会通过电视宣布。</p>\n<p>136、<br>如果你是外交官，你可以一直在国外；<br>如果你是科学家，你可以每年出一次国；<br>如果你是运动员，你可以四年出一次国；<br>如果你是军人，你要12年才能出一次国。（44年卫国战争反攻，56年波匈事件，68年布拉格之春，79年阿富汗）</p>\n<p>137、<br>两个中学同学相遇然后寒暄。<br>“您现在在哪工作”<br>“中学老师.您呢?”<br>“克格勃。”<br>“啊，您在克格勃具体干什么？”<br>“我们负责揪出那些对国家不满的家伙。”<br>“您的意思是……还有人比较满意？”<br>“哦，那些人不归我们管，负责管他们的是纪委。”</p>\n<p>138、<br>一位年轻人在工作时抱怨道：“这种政府真差劲。”<br>结果被一位秘密警察听到而遭逮捕。<br>年轻人辩解说：“我根本没讲是哪个政府，你怎么可以随便逮捕我呢？”<br>“你少骗人，”秘密警察咆哮道，“我在这里工作二十多年了，哪一个政府差劲我不会知道吗？”</p>\n<p>139、<br>个美国人和一个苏联人被判下地狱。恶魔告诉他们：“你们有两个选择：美国式和苏联式的地狱。在美国式的地狱中，你们什么都可以做，但是每天早上必须吃一桶屎。而在苏联式的地狱中，也可以想干什么就干什么，不过每天早上得吃两桶屎。”<br>美国佬马上选了美国式的地狱。而苏联人则最终选择了自己的祖国。一周后他们又相遇了，苏联人问：“你那如何？”<br>美国人回答：“确实如恶魔说的那样。我的地狱还不错。就是每天一桶屎简直要我命。你那呢？”<br>差不多和你那一样。就是搞不清楚我们那是屎尿遇见了短缺还是有人把桶都偷跑啦”</p>\n<p>140、<br>勃列日涅夫发表广场演说，群众听见“……勃列日涅夫同志的逝世令我们非常难过……”，一片哗然。<br>勃列日涅夫似乎发现了什么，把手伸进口袋摸了一下。<br>“同志们，对不起，离开政治局的时候，我穿了安德罗波夫同志的西装。”</p>\n<p>141、<br>克格勃审核<br>“你爱你的太太吗？”主考官问。<br>“是的。”<br>“你爱你的国家吗？”主考官又问。<br>“是的。”<br>“那一个是你的最爱？”主考官问。<br>“国家。”<br>“好，我们将带你的老婆到这里，你拿这把枪到隔壁房去杀了她。”<br>这男子到了隔壁房，没多久便传出６声枪响，接着又传出压碎声持续着数分钟；<br>此男子带着松垮的领带走出房间，他将手枪放在桌上，主考官看着他<br>并问：“发生什么事？”<br>他说：“你给我的枪都装着空包弹，我只好勒死她。”</p>\n<p>142、<br>赫鲁晓夫访问一所学校。他问一名学生：”你的父亲是谁？“<br>他回答说：”是共产主义！“<br>赫鲁晓夫很满意，他又问：”你的母亲是谁？“<br>他回答说：”是苏联！“<br>赫鲁晓夫又问：”你长大了想当什么？”<br>学生说：“孤儿。”</p>\n<p>143、<br>列宁表明该如何管理国家<br>斯大林表明该如何不管理国家<br>赫鲁晓夫试图表明谁都能管理国家<br>勃列日涅夫正在表明国家是根本不需要管理的</p>\n<p>144、<br>1937年苏联当局征求诗人普希金的逝世百年纪念铜像设计，<br>佳作有以下三件：<br>站在高加索山上眺望远方的普希金，<br>决斗时被子弹击中即将倒下的普希金，<br>艺术女神替普希金戴上月桂冠。<br>但是，优胜作品是….<br>正在阅读普希金作品的斯大林同志。</p>\n<p>145、<br>列车员叫醒一个靠着窗口睡着了的旅客:“同志，你的票子？” “票？什么票？我没有票子！” “没票？那你打算去哪里？” “我什么地方也不想去！” “那你为什么上这列火车？” “上车前，克格勃的同志们刚在大庭广众之下逮捕了一名间谍，大家都在看热闹，我也在看，后来其中一个领头的同志对着我叫到：‘没什么好看的，快上车坐好！’于是我只好走进车厢……” </p>\n<p>146、<br>一个盲人在路上遇到了贝利亚同志。 “您好，贝利亚同志！”盲人抢先打招呼。 “怎么，您看得见我？”贝利亚同志心里很纳闷。 “不，贝利亚同志，那是因为给我引路的狗直往后退的缘故。”</p>\n<p>147、<br>拉宾诺维奇出差，要到三个城市去，它们是：华沙，布拉格，还有巴黎。华沙和布拉格是苏联控制的。 到了华沙，他发给单位一封电报，写着：”自由的华沙万岁！拉宾诺维奇。“ 到了布拉格，他发给单位一封电报，写着：”自由的布拉格万岁！拉宾诺维奇。“到了巴黎，他又发给单位一封电报，写着：”巴黎万岁！自由的拉宾诺维奇。</p>\n<p>158、<br>在一次记者招待会上，有以下问答：<br>问：“今年诺贝尔奖获得者是谁？”<br>答：“赫鲁晓夫。”<br>问：“赫氏有何成就？”<br>答：“他是第一个在西伯利亚播种，去加拿大收获的人。”</p>\n<p>159、<br>有一次，著名的歌唱家科兹洛夫斯基得知斯大林很赏识他，便向斯大林提出一个请求：“我从来没有去过国外，所以我想……”<br>“你不会出逃吧？”<br>“瞧您说的，斯大林同志！对我来说，家乡的村庄比外国可要亲得多。”<br>“不错，好样的！那你就回家乡去吧。” </p>\n<p>160、<br>某日，戈尔巴乔夫召开国民大会:同道们!目前国内形势有些紧张，看大家谅解！一个工人站起曰：我们保证按时上班！戈尔巴乔夫大悦，继续说：再过些时日，大家会更紧张，也许会有人受饿！工人又说：我们可延长时间干！戈尔巴乔夫有些感动：随时间发展，大概会有失业现象。工人回答：没关系，我们将加班玩命的工作。戈热泪盈眶：谢谢，但是最后也许会有人饿死！工人大声说：我们２４小时连续工作，怎么样，总书记？！戈狂奔下主席台，牢牢握住该人的手，说：…我…我该该我该怎麽说呢，您从事何种职业。工人受宠若惊，面露难色说：我……我…我是火葬厂的！</p>\n<p>161、<br>有一次，朱可夫从斯大林的办公室里出来时，怒气冲冲地说：“小胡子魔鬼!”正在接待室的贝利亚听到了这句话，他走进斯大林的办公试冬把这话告诉了斯大林。 斯大林让人把朱可夫叫了回来。“朱可夫同道，您从我办公室出往时说了一句‘小胡子魔鬼’，您是在说谁?”“希特勒!我还能说准呢？斯大林同道！”“贝利亚同道，而您又是在说谁呢?”</p>\n<p>162、<br>“第三次世界大战会发生吗？”“不会！不过争取和平的努力会达到这样的程度：全世界都不会有一块石头保持完整！”</p>\n<p>163、<br>假如鳄鱼吃了勃烈日涅夫会有什么结果？答案是：鳄鱼会连着屙一个星期的勋章。 </p>\n<p>164、<br>勃列日涅夫的噩梦：<br>捷克人坐在红场上吃犹太薄饼——用筷子。 </p>\n<p>165、<br>戈尔巴乔夫在别墅与赖莎一起度假。早上，戈尔巴乔夫穿着条内裤走到阳台上呼吸新鲜空气。<br>“亲爱的，回来穿上睡衣。”赖莎喊道。<br>“赖莎，你是怎么隔着两间屋子看到我的？”<br>“不，我在听自由欧洲电台。”</p>\n<p>166、<br>一天晚间。完成了一天的工作，雅科夫·米哈伊洛维奇·斯维尔德洛夫来弗拉基米尔·列宁的书房小坐。<br>“弗拉基米尔·伊里奇，我们要么开一瓶？”斯维尔德洛夫问。<br>“不干。我绝不再这样了！”列宁断然拒绝，“绝不！”<br>“得了吧，弗拉基米尔·伊里奇！就我们两个！……上次我们开了两瓶，什么也没发生啊？”<br>“还什么都没发生呢！你和捷尔仁斯基回去睡觉去了，可我却爬到辆装甲车顶上，扯了一顿屁话……” </p>\n<p>167、<br>苏联的家具厂生产一种新型号的床：“共产主义型号”。床能轻松塞下三个人，而床沿上则刻着标语：“列宁总与你同在！” </p>\n<p>168、<br>一艘苏联货船被食人族海盗劫持，海盗准备把所有的海员吃掉。船长问道：<br>“亲爱的食人族同志，你们有过集体化吗？”<br>“没有！”<br>“你们有过个人崇拜吗？”<br>“没有！”<br>“你们有过十月节吗？”<br>“没有！”<br>“好吧，那我就真的不能理解你们为什么这么残忍了……”</p>\n<p>169、<br>勃列日涅夫在电视上对公众讲话：<br>“近日在莫斯科有恶毒的流言说我的警卫开的车里不是我而是个假人。我必须得说这是相当肮脏的谎言！他们在给我开车，而不是假人！”</p>\n<p>170、<br>勃列日涅夫在向工人们讲话：<br>“很快我们就能生活得更好！”<br>台下传来一个声音：<br>“我们怎么办？” </p>\n<p>171、<br>勃列日涅夫坐车在莫斯科街头闲逛，突然看到一座纪念碑。<br>“这座纪念碑是谁的？”<br>“契诃夫的，列昂尼德·伊里奇。”<br>“哦，很好。我读过他的《姆姆》。”<br>“抱歉，列昂尼德·伊里奇，《姆姆》不是契诃夫写的，而是屠格涅夫。”<br>“哦，真的么？那这可真蠢。”勃列日涅夫评论道，“《姆姆》是屠格涅夫写的，可契诃夫却得到了纪念碑！”</p>\n<p>172、<br>科学家联名要求赫鲁晓夫去领导一个癌症治疗所。赫鲁晓夫推脱道：“谢谢同志们的支持，但我对癌症一窍不通啊。”<br>科学家们纷纷说道：“赫鲁晓夫同志，您只要应用一下您在农业问题上的经验就好了！您一负责，粮食就全不见了！” </p>\n<p>173、<br>-为什么在斯大林的遗体被移出列宁墓后，陵墓的看守反而加倍了？<br>-因为他们发现赫鲁晓夫曾经抱着铺盖卷在附近晃悠。</p>\n<p>174、<br>塔斯社通讯：<br>“……昨天在莫斯科发生了一起针对勃列日涅夫同志的失败暗杀事件。子弹穿透汽车的防弹玻璃，击中勃列日涅夫同志胸前的勋章，随后反弹并打死了司机。” </p>\n<p>175、<br>科学家发明了一种电脑，能够计算出与共产主义的距离。在勃列日涅夫的监督下，科学家输入了所有的信息，计算机开始计算。一天、两天，三天……最终计算机得出了结果并打在了卡带上：18千米。<br>科学家十分震惊。肯定是算错了！他们重来了一次，还是这个数字！<br>学院的锅炉工突然懂了什么：<br>“同志们，朋友们，数据没有错！勃列日涅夫同志告诉过我们，每一个五年计划都能让我们向共产主义迈进一步！”</p>\n<p>176、<br>尼克松先生访问莫斯科，赫鲁晓夫带着他参观首都，尤其是各个新建住宅区。<br>“那些是什么？”尼克松突然问道。<br>“你什么意思啊？”赫鲁晓夫傲慢地反问，“电视机。”<br>“好啊！”尼克松赞叹道，“你们不只已经赶上了我们，在一些地方甚至已经超过了我们。”<br>“哪里？”赫鲁晓夫欣喜若狂。<br>“比如说吧，我们从不在猪圈里安装电视机。” </p>\n<p>177、<br>斯大林就要死了，他把赫鲁晓夫招来：<br>“尼基塔·谢尔盖耶维奇，我知道你会继承我并超越我，”斯大林说，“我给你准备了两封信。如果你遇到了危机，就拆开第一封；如果再遇到，就拆开第二封。”<br>赫鲁晓夫拿走了两封信。1956年，他遇到了匈牙利和苏伊士危机。于是赫鲁晓夫拆开了第一封信，上面写着：“都怪在我头上！”于是苏共二十大召开，斯大林主义终结了。<br>1964年，赫鲁晓夫又碰上了勃列日涅夫和柯西金的政变，于是他拆开第二个，只见上面写着：<br>“准备两封信。”</p>\n<p>178、<br>问：能够用香蕉当指南针吗？<br>答：可以。把香蕉放在柏林墙上，香蕉被从哪边抽走哪边就是东边。 </p>\n<p>179、<br>“奶奶，列宁好吗？”<br>“当然，孙子，他很好。”<br>“斯大林呢？他坏吗？”<br>“坏，当然坏。”<br>“赫鲁晓夫呢？他怎么样？”<br>“等他死了，我们就知道了。” </p>\n<p>180、<br>党代会。斯大林发言：<br>“今天我们有两个问题要讨论。第一，我们需要枪毙所有的政治局委员。第二，我们需要把列宁墓涂成亮绿色。”<br>观众席中传来了一个怯怯的声音：<br>“为什么涂成亮绿色？”<br>“很好，我就知道大家对问题一没有不同意见。”</p>\n<p>181、<br>在入党审批过程中有一个问题是：“你怎么看待苏联政府？”<br>一人回答：“就像看待我妻子一样。”<br>“怎么解释？”<br>“第一，我爱她；第二，我怕她；第三，我想换一个。” </p>\n<p>182、<br>在莫斯科红场，人们正排队参观列宁墓卫兵换岗。一个小孩问：<br>“爸爸，为什么他们总是要看守这陵墓？”<br>“他们不是一直说吗？”父亲答道，“列宁是永生的。如果他看不下去了决定出来怎么办？” </p>\n<p>183、<br>斯大林招来著名作家肖洛霍夫。<br>“我已经读了你的小说《新垦地》。写得非常好，我喜欢。我想，你为啥不写一篇文章，就叫《敌人不投降，就叫他灭亡》？”<br>“我害怕我写不好，斯大林同志。最近我的健康状况不好。”<br>“我们会帮你的。我们会把你送到格鲁吉亚去，那里有酒有葡萄。”<br>“好吧，斯大林同志。那请让我和家人到个别。”<br>“为什么？”<br>“我怕我的文章不成功。”</p>\n<p>184、<br>一个外国代表团突击访问了一个集体农庄。没时间准备。代表团走后，集体农庄主席拉过区党委书记说：<br>“你们没提前告诉我，所以他们都看见了。牛栏的废墟，那些灰尘，我们的贫穷。”<br>“别担心。”党书记说道。<br>“不过他们现在就能传的满世界都知道啊。”<br>“那就让他们沉浸在一贯的造谣中伤里吧。”党书记答道。 </p>\n<p>185、<br>在格鲁吉亚共和国的学校中，老师正在让学生说说自己的父亲。<br>“图拉什维里，说说你的父亲。”<br>“我爸爸种橘子。他把它们带到莫斯科销售，赚了不少钱。”<br>“你了，布里泽。”<br>“我爸爸种月桂叶。他把它们带到莫斯科销售，赚了不少钱。”<br>“你了，克里维泽。”<br>“我爸爸在反贪污和投机倒把分局工作。每次布里泽和图拉什维里的爸爸去莫斯科的时候都回去看看我爸爸。因此他赚了不少钱。”<br>“你了，查维查瓦泽。”<br>“我爸爸是生物工程师。”<br>全班大笑。<br>“孩子们。”老师严肃地说，“不要把快乐建立在别人的悲伤之上。”</p>\n<p>186、<br>全世界进行对关于大象的最佳书籍的评奖大赛。<br>法国人递交了一册精装的《大象家庭内的三角恋研究》<br>英国人提交了一套《大象与世界贸易》<br>德国人提交了24卷本的一套《大象学综介》<br>美国发放了一百万份传单，上面写着：“赢大象，不需购买。”<br>苏联提交了三卷书，题目如下：<br>《第1卷：大象在伟大的十月社会主义革的命中的作用》<br>《第2卷：大象在世界上最进步的苏联社会的光芒中的快乐生活》<br>《第3卷：苏联——大象的祖国》</p>\n<p>187、<br>一个卫兵问政治犯：<br>“刑期多久？”<br>“十年。”<br>“犯了什么罪？”<br>“没犯罪。”<br>“你撒谎！没犯罪他们只给判5年！” </p>\n<p>188、<br>一个日本工人被派到俄罗斯维修日本产的机械。日本人每天工作8小时，不和别人说话。一个月后他的工作期满。在他返回日本之前，日本人眼含泪水地对大家说：“我道歉，我的好工人同志们。我知道工人们应该团结起来，但我有合同在身，我不得不工作，我为没有参与你们的长期罢的工而向你们正式道歉！” </p>\n<p>189、<br>苏联人、法国人和美国人争论什么是最勇敢的人。<br>美国人说：“举例来讲，我们有十辆汽车，其中一辆没有刹车。我们抽签，每人搭一辆开山路。最后我们中的一个人住院，另外九个去看他。”<br>“这不算什么。”法国人说，“我们选10个女孩，其中有1个有艾滋病。我们抽签，一人找一个女孩。最后一个人住院，另外九个去看他。”<br>苏联人说：“我们聚在公寓里，即便知道我们中有一个告密者。我们讲了一晚上政治笑话，然后九个人进了监狱，另外一个去看他们。”</p>\n<p>190、<br>一个人把自己的车停在了莫斯科红场上。卫兵赶快跑来，向他怒吼：<br>“你疯了么？这是政府所在地！”<br>“没问题。”那人答道，“我的锁很结实。” </p>\n<p>191、<br>一个妇女走进食品商店。<br>“你们卖肉吗？”<br>“没有。”<br>“牛奶呢？”<br>“我们这儿只处理肉，对面那家才是没有牛奶的。”</p>\n<p>192、<br>在奥运会上，苏联掷铁饼（注：在英文中铁饼实为“锤子”，Hammer）选手打破了世界纪录。记者采访他问：<br>“你是怎么把锤子抛的那么远的？”<br>“如果再搭上个镰刀，我能扔出两倍远。” </p>\n<p>193、<br>苏联社会七大谜题：<br>1、总是没人工作，计划却总是完成；<br>2、计划总是完成，可（商店）柜台总是空的；<br>3、柜台总是空的，可却没人挨饿；<br>4、没人挨饿，可所有人都不高兴；<br>5、所有人都不高兴，可是没人抱怨；<br>6、没人抱怨，可是监狱却人满为患。</p>\n<p>194、<br>为了解决黄油短缺问题，政治局要求苏联科学家研究技术，把粪便做成黄油，并在十月革命周年纪念期间完成。在六个月的工作之后，政治局要求进展报告。科学家报告称他们实现了50%的成功。政治局要求解释，答复如下：<br>“人们已经可以把它涂在面包上，但尚不会去吃。” </p>\n<p>195、<br>一只兔子在街上狂奔。<br>“你跑得这么快，慌什么？”熊问。<br>“你不知道么？他们现在在逮捕所有的骆驼，还要阉割他们。”<br>“可你是兔子不是骆驼啊。”<br>“对，不过假设他们逮到你，在他们阉掉你之后你就能证明你不是骆驼了！” </p>\n<p>196、<br>一个犹太人申请移民去以色列。据他说，他的哥哥在以色列病得很重，需要帮助。办公室的官员问他：<br>“那为什么不让你的哥哥来这里，而要你亲自过去？”<br>“我的哥哥是得了病，但还没有得精神病。”</p>\n<p>197、<br>问：什么被允许，什么被禁止？<br>答：在英国被允许的被允许，被禁止的被禁止；在美国不被禁止的都被允许；在德国不被允许的都被禁止；在法国什么都被允许，包括被禁止的；在苏联什么都被禁止，包括被允许的。 </p>\n<p>198、<br>问：什么是最短的笑话？<br>答：共产主义。<br>问：什么是最长的笑话？<br>答：赫鲁晓夫在党代会上的讲话。 </p>\n<p>199、<br>问：如果社会主义在格陵兰建成会怎样？<br>答：首先，雪只有在有配给票时才会下，其次它只会被分配给克格勃军官和他们的家属。</p>\n<p>200、<br>问：什么单词以R开头且没有结尾？<br>答：重组（Reorganization）。 </p>\n<p>201、<br>问：尼克松来莫斯科时，他和赫鲁晓夫绕克里姆林宫赛并跑了第一，我们该怎么报道？<br>答：“在国际长跑比赛中，我们的第一书记同志获得了光荣的第二名，尼克松先生则为倒数第二。”</p>\n<p>202、<br>-我的妻子已经在厨艺学校学了三年了。<br>-哇，那她的厨艺一定很好咯？<br>-没有，她们刚学习到苏共第二十次代表大会。 </p>\n<p>203、<br>-爸，您能给我套车钥匙么？<br>-好，别丢了，儿子，七年之后我们就会领到车！ </p>\n<p>204、<br>-我想预定一辆小汽车。需要多久？<br>-从今天开始正好十年。<br>-上午还是下午？<br>-有区别么？<br>-那天上午我们还请了管子工。 </p>\n<p>205、<br>监狱里两个囚犯正交流经验。<br>“你是因为政治犯罪被捕的么？”<br>“当然。我是个管子工，被党委员会叫去修下水管。我看了看，说，‘整个体系都该换换了’，于是我就被判了7年。”</p>"},{"title":"浅谈 iOS 系统下的物理内存与虚拟内存","_content":"\n之前看慕课网的视频：《[iOS 内存管理及优化](https://www.imooc.com/video/11075)》发现自己理解的并不深刻，写篇文章浅谈一下到底什么是物理内存和虚拟内存，并记录下自己的体会。\n<!-- more -->\n\n首先第一个问题，什么是物理内存和虚拟内存。\n\n1.物理内存：\n> wiki中给的解释是，物理内存是指由于安装内存条而获得的临时储存空间。即我们平时说的 RAM。\n\n2.虚拟内存：\n> 虚拟内存是计算机系统内存管理的一种技术。其实从字面上，我们可以理解为用磁盘空间来扩展物理内存。（严格的说，并不只是利用磁盘空间来扩展内存空间，具体这部分内容大三的《操作系统》说的很细，有必要的话可以复习下）。\n\n了解了这些概念后，我们在来说一说 iOS 系统中的虚拟内存（virtual memory）。\n\n先引用我另一篇文章里关于物理内存的概念。\n\n```c\n// resident memory = dirty memory+clean memory that loaded in physical memory\n// clean memory\nchar *buf = malloc(100*1024*1024)\n\n// dirty memory\nfor(int i=0; i < 3*1024*1024; ++i){\n    buf[i] = rand()\n}\n``` \niOS系统下，虚拟内存是指将物理内存地址，针对每个进程，映射到不同的虚拟内存地址上。于是在一个物理并不够大的设备上，32 位的进程也能使用 4 GB 的虚拟内存地址，64 位的进程能使用 18 EB 的虚拟内存地址。但在同一时间真正能使用内存量，仍然是设备的物理内存大小，虚拟内存并不会改变这个物理限制。\n\nwindows 下指的是交换文件，即当进程使用的内存超过物理内存大小时，操作系统会将一部分暂时用不到的内存写入磁盘的交换文件，以腾出空间；当需要用到时，又会将交换文件中所需的部分读取到物理内存中。\n\n这里需要注意，OS X是可以使用交换文件的，iOS不行。\n\n最后，是时候拿出[官方文档](https://developer.apple.com/library/content/documentation/Performance/Conceptual/ManagingMemory/Articles/AboutMemory.html)祭天了~\n\n其实到发文时间为止，app 卡顿跟虚拟内存已经没啥太大关系了，开发者应该把更多精力放在 layer 上面。\n\n\n\n\n \n\n\n\n","source":"_drafts/浅谈-iOS-系统下的物理内存与虚拟内存.md","raw":"---\ntitle: 浅谈 iOS 系统下的物理内存与虚拟内存\ntags:\n---\n\n之前看慕课网的视频：《[iOS 内存管理及优化](https://www.imooc.com/video/11075)》发现自己理解的并不深刻，写篇文章浅谈一下到底什么是物理内存和虚拟内存，并记录下自己的体会。\n<!-- more -->\n\n首先第一个问题，什么是物理内存和虚拟内存。\n\n1.物理内存：\n> wiki中给的解释是，物理内存是指由于安装内存条而获得的临时储存空间。即我们平时说的 RAM。\n\n2.虚拟内存：\n> 虚拟内存是计算机系统内存管理的一种技术。其实从字面上，我们可以理解为用磁盘空间来扩展物理内存。（严格的说，并不只是利用磁盘空间来扩展内存空间，具体这部分内容大三的《操作系统》说的很细，有必要的话可以复习下）。\n\n了解了这些概念后，我们在来说一说 iOS 系统中的虚拟内存（virtual memory）。\n\n先引用我另一篇文章里关于物理内存的概念。\n\n```c\n// resident memory = dirty memory+clean memory that loaded in physical memory\n// clean memory\nchar *buf = malloc(100*1024*1024)\n\n// dirty memory\nfor(int i=0; i < 3*1024*1024; ++i){\n    buf[i] = rand()\n}\n``` \niOS系统下，虚拟内存是指将物理内存地址，针对每个进程，映射到不同的虚拟内存地址上。于是在一个物理并不够大的设备上，32 位的进程也能使用 4 GB 的虚拟内存地址，64 位的进程能使用 18 EB 的虚拟内存地址。但在同一时间真正能使用内存量，仍然是设备的物理内存大小，虚拟内存并不会改变这个物理限制。\n\nwindows 下指的是交换文件，即当进程使用的内存超过物理内存大小时，操作系统会将一部分暂时用不到的内存写入磁盘的交换文件，以腾出空间；当需要用到时，又会将交换文件中所需的部分读取到物理内存中。\n\n这里需要注意，OS X是可以使用交换文件的，iOS不行。\n\n最后，是时候拿出[官方文档](https://developer.apple.com/library/content/documentation/Performance/Conceptual/ManagingMemory/Articles/AboutMemory.html)祭天了~\n\n其实到发文时间为止，app 卡顿跟虚拟内存已经没啥太大关系了，开发者应该把更多精力放在 layer 上面。\n\n\n\n\n \n\n\n\n","slug":"浅谈-iOS-系统下的物理内存与虚拟内存","published":0,"date":"2024-01-02T16:09:25.076Z","updated":"2024-01-02T16:09:25.076Z","_id":"clqwm2cgv001uuc7tb0yy3poh","comments":1,"layout":"post","photos":[],"link":"","content":"<p>之前看慕课网的视频：《<a href=\"https://www.imooc.com/video/11075\">iOS 内存管理及优化</a>》发现自己理解的并不深刻，写篇文章浅谈一下到底什么是物理内存和虚拟内存，并记录下自己的体会。</p>\n<span id=\"more\"></span>\n\n<p>首先第一个问题，什么是物理内存和虚拟内存。</p>\n<p>1.物理内存：</p>\n<blockquote>\n<p>wiki中给的解释是，物理内存是指由于安装内存条而获得的临时储存空间。即我们平时说的 RAM。</p>\n</blockquote>\n<p>2.虚拟内存：</p>\n<blockquote>\n<p>虚拟内存是计算机系统内存管理的一种技术。其实从字面上，我们可以理解为用磁盘空间来扩展物理内存。（严格的说，并不只是利用磁盘空间来扩展内存空间，具体这部分内容大三的《操作系统》说的很细，有必要的话可以复习下）。</p>\n</blockquote>\n<p>了解了这些概念后，我们在来说一说 iOS 系统中的虚拟内存（virtual memory）。</p>\n<p>先引用我另一篇文章里关于物理内存的概念。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// resident memory = dirty memory+clean memory that loaded in physical memory</span></span><br><span class=\"line\"><span class=\"comment\">// clean memory</span></span><br><span class=\"line\"><span class=\"type\">char</span> *buf = <span class=\"built_in\">malloc</span>(<span class=\"number\">100</span>*<span class=\"number\">1024</span>*<span class=\"number\">1024</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// dirty memory</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>; i &lt; <span class=\"number\">3</span>*<span class=\"number\">1024</span>*<span class=\"number\">1024</span>; ++i)&#123;</span><br><span class=\"line\">    buf[i] = rand()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>iOS系统下，虚拟内存是指将物理内存地址，针对每个进程，映射到不同的虚拟内存地址上。于是在一个物理并不够大的设备上，32 位的进程也能使用 4 GB 的虚拟内存地址，64 位的进程能使用 18 EB 的虚拟内存地址。但在同一时间真正能使用内存量，仍然是设备的物理内存大小，虚拟内存并不会改变这个物理限制。</p>\n<p>windows 下指的是交换文件，即当进程使用的内存超过物理内存大小时，操作系统会将一部分暂时用不到的内存写入磁盘的交换文件，以腾出空间；当需要用到时，又会将交换文件中所需的部分读取到物理内存中。</p>\n<p>这里需要注意，OS X是可以使用交换文件的，iOS不行。</p>\n<p>最后，是时候拿出<a href=\"https://developer.apple.com/library/content/documentation/Performance/Conceptual/ManagingMemory/Articles/AboutMemory.html\">官方文档</a>祭天了~</p>\n<p>其实到发文时间为止，app 卡顿跟虚拟内存已经没啥太大关系了，开发者应该把更多精力放在 layer 上面。</p>\n","site":{"data":{"gallery":{"图片名称":{"full_link":"http://miccall.tech/img/twx.jpg","thumb_link":"http://miccall.tech/img/twx.jpg","descr":"图片描述"}},"links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}},"_links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}}}},"excerpt":"<p>之前看慕课网的视频：《<a href=\"https://www.imooc.com/video/11075\">iOS 内存管理及优化</a>》发现自己理解的并不深刻，写篇文章浅谈一下到底什么是物理内存和虚拟内存，并记录下自己的体会。</p>","more":"<p>首先第一个问题，什么是物理内存和虚拟内存。</p>\n<p>1.物理内存：</p>\n<blockquote>\n<p>wiki中给的解释是，物理内存是指由于安装内存条而获得的临时储存空间。即我们平时说的 RAM。</p>\n</blockquote>\n<p>2.虚拟内存：</p>\n<blockquote>\n<p>虚拟内存是计算机系统内存管理的一种技术。其实从字面上，我们可以理解为用磁盘空间来扩展物理内存。（严格的说，并不只是利用磁盘空间来扩展内存空间，具体这部分内容大三的《操作系统》说的很细，有必要的话可以复习下）。</p>\n</blockquote>\n<p>了解了这些概念后，我们在来说一说 iOS 系统中的虚拟内存（virtual memory）。</p>\n<p>先引用我另一篇文章里关于物理内存的概念。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// resident memory = dirty memory+clean memory that loaded in physical memory</span></span><br><span class=\"line\"><span class=\"comment\">// clean memory</span></span><br><span class=\"line\"><span class=\"type\">char</span> *buf = <span class=\"built_in\">malloc</span>(<span class=\"number\">100</span>*<span class=\"number\">1024</span>*<span class=\"number\">1024</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// dirty memory</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>; i &lt; <span class=\"number\">3</span>*<span class=\"number\">1024</span>*<span class=\"number\">1024</span>; ++i)&#123;</span><br><span class=\"line\">    buf[i] = rand()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>iOS系统下，虚拟内存是指将物理内存地址，针对每个进程，映射到不同的虚拟内存地址上。于是在一个物理并不够大的设备上，32 位的进程也能使用 4 GB 的虚拟内存地址，64 位的进程能使用 18 EB 的虚拟内存地址。但在同一时间真正能使用内存量，仍然是设备的物理内存大小，虚拟内存并不会改变这个物理限制。</p>\n<p>windows 下指的是交换文件，即当进程使用的内存超过物理内存大小时，操作系统会将一部分暂时用不到的内存写入磁盘的交换文件，以腾出空间；当需要用到时，又会将交换文件中所需的部分读取到物理内存中。</p>\n<p>这里需要注意，OS X是可以使用交换文件的，iOS不行。</p>\n<p>最后，是时候拿出<a href=\"https://developer.apple.com/library/content/documentation/Performance/Conceptual/ManagingMemory/Articles/AboutMemory.html\">官方文档</a>祭天了~</p>\n<p>其实到发文时间为止，app 卡顿跟虚拟内存已经没啥太大关系了，开发者应该把更多精力放在 layer 上面。</p>"},{"title":"如何快速学习一门编程语言","_content":"\n前言：现在的工作要求我们如何在短期内高效的自学一门语言，本文记录了我学习的一些新的与看法。\n\n自学编程的重要思想：Practice make perfect（熟能生巧）\n\n* watch\n* **do**\n* read\n<!-- more -->\n\n现在的开发工作要求我们能够快速掌握一门语言。一般来说应对这种挑战有两种态度：\n其一，粗粗看看语法，就撸起袖子开干，边查Google边学习；\n其二是花很多时间完整地把整个语言学习一遍，做到胸有成竹，然后再开始做实际工作。\n\n然而这两种方法都有弊病。\n第二种方法的问题当然很明显，不仅浪费了时间，偏离了目标，而且学习效率不高。因为没有实际问题驱动的语言学习通常是不牢固不深入的。有的人学着学着成了语言专家，反而忘了自己原本是要解决问题来的。\n\n第一种路子也有问题，在对于这种语言的脾气秉性还没有了解的情况下大刀阔斧地拼凑代码，写出来的东西肯定不入流。说穿新鞋走老路，新瓶装旧酒，那都是小问题，真正严重的是这样的程序员可以在短时间内堆积大量充满缺陷的垃圾代码。由于通常开发阶段的测试完备程度有限，这些垃圾代码往往能通过这个阶段，从而潜伏下来，在后期成为整个项目的毒瘤，反反复复让后来的维护者陷入西西弗斯困境。\n\n实际上语言学习有一定规律可循，对于已经掌握一门语言的开发者来说，对于一般的语言，完全可以以最快的速度，在几天至一周之内掌握其最常用的50%，而且保证路子基本正宗，没有出偏的弊病。\n\n**其实真正写程序不怕完全不会，最怕一知半解的去攒解决方案。**\n\n因为你完全不会，就自然会去认真查书学习，如果学习能力好的话，写出来的代码质量不会差。而一知半解，自己动手土法炼钢，那搞出来的基本上都是废铜烂铁。比如错误处理和序列化，很多人不去了解“正路子”，而是凭借自己的一知半解去攒野路子，这是最危险的。因此，即使时间再紧张，这些内容也是必须首先完整了解一遍的。掌握这些内容之后进入实际开发，即使有问题，也基本不会伤及项目大体。而开发者本人则可以安步当车，慢慢在实践中提高自己。\n\n以下列出一个学习提纲，主要针对的是有经验的人，初学者不合适。这个提纲只能用于一般的庸俗编程语言学习，目前在流行编程语言排行榜上排前20的基本上都是庸俗语言。如果你要学的是LISP之类非庸俗语言，或是某个软件中的二次开发语言，这里的建议未必合适。还是那句话，仅供参考。\n\n\n1. 首先了解该语言的**基本数据类型**，**基本语法**和主要**语言构造**，主要数学运算符和print函数的使用，达到能够写谭浩强程序设计书课后数学习题的程度；\n\n2. 其次掌握**数组**和其他**集合类**的使用，有基础的话可以理解一下*泛型*，如果理解不了也问题不大，后面可以补；\n\n3. 简单***字符串处理***。所谓简单，就是Regex和[Parser](https://blog.csdn.net/cxihu/article/details/52184356)以下的内容，什么查找替换，截断去字串之类的。不过这个阶段有一个难点，就是字符编码问题。如果理解不了，可以先跳过，否则的话最好在这时候把这个问题搞定，免留后患；\n\n4. 基本**面向对象或者函数式编程的特征**，无非是什么继承、多态、Lambda函数之类的，如果有经验的话很快就明白了；\n\n5. 异常、错误处理、断言、日志和调试支持，对单元测试的支持。你不一定要用[TDD](https://www.ibm.com/developerworks/cn/linux/l-tdd/)，但是在这个时候应该掌握在这个语言里做TDD的基本技能；\n\n6. 程序代码和可执行代码的组织机制，运行时模块加载、符号查找机制，这是初学时的一个难点，因为大部分书都不太注意介绍这个极为重要的内容；\n\n7. **基本输入输出和文件处理**，输入输出流类的组织，这通常是比较繁琐的一部分，可以提纲挈领学一下，搞清楚概念，用到的时候查就是了。到这个阶段可以写大部分控制台应用了；\n\n8. 该语言如何进行**callback**方法调用，如何支持事件驱动编程模型。在现代编程环境下，这个问题是涉及开发思想的一个核心问题，几乎每种语言在这里都会用足功夫，.NET的delegate，Java的anonymous inner class，Java 7的closure，C++OX的 tr1::function/bind，五花八门。如果能彻底理解这个问题，不但程序就不至于写得太走样，而且对该语言的设计思路也能有比较好的认识；\n\n9. 如果有必要，可在这时研究regex和[XML处理](http://www.cnblogs.com/lanxuezaipiao/archive/2013/05/17/3082949.html)问题，如无必要可跳过；\n\n10. [序列化和反序列化](https://www.zhihu.com/question/20706270/answer/15919891)，掌握一下缺省的机制就可以了；\n\n11. 如果必要，可了解一下**线程、并发和异步调用机制**，主要是为了读懂别人的代码，如果自己要写这类代码，**必须专门花时间严肃认真系统地学习**，严禁半桶水上阵；\n\n12. 动态编程，反射和元数据编程，<!--这块没懂-->数据和程序之间的相互转化机制，**运行时编译和执行的机制**，有抱负的开发者在这块可以多下些功夫，能够使你对语言的认识高出一个层面；\n\n13. 如果有必要，可研究一下该语言对于泛型的支持，不必花太多时间，只要能使用现成的泛型集合和泛型函数就可以了，可在以后闲暇时抽时间系统学习。需要注意的是，泛型技术跟多线程技术一样，用不好就成为万恶之源，必须系统学习，谨慎使用，否则不如不学不用；\n\n14. 如果还有时间，最好咨询一下有经验的人，看看这个语言较常用的features是什么，如果之前没学过，应当补一下。比如Ruby的block interator, Java的dynamic proxy，C# 3的LINQ和extension method。没时间的话，我认为也可以边做边学，没有大问题。\n\n15. 有必要的话，在工作的闲暇时间，可以着重考察两个问题，第一，这个语言有哪些惯用法和模式，第二，这个语言的编译/解释执行机制。\n\n至此语言的基本部分就可以说掌握了，之后是做数据库、网络还是做图形，可以根据具体需求去搞，找相应的成熟框架或库，边做边学，加深理解。对于一个庸俗语言，我自己把上面的内容走一遍大概要花2-3周时间，不能算很快，但也耽误不了太多事情，毕竟不是每个月都学新语言。掌握了以上的内容，就给练武术打好了基本功，虽然不见得有多优秀，但是肯定是根正苗红，将来不必绕大弯子。就算是临时使用的语言，把上面这个提纲精简一下，只看蓝色重体字的部分，大致能在几天到一周内搞定，不算是太耗时，而且写出来的代码不会太不靠谱。\n\n以上提纲未设及内存模型。对于C/C++，这个问题很重要，要放在显著位置来考虑，但对于其他语言，这个问题被透明化了，除非你要做hardcore项目，否则不必太关注。\n\n\n\n快速入门一门语言：\n\n* 基本数据类型、基本输入输出、基本语法（判断、逻辑语句）、注释\n* 数组、集合类、字符串处理、文件处理（cli）\n* callback、面向对象、多线程、网络请求、异常处理、序列化和反序列化\n* 运行时、编译原理、常用算法（分治、动态规划）\n\n本文最后，感谢孟岩老师指点。\n\n\n","source":"_drafts/如何快速学习一门编程语言.md","raw":"---\ntitle: 如何快速学习一门编程语言\ntags:\n---\n\n前言：现在的工作要求我们如何在短期内高效的自学一门语言，本文记录了我学习的一些新的与看法。\n\n自学编程的重要思想：Practice make perfect（熟能生巧）\n\n* watch\n* **do**\n* read\n<!-- more -->\n\n现在的开发工作要求我们能够快速掌握一门语言。一般来说应对这种挑战有两种态度：\n其一，粗粗看看语法，就撸起袖子开干，边查Google边学习；\n其二是花很多时间完整地把整个语言学习一遍，做到胸有成竹，然后再开始做实际工作。\n\n然而这两种方法都有弊病。\n第二种方法的问题当然很明显，不仅浪费了时间，偏离了目标，而且学习效率不高。因为没有实际问题驱动的语言学习通常是不牢固不深入的。有的人学着学着成了语言专家，反而忘了自己原本是要解决问题来的。\n\n第一种路子也有问题，在对于这种语言的脾气秉性还没有了解的情况下大刀阔斧地拼凑代码，写出来的东西肯定不入流。说穿新鞋走老路，新瓶装旧酒，那都是小问题，真正严重的是这样的程序员可以在短时间内堆积大量充满缺陷的垃圾代码。由于通常开发阶段的测试完备程度有限，这些垃圾代码往往能通过这个阶段，从而潜伏下来，在后期成为整个项目的毒瘤，反反复复让后来的维护者陷入西西弗斯困境。\n\n实际上语言学习有一定规律可循，对于已经掌握一门语言的开发者来说，对于一般的语言，完全可以以最快的速度，在几天至一周之内掌握其最常用的50%，而且保证路子基本正宗，没有出偏的弊病。\n\n**其实真正写程序不怕完全不会，最怕一知半解的去攒解决方案。**\n\n因为你完全不会，就自然会去认真查书学习，如果学习能力好的话，写出来的代码质量不会差。而一知半解，自己动手土法炼钢，那搞出来的基本上都是废铜烂铁。比如错误处理和序列化，很多人不去了解“正路子”，而是凭借自己的一知半解去攒野路子，这是最危险的。因此，即使时间再紧张，这些内容也是必须首先完整了解一遍的。掌握这些内容之后进入实际开发，即使有问题，也基本不会伤及项目大体。而开发者本人则可以安步当车，慢慢在实践中提高自己。\n\n以下列出一个学习提纲，主要针对的是有经验的人，初学者不合适。这个提纲只能用于一般的庸俗编程语言学习，目前在流行编程语言排行榜上排前20的基本上都是庸俗语言。如果你要学的是LISP之类非庸俗语言，或是某个软件中的二次开发语言，这里的建议未必合适。还是那句话，仅供参考。\n\n\n1. 首先了解该语言的**基本数据类型**，**基本语法**和主要**语言构造**，主要数学运算符和print函数的使用，达到能够写谭浩强程序设计书课后数学习题的程度；\n\n2. 其次掌握**数组**和其他**集合类**的使用，有基础的话可以理解一下*泛型*，如果理解不了也问题不大，后面可以补；\n\n3. 简单***字符串处理***。所谓简单，就是Regex和[Parser](https://blog.csdn.net/cxihu/article/details/52184356)以下的内容，什么查找替换，截断去字串之类的。不过这个阶段有一个难点，就是字符编码问题。如果理解不了，可以先跳过，否则的话最好在这时候把这个问题搞定，免留后患；\n\n4. 基本**面向对象或者函数式编程的特征**，无非是什么继承、多态、Lambda函数之类的，如果有经验的话很快就明白了；\n\n5. 异常、错误处理、断言、日志和调试支持，对单元测试的支持。你不一定要用[TDD](https://www.ibm.com/developerworks/cn/linux/l-tdd/)，但是在这个时候应该掌握在这个语言里做TDD的基本技能；\n\n6. 程序代码和可执行代码的组织机制，运行时模块加载、符号查找机制，这是初学时的一个难点，因为大部分书都不太注意介绍这个极为重要的内容；\n\n7. **基本输入输出和文件处理**，输入输出流类的组织，这通常是比较繁琐的一部分，可以提纲挈领学一下，搞清楚概念，用到的时候查就是了。到这个阶段可以写大部分控制台应用了；\n\n8. 该语言如何进行**callback**方法调用，如何支持事件驱动编程模型。在现代编程环境下，这个问题是涉及开发思想的一个核心问题，几乎每种语言在这里都会用足功夫，.NET的delegate，Java的anonymous inner class，Java 7的closure，C++OX的 tr1::function/bind，五花八门。如果能彻底理解这个问题，不但程序就不至于写得太走样，而且对该语言的设计思路也能有比较好的认识；\n\n9. 如果有必要，可在这时研究regex和[XML处理](http://www.cnblogs.com/lanxuezaipiao/archive/2013/05/17/3082949.html)问题，如无必要可跳过；\n\n10. [序列化和反序列化](https://www.zhihu.com/question/20706270/answer/15919891)，掌握一下缺省的机制就可以了；\n\n11. 如果必要，可了解一下**线程、并发和异步调用机制**，主要是为了读懂别人的代码，如果自己要写这类代码，**必须专门花时间严肃认真系统地学习**，严禁半桶水上阵；\n\n12. 动态编程，反射和元数据编程，<!--这块没懂-->数据和程序之间的相互转化机制，**运行时编译和执行的机制**，有抱负的开发者在这块可以多下些功夫，能够使你对语言的认识高出一个层面；\n\n13. 如果有必要，可研究一下该语言对于泛型的支持，不必花太多时间，只要能使用现成的泛型集合和泛型函数就可以了，可在以后闲暇时抽时间系统学习。需要注意的是，泛型技术跟多线程技术一样，用不好就成为万恶之源，必须系统学习，谨慎使用，否则不如不学不用；\n\n14. 如果还有时间，最好咨询一下有经验的人，看看这个语言较常用的features是什么，如果之前没学过，应当补一下。比如Ruby的block interator, Java的dynamic proxy，C# 3的LINQ和extension method。没时间的话，我认为也可以边做边学，没有大问题。\n\n15. 有必要的话，在工作的闲暇时间，可以着重考察两个问题，第一，这个语言有哪些惯用法和模式，第二，这个语言的编译/解释执行机制。\n\n至此语言的基本部分就可以说掌握了，之后是做数据库、网络还是做图形，可以根据具体需求去搞，找相应的成熟框架或库，边做边学，加深理解。对于一个庸俗语言，我自己把上面的内容走一遍大概要花2-3周时间，不能算很快，但也耽误不了太多事情，毕竟不是每个月都学新语言。掌握了以上的内容，就给练武术打好了基本功，虽然不见得有多优秀，但是肯定是根正苗红，将来不必绕大弯子。就算是临时使用的语言，把上面这个提纲精简一下，只看蓝色重体字的部分，大致能在几天到一周内搞定，不算是太耗时，而且写出来的代码不会太不靠谱。\n\n以上提纲未设及内存模型。对于C/C++，这个问题很重要，要放在显著位置来考虑，但对于其他语言，这个问题被透明化了，除非你要做hardcore项目，否则不必太关注。\n\n\n\n快速入门一门语言：\n\n* 基本数据类型、基本输入输出、基本语法（判断、逻辑语句）、注释\n* 数组、集合类、字符串处理、文件处理（cli）\n* callback、面向对象、多线程、网络请求、异常处理、序列化和反序列化\n* 运行时、编译原理、常用算法（分治、动态规划）\n\n本文最后，感谢孟岩老师指点。\n\n\n","slug":"如何快速学习一门编程语言","published":0,"date":"2024-01-02T16:09:25.075Z","updated":"2024-01-02T16:09:25.075Z","_id":"clqwm2cgw001xuc7t2nxzbsej","comments":1,"layout":"post","photos":[],"link":"","content":"<p>前言：现在的工作要求我们如何在短期内高效的自学一门语言，本文记录了我学习的一些新的与看法。</p>\n<p>自学编程的重要思想：Practice make perfect（熟能生巧）</p>\n<ul>\n<li>watch</li>\n<li><strong>do</strong></li>\n<li>read<span id=\"more\"></span></li>\n</ul>\n<p>现在的开发工作要求我们能够快速掌握一门语言。一般来说应对这种挑战有两种态度：<br>其一，粗粗看看语法，就撸起袖子开干，边查Google边学习；<br>其二是花很多时间完整地把整个语言学习一遍，做到胸有成竹，然后再开始做实际工作。</p>\n<p>然而这两种方法都有弊病。<br>第二种方法的问题当然很明显，不仅浪费了时间，偏离了目标，而且学习效率不高。因为没有实际问题驱动的语言学习通常是不牢固不深入的。有的人学着学着成了语言专家，反而忘了自己原本是要解决问题来的。</p>\n<p>第一种路子也有问题，在对于这种语言的脾气秉性还没有了解的情况下大刀阔斧地拼凑代码，写出来的东西肯定不入流。说穿新鞋走老路，新瓶装旧酒，那都是小问题，真正严重的是这样的程序员可以在短时间内堆积大量充满缺陷的垃圾代码。由于通常开发阶段的测试完备程度有限，这些垃圾代码往往能通过这个阶段，从而潜伏下来，在后期成为整个项目的毒瘤，反反复复让后来的维护者陷入西西弗斯困境。</p>\n<p>实际上语言学习有一定规律可循，对于已经掌握一门语言的开发者来说，对于一般的语言，完全可以以最快的速度，在几天至一周之内掌握其最常用的50%，而且保证路子基本正宗，没有出偏的弊病。</p>\n<p><strong>其实真正写程序不怕完全不会，最怕一知半解的去攒解决方案。</strong></p>\n<p>因为你完全不会，就自然会去认真查书学习，如果学习能力好的话，写出来的代码质量不会差。而一知半解，自己动手土法炼钢，那搞出来的基本上都是废铜烂铁。比如错误处理和序列化，很多人不去了解“正路子”，而是凭借自己的一知半解去攒野路子，这是最危险的。因此，即使时间再紧张，这些内容也是必须首先完整了解一遍的。掌握这些内容之后进入实际开发，即使有问题，也基本不会伤及项目大体。而开发者本人则可以安步当车，慢慢在实践中提高自己。</p>\n<p>以下列出一个学习提纲，主要针对的是有经验的人，初学者不合适。这个提纲只能用于一般的庸俗编程语言学习，目前在流行编程语言排行榜上排前20的基本上都是庸俗语言。如果你要学的是LISP之类非庸俗语言，或是某个软件中的二次开发语言，这里的建议未必合适。还是那句话，仅供参考。</p>\n<ol>\n<li><p>首先了解该语言的<strong>基本数据类型</strong>，<strong>基本语法</strong>和主要<strong>语言构造</strong>，主要数学运算符和print函数的使用，达到能够写谭浩强程序设计书课后数学习题的程度；</p>\n</li>\n<li><p>其次掌握<strong>数组</strong>和其他<strong>集合类</strong>的使用，有基础的话可以理解一下<em>泛型</em>，如果理解不了也问题不大，后面可以补；</p>\n</li>\n<li><p>简单<em><strong>字符串处理</strong></em>。所谓简单，就是Regex和<a href=\"https://blog.csdn.net/cxihu/article/details/52184356\">Parser</a>以下的内容，什么查找替换，截断去字串之类的。不过这个阶段有一个难点，就是字符编码问题。如果理解不了，可以先跳过，否则的话最好在这时候把这个问题搞定，免留后患；</p>\n</li>\n<li><p>基本<strong>面向对象或者函数式编程的特征</strong>，无非是什么继承、多态、Lambda函数之类的，如果有经验的话很快就明白了；</p>\n</li>\n<li><p>异常、错误处理、断言、日志和调试支持，对单元测试的支持。你不一定要用<a href=\"https://www.ibm.com/developerworks/cn/linux/l-tdd/\">TDD</a>，但是在这个时候应该掌握在这个语言里做TDD的基本技能；</p>\n</li>\n<li><p>程序代码和可执行代码的组织机制，运行时模块加载、符号查找机制，这是初学时的一个难点，因为大部分书都不太注意介绍这个极为重要的内容；</p>\n</li>\n<li><p><strong>基本输入输出和文件处理</strong>，输入输出流类的组织，这通常是比较繁琐的一部分，可以提纲挈领学一下，搞清楚概念，用到的时候查就是了。到这个阶段可以写大部分控制台应用了；</p>\n</li>\n<li><p>该语言如何进行<strong>callback</strong>方法调用，如何支持事件驱动编程模型。在现代编程环境下，这个问题是涉及开发思想的一个核心问题，几乎每种语言在这里都会用足功夫，.NET的delegate，Java的anonymous inner class，Java 7的closure，C++OX的 tr1::function&#x2F;bind，五花八门。如果能彻底理解这个问题，不但程序就不至于写得太走样，而且对该语言的设计思路也能有比较好的认识；</p>\n</li>\n<li><p>如果有必要，可在这时研究regex和<a href=\"http://www.cnblogs.com/lanxuezaipiao/archive/2013/05/17/3082949.html\">XML处理</a>问题，如无必要可跳过；</p>\n</li>\n<li><p><a href=\"https://www.zhihu.com/question/20706270/answer/15919891\">序列化和反序列化</a>，掌握一下缺省的机制就可以了；</p>\n</li>\n<li><p>如果必要，可了解一下<strong>线程、并发和异步调用机制</strong>，主要是为了读懂别人的代码，如果自己要写这类代码，<strong>必须专门花时间严肃认真系统地学习</strong>，严禁半桶水上阵；</p>\n</li>\n<li><p>动态编程，反射和元数据编程，<!--这块没懂-->数据和程序之间的相互转化机制，<strong>运行时编译和执行的机制</strong>，有抱负的开发者在这块可以多下些功夫，能够使你对语言的认识高出一个层面；</p>\n</li>\n<li><p>如果有必要，可研究一下该语言对于泛型的支持，不必花太多时间，只要能使用现成的泛型集合和泛型函数就可以了，可在以后闲暇时抽时间系统学习。需要注意的是，泛型技术跟多线程技术一样，用不好就成为万恶之源，必须系统学习，谨慎使用，否则不如不学不用；</p>\n</li>\n<li><p>如果还有时间，最好咨询一下有经验的人，看看这个语言较常用的features是什么，如果之前没学过，应当补一下。比如Ruby的block interator, Java的dynamic proxy，C# 3的LINQ和extension method。没时间的话，我认为也可以边做边学，没有大问题。</p>\n</li>\n<li><p>有必要的话，在工作的闲暇时间，可以着重考察两个问题，第一，这个语言有哪些惯用法和模式，第二，这个语言的编译&#x2F;解释执行机制。</p>\n</li>\n</ol>\n<p>至此语言的基本部分就可以说掌握了，之后是做数据库、网络还是做图形，可以根据具体需求去搞，找相应的成熟框架或库，边做边学，加深理解。对于一个庸俗语言，我自己把上面的内容走一遍大概要花2-3周时间，不能算很快，但也耽误不了太多事情，毕竟不是每个月都学新语言。掌握了以上的内容，就给练武术打好了基本功，虽然不见得有多优秀，但是肯定是根正苗红，将来不必绕大弯子。就算是临时使用的语言，把上面这个提纲精简一下，只看蓝色重体字的部分，大致能在几天到一周内搞定，不算是太耗时，而且写出来的代码不会太不靠谱。</p>\n<p>以上提纲未设及内存模型。对于C&#x2F;C++，这个问题很重要，要放在显著位置来考虑，但对于其他语言，这个问题被透明化了，除非你要做hardcore项目，否则不必太关注。</p>\n<p>快速入门一门语言：</p>\n<ul>\n<li>基本数据类型、基本输入输出、基本语法（判断、逻辑语句）、注释</li>\n<li>数组、集合类、字符串处理、文件处理（cli）</li>\n<li>callback、面向对象、多线程、网络请求、异常处理、序列化和反序列化</li>\n<li>运行时、编译原理、常用算法（分治、动态规划）</li>\n</ul>\n<p>本文最后，感谢孟岩老师指点。</p>\n","site":{"data":{"gallery":{"图片名称":{"full_link":"http://miccall.tech/img/twx.jpg","thumb_link":"http://miccall.tech/img/twx.jpg","descr":"图片描述"}},"links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}},"_links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}}}},"excerpt":"<p>前言：现在的工作要求我们如何在短期内高效的自学一门语言，本文记录了我学习的一些新的与看法。</p>\n<p>自学编程的重要思想：Practice make perfect（熟能生巧）</p>\n<ul>\n<li>watch</li>\n<li><strong>do</strong></li>\n<li>read","more":"</li>\n</ul>\n<p>现在的开发工作要求我们能够快速掌握一门语言。一般来说应对这种挑战有两种态度：<br>其一，粗粗看看语法，就撸起袖子开干，边查Google边学习；<br>其二是花很多时间完整地把整个语言学习一遍，做到胸有成竹，然后再开始做实际工作。</p>\n<p>然而这两种方法都有弊病。<br>第二种方法的问题当然很明显，不仅浪费了时间，偏离了目标，而且学习效率不高。因为没有实际问题驱动的语言学习通常是不牢固不深入的。有的人学着学着成了语言专家，反而忘了自己原本是要解决问题来的。</p>\n<p>第一种路子也有问题，在对于这种语言的脾气秉性还没有了解的情况下大刀阔斧地拼凑代码，写出来的东西肯定不入流。说穿新鞋走老路，新瓶装旧酒，那都是小问题，真正严重的是这样的程序员可以在短时间内堆积大量充满缺陷的垃圾代码。由于通常开发阶段的测试完备程度有限，这些垃圾代码往往能通过这个阶段，从而潜伏下来，在后期成为整个项目的毒瘤，反反复复让后来的维护者陷入西西弗斯困境。</p>\n<p>实际上语言学习有一定规律可循，对于已经掌握一门语言的开发者来说，对于一般的语言，完全可以以最快的速度，在几天至一周之内掌握其最常用的50%，而且保证路子基本正宗，没有出偏的弊病。</p>\n<p><strong>其实真正写程序不怕完全不会，最怕一知半解的去攒解决方案。</strong></p>\n<p>因为你完全不会，就自然会去认真查书学习，如果学习能力好的话，写出来的代码质量不会差。而一知半解，自己动手土法炼钢，那搞出来的基本上都是废铜烂铁。比如错误处理和序列化，很多人不去了解“正路子”，而是凭借自己的一知半解去攒野路子，这是最危险的。因此，即使时间再紧张，这些内容也是必须首先完整了解一遍的。掌握这些内容之后进入实际开发，即使有问题，也基本不会伤及项目大体。而开发者本人则可以安步当车，慢慢在实践中提高自己。</p>\n<p>以下列出一个学习提纲，主要针对的是有经验的人，初学者不合适。这个提纲只能用于一般的庸俗编程语言学习，目前在流行编程语言排行榜上排前20的基本上都是庸俗语言。如果你要学的是LISP之类非庸俗语言，或是某个软件中的二次开发语言，这里的建议未必合适。还是那句话，仅供参考。</p>\n<ol>\n<li><p>首先了解该语言的<strong>基本数据类型</strong>，<strong>基本语法</strong>和主要<strong>语言构造</strong>，主要数学运算符和print函数的使用，达到能够写谭浩强程序设计书课后数学习题的程度；</p>\n</li>\n<li><p>其次掌握<strong>数组</strong>和其他<strong>集合类</strong>的使用，有基础的话可以理解一下<em>泛型</em>，如果理解不了也问题不大，后面可以补；</p>\n</li>\n<li><p>简单<em><strong>字符串处理</strong></em>。所谓简单，就是Regex和<a href=\"https://blog.csdn.net/cxihu/article/details/52184356\">Parser</a>以下的内容，什么查找替换，截断去字串之类的。不过这个阶段有一个难点，就是字符编码问题。如果理解不了，可以先跳过，否则的话最好在这时候把这个问题搞定，免留后患；</p>\n</li>\n<li><p>基本<strong>面向对象或者函数式编程的特征</strong>，无非是什么继承、多态、Lambda函数之类的，如果有经验的话很快就明白了；</p>\n</li>\n<li><p>异常、错误处理、断言、日志和调试支持，对单元测试的支持。你不一定要用<a href=\"https://www.ibm.com/developerworks/cn/linux/l-tdd/\">TDD</a>，但是在这个时候应该掌握在这个语言里做TDD的基本技能；</p>\n</li>\n<li><p>程序代码和可执行代码的组织机制，运行时模块加载、符号查找机制，这是初学时的一个难点，因为大部分书都不太注意介绍这个极为重要的内容；</p>\n</li>\n<li><p><strong>基本输入输出和文件处理</strong>，输入输出流类的组织，这通常是比较繁琐的一部分，可以提纲挈领学一下，搞清楚概念，用到的时候查就是了。到这个阶段可以写大部分控制台应用了；</p>\n</li>\n<li><p>该语言如何进行<strong>callback</strong>方法调用，如何支持事件驱动编程模型。在现代编程环境下，这个问题是涉及开发思想的一个核心问题，几乎每种语言在这里都会用足功夫，.NET的delegate，Java的anonymous inner class，Java 7的closure，C++OX的 tr1::function&#x2F;bind，五花八门。如果能彻底理解这个问题，不但程序就不至于写得太走样，而且对该语言的设计思路也能有比较好的认识；</p>\n</li>\n<li><p>如果有必要，可在这时研究regex和<a href=\"http://www.cnblogs.com/lanxuezaipiao/archive/2013/05/17/3082949.html\">XML处理</a>问题，如无必要可跳过；</p>\n</li>\n<li><p><a href=\"https://www.zhihu.com/question/20706270/answer/15919891\">序列化和反序列化</a>，掌握一下缺省的机制就可以了；</p>\n</li>\n<li><p>如果必要，可了解一下<strong>线程、并发和异步调用机制</strong>，主要是为了读懂别人的代码，如果自己要写这类代码，<strong>必须专门花时间严肃认真系统地学习</strong>，严禁半桶水上阵；</p>\n</li>\n<li><p>动态编程，反射和元数据编程，<!--这块没懂-->数据和程序之间的相互转化机制，<strong>运行时编译和执行的机制</strong>，有抱负的开发者在这块可以多下些功夫，能够使你对语言的认识高出一个层面；</p>\n</li>\n<li><p>如果有必要，可研究一下该语言对于泛型的支持，不必花太多时间，只要能使用现成的泛型集合和泛型函数就可以了，可在以后闲暇时抽时间系统学习。需要注意的是，泛型技术跟多线程技术一样，用不好就成为万恶之源，必须系统学习，谨慎使用，否则不如不学不用；</p>\n</li>\n<li><p>如果还有时间，最好咨询一下有经验的人，看看这个语言较常用的features是什么，如果之前没学过，应当补一下。比如Ruby的block interator, Java的dynamic proxy，C# 3的LINQ和extension method。没时间的话，我认为也可以边做边学，没有大问题。</p>\n</li>\n<li><p>有必要的话，在工作的闲暇时间，可以着重考察两个问题，第一，这个语言有哪些惯用法和模式，第二，这个语言的编译&#x2F;解释执行机制。</p>\n</li>\n</ol>\n<p>至此语言的基本部分就可以说掌握了，之后是做数据库、网络还是做图形，可以根据具体需求去搞，找相应的成熟框架或库，边做边学，加深理解。对于一个庸俗语言，我自己把上面的内容走一遍大概要花2-3周时间，不能算很快，但也耽误不了太多事情，毕竟不是每个月都学新语言。掌握了以上的内容，就给练武术打好了基本功，虽然不见得有多优秀，但是肯定是根正苗红，将来不必绕大弯子。就算是临时使用的语言，把上面这个提纲精简一下，只看蓝色重体字的部分，大致能在几天到一周内搞定，不算是太耗时，而且写出来的代码不会太不靠谱。</p>\n<p>以上提纲未设及内存模型。对于C&#x2F;C++，这个问题很重要，要放在显著位置来考虑，但对于其他语言，这个问题被透明化了，除非你要做hardcore项目，否则不必太关注。</p>\n<p>快速入门一门语言：</p>\n<ul>\n<li>基本数据类型、基本输入输出、基本语法（判断、逻辑语句）、注释</li>\n<li>数组、集合类、字符串处理、文件处理（cli）</li>\n<li>callback、面向对象、多线程、网络请求、异常处理、序列化和反序列化</li>\n<li>运行时、编译原理、常用算法（分治、动态规划）</li>\n</ul>\n<p>本文最后，感谢孟岩老师指点。</p>"},{"title":"图解HTTP读书笔记","_content":"## 第一章\n### OSI 七层协议与 TCP/IP 四层协议\n\n* OSI 七层：应表会传网数物\n* TCP/IP 四层：\n  * 应用层：（HTTP 数据 ： HTTP 报文）\n  * 传输层：（TCP/UDP 首部:TCP/UDP 报头）\n  * 网络层：网络层用来处理在网络上流动的数据包。数据包是该层传输的最小单位。（IP 首部：IP 报头）\n  * 链路层：用来处理连接网络硬件部分（以太网首部：以太网帧）\n  \n发送端：每通过一层则加一个首部（封装）\n接收端：每通过一层则删一个首部。\n\n知识碎片：\nARP 协议：使用 ARP 协议 凭借 MAC 地址进行通讯。（可以通过通讯方的 IP 地址反查其MAC 地址）。\n\n为了确保准确无误的传输数据，TCP 采用了3次握手传输策略。握手的过程中采用了flag，SYN（synchronize同步） 和 ACK（acknowledgement确认收信）\n![Snip20180511_2](http://p8e50ub7d.bkt.clouddn.com/Snip20180511_2.png)\n\n\n$h(x) = \\theta_0 + \\theta_1 x$\n\n$$\nx^\\prime\n$$\n\n","source":"_drafts/图解HTTP读书笔记.md","raw":"---\ntitle: 图解HTTP读书笔记\ntags:\n---\n## 第一章\n### OSI 七层协议与 TCP/IP 四层协议\n\n* OSI 七层：应表会传网数物\n* TCP/IP 四层：\n  * 应用层：（HTTP 数据 ： HTTP 报文）\n  * 传输层：（TCP/UDP 首部:TCP/UDP 报头）\n  * 网络层：网络层用来处理在网络上流动的数据包。数据包是该层传输的最小单位。（IP 首部：IP 报头）\n  * 链路层：用来处理连接网络硬件部分（以太网首部：以太网帧）\n  \n发送端：每通过一层则加一个首部（封装）\n接收端：每通过一层则删一个首部。\n\n知识碎片：\nARP 协议：使用 ARP 协议 凭借 MAC 地址进行通讯。（可以通过通讯方的 IP 地址反查其MAC 地址）。\n\n为了确保准确无误的传输数据，TCP 采用了3次握手传输策略。握手的过程中采用了flag，SYN（synchronize同步） 和 ACK（acknowledgement确认收信）\n![Snip20180511_2](http://p8e50ub7d.bkt.clouddn.com/Snip20180511_2.png)\n\n\n$h(x) = \\theta_0 + \\theta_1 x$\n\n$$\nx^\\prime\n$$\n\n","slug":"图解HTTP读书笔记","published":0,"date":"2024-01-02T16:09:25.075Z","updated":"2024-01-02T16:09:25.075Z","_id":"clqwm2cgx001yuc7te5i703r4","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"第一章\"><a href=\"#第一章\" class=\"headerlink\" title=\"第一章\"></a>第一章</h2><h3 id=\"OSI-七层协议与-TCP-IP-四层协议\"><a href=\"#OSI-七层协议与-TCP-IP-四层协议\" class=\"headerlink\" title=\"OSI 七层协议与 TCP&#x2F;IP 四层协议\"></a>OSI 七层协议与 TCP&#x2F;IP 四层协议</h3><ul>\n<li>OSI 七层：应表会传网数物</li>\n<li>TCP&#x2F;IP 四层：<ul>\n<li>应用层：（HTTP 数据 ： HTTP 报文）</li>\n<li>传输层：（TCP&#x2F;UDP 首部:TCP&#x2F;UDP 报头）</li>\n<li>网络层：网络层用来处理在网络上流动的数据包。数据包是该层传输的最小单位。（IP 首部：IP 报头）</li>\n<li>链路层：用来处理连接网络硬件部分（以太网首部：以太网帧）</li>\n</ul>\n</li>\n</ul>\n<p>发送端：每通过一层则加一个首部（封装）<br>接收端：每通过一层则删一个首部。</p>\n<p>知识碎片：<br>ARP 协议：使用 ARP 协议 凭借 MAC 地址进行通讯。（可以通过通讯方的 IP 地址反查其MAC 地址）。</p>\n<p>为了确保准确无误的传输数据，TCP 采用了3次握手传输策略。握手的过程中采用了flag，SYN（synchronize同步） 和 ACK（acknowledgement确认收信）<br><img src=\"http://p8e50ub7d.bkt.clouddn.com/Snip20180511_2.png\" alt=\"Snip20180511_2\"></p>\n<p>$h(x) &#x3D; \\theta_0 + \\theta_1 x$</p>\n<p>$$<br>x^\\prime<br>$$</p>\n","site":{"data":{"gallery":{"图片名称":{"full_link":"http://miccall.tech/img/twx.jpg","thumb_link":"http://miccall.tech/img/twx.jpg","descr":"图片描述"}},"links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}},"_links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}}}},"excerpt":"","more":"<h2 id=\"第一章\"><a href=\"#第一章\" class=\"headerlink\" title=\"第一章\"></a>第一章</h2><h3 id=\"OSI-七层协议与-TCP-IP-四层协议\"><a href=\"#OSI-七层协议与-TCP-IP-四层协议\" class=\"headerlink\" title=\"OSI 七层协议与 TCP&#x2F;IP 四层协议\"></a>OSI 七层协议与 TCP&#x2F;IP 四层协议</h3><ul>\n<li>OSI 七层：应表会传网数物</li>\n<li>TCP&#x2F;IP 四层：<ul>\n<li>应用层：（HTTP 数据 ： HTTP 报文）</li>\n<li>传输层：（TCP&#x2F;UDP 首部:TCP&#x2F;UDP 报头）</li>\n<li>网络层：网络层用来处理在网络上流动的数据包。数据包是该层传输的最小单位。（IP 首部：IP 报头）</li>\n<li>链路层：用来处理连接网络硬件部分（以太网首部：以太网帧）</li>\n</ul>\n</li>\n</ul>\n<p>发送端：每通过一层则加一个首部（封装）<br>接收端：每通过一层则删一个首部。</p>\n<p>知识碎片：<br>ARP 协议：使用 ARP 协议 凭借 MAC 地址进行通讯。（可以通过通讯方的 IP 地址反查其MAC 地址）。</p>\n<p>为了确保准确无误的传输数据，TCP 采用了3次握手传输策略。握手的过程中采用了flag，SYN（synchronize同步） 和 ACK（acknowledgement确认收信）<br><img src=\"http://p8e50ub7d.bkt.clouddn.com/Snip20180511_2.png\" alt=\"Snip20180511_2\"></p>\n<p>$h(x) &#x3D; \\theta_0 + \\theta_1 x$</p>\n<p>$$<br>x^\\prime<br>$$</p>\n"},{"title":"命理研究","_content":"\n因為大陸的個別一簡字和二簡字改變了很多漢字原有的含義和五行，所以本文以繁體字進行書寫。\n\n## 何謂四柱八字？\n八字即年干、年之，月干、月支，日干、日支，時干、時支組成，因為共有八個字，故稱八字。\n年、月、日、時的干支組成柱，故八字又稱四柱。\n\n八字的換算方法比較繁瑣，但是是可以通過農曆和公曆進行換算的，簡單說下換算的注意事項。\n\n1. 出生時間不一定要精確到分鐘，原則上是越接近越好；\n2. 換算時要考慮南北半球和時區的因素；\n3. 關於換日：古人有子時不算命的說法。因為稍不留意算錯了日子，命格就會大不相同。換日的方式主要有兩種，個人覺得古人是24小時進制的，所以子初換日應該更精準一些。\n   * 子初換日：（23時）\n   * 子正換日：（0時）\n4. 地支陰陽。（關於地支陰陽的部分比較複雜，後面會單開一節詳述）\n   * 藏干陰陽：以藏干的本氣取陰陽 \n   \n   > 十二地支地支藏干的口诀是:\n        子宫壬癸在其中，丑癸辛金己土同；\n        寅宫甲木兼丙戊，卯宫甲乙木相逢，\n        辰藏乙戊三分癸，巳中庚金丙戊丛；\n        午宫丙丁火己土，未宫乙己丁共宗；\n        申位庚金壬水戊，酉宫庚辛金丰隆；\n        戌宫辛金及丁戊，亥藏壬甲戊真踪。\n        \n    ![地支藏干表](http://www.baziguwen.com/upload_files/article/50/1_1318297802_2275391.jpg)\n        \n   * 奇偶陰陽：奇數為陽，偶數為陰\n5. 個別國家要考慮[夏令時](https://zh.wikipedia.org/wiki/%E5%A4%8F%E6%97%B6%E5%88%B6#_%E4%B8%AD%E5%9B%BD%E5%A4%A7%E9%99%86)的因素，這個和國家政策有關。例如中國曾在1986年~1991年短暫興起過夏令時。\n6. 因為八字的換算比較複雜，大家可以使用工具進行換算（注意考慮特殊情況。）\n   這裡額外說下關於月份的問題。雖然一年有12個月，但是并不是與地支一一對應的，很多新手會誤以為是一一對應關係，實則不然，是以節氣進行換算的，這裡可以參考下 [wiki](https://zh.wikipedia.org/wiki/%E5%9C%B0%E6%94%AF)。\n\n## 八字、陰陽、五行\n天干地支不僅有陰陽屬性，還有五行屬性。天干的陰陽屬性遵循奇數為陽，偶數為陰的特性，地支的陰陽分兩種，一派認為遵循奇偶特性，還有一派認為應該以地支藏干為準。（本人傾向於後者）\n\n**地支藏干：**\n*每個地支包含一個或多個天干*，從而包含一種或多種陰陽五行的性質，這個就叫地支藏干。所謂的藏干，就是用天干來記述的方式。\n每个地支藏干，按照强弱来分可分为“本气”、“杂气”和“余气”，影响分别占5/8、1/8和2/8。（地支的本氣一定會有，雜氣、余氣分情況）\n\n地支的五行藏干五行口訣除了上述口訣外，還有如下口訣，大家按自己喜好背誦即可。\n> 子中单癸水，丑藏己癸辛，寅藏甲丙戊，卯中乙木藏，辰中戊乙癸，巳内丙戊庚，午中藏丁己，未藏己丁乙，申中庚壬戊，酉内只藏辛，戌中戊辛丁，亥中壬甲藏。\n\n注意：算的時候先算天干的陰陽五行，在按口訣算出地支藏干。不過關於本氣，雜氣、余氣就得自己背了，這個沒有口訣。\n\n這里有個盲點，大家學習陰陽五行的時候，不要把藏干的五行和地支的五行弄混，地支的五行是固定的，如辰土，巳火（聽起來是不是很像死活），而地支藏干的五行是要看本氣、雜氣和余氣的。\n\n關於口訣：\n第一個口訣裡面還包含月令用事。那麼啥是月令呢？月令又有什麼用？\n\n一個人的命格由他的日干和月支所決定。（這裡要弄清什麼是干和支）\n日干又叫日主，也稱為本命元神，**命主，日主代表一個人最根本的本質和本性。**\n月令就是你的月支。**月令直接影響一個人的性格特質。**\n   \n關於命格：(因為月支是地支，所以要注意藏干中的本氣，雜氣和余氣)\n> 關於命格： 關於命格之選定，若日干與月支的組合符合建祿格或月刃格條件，則優先取格。 否則再依月支藏干中的本氣、中氣、餘氣順序，取透干的藏干所代表的十神為格。 若月支藏干全無透干現象，則取本氣所代表的十神為格。 這樣選出的格局稱為「普通格局」。由此您可看出哪個十神是您的性格代表。 \n\n## 十神\n十神\n\n\n","source":"_drafts/命理研究.md","raw":"---\ntitle: 命理研究\ntags:\n---\n\n因為大陸的個別一簡字和二簡字改變了很多漢字原有的含義和五行，所以本文以繁體字進行書寫。\n\n## 何謂四柱八字？\n八字即年干、年之，月干、月支，日干、日支，時干、時支組成，因為共有八個字，故稱八字。\n年、月、日、時的干支組成柱，故八字又稱四柱。\n\n八字的換算方法比較繁瑣，但是是可以通過農曆和公曆進行換算的，簡單說下換算的注意事項。\n\n1. 出生時間不一定要精確到分鐘，原則上是越接近越好；\n2. 換算時要考慮南北半球和時區的因素；\n3. 關於換日：古人有子時不算命的說法。因為稍不留意算錯了日子，命格就會大不相同。換日的方式主要有兩種，個人覺得古人是24小時進制的，所以子初換日應該更精準一些。\n   * 子初換日：（23時）\n   * 子正換日：（0時）\n4. 地支陰陽。（關於地支陰陽的部分比較複雜，後面會單開一節詳述）\n   * 藏干陰陽：以藏干的本氣取陰陽 \n   \n   > 十二地支地支藏干的口诀是:\n        子宫壬癸在其中，丑癸辛金己土同；\n        寅宫甲木兼丙戊，卯宫甲乙木相逢，\n        辰藏乙戊三分癸，巳中庚金丙戊丛；\n        午宫丙丁火己土，未宫乙己丁共宗；\n        申位庚金壬水戊，酉宫庚辛金丰隆；\n        戌宫辛金及丁戊，亥藏壬甲戊真踪。\n        \n    ![地支藏干表](http://www.baziguwen.com/upload_files/article/50/1_1318297802_2275391.jpg)\n        \n   * 奇偶陰陽：奇數為陽，偶數為陰\n5. 個別國家要考慮[夏令時](https://zh.wikipedia.org/wiki/%E5%A4%8F%E6%97%B6%E5%88%B6#_%E4%B8%AD%E5%9B%BD%E5%A4%A7%E9%99%86)的因素，這個和國家政策有關。例如中國曾在1986年~1991年短暫興起過夏令時。\n6. 因為八字的換算比較複雜，大家可以使用工具進行換算（注意考慮特殊情況。）\n   這裡額外說下關於月份的問題。雖然一年有12個月，但是并不是與地支一一對應的，很多新手會誤以為是一一對應關係，實則不然，是以節氣進行換算的，這裡可以參考下 [wiki](https://zh.wikipedia.org/wiki/%E5%9C%B0%E6%94%AF)。\n\n## 八字、陰陽、五行\n天干地支不僅有陰陽屬性，還有五行屬性。天干的陰陽屬性遵循奇數為陽，偶數為陰的特性，地支的陰陽分兩種，一派認為遵循奇偶特性，還有一派認為應該以地支藏干為準。（本人傾向於後者）\n\n**地支藏干：**\n*每個地支包含一個或多個天干*，從而包含一種或多種陰陽五行的性質，這個就叫地支藏干。所謂的藏干，就是用天干來記述的方式。\n每个地支藏干，按照强弱来分可分为“本气”、“杂气”和“余气”，影响分别占5/8、1/8和2/8。（地支的本氣一定會有，雜氣、余氣分情況）\n\n地支的五行藏干五行口訣除了上述口訣外，還有如下口訣，大家按自己喜好背誦即可。\n> 子中单癸水，丑藏己癸辛，寅藏甲丙戊，卯中乙木藏，辰中戊乙癸，巳内丙戊庚，午中藏丁己，未藏己丁乙，申中庚壬戊，酉内只藏辛，戌中戊辛丁，亥中壬甲藏。\n\n注意：算的時候先算天干的陰陽五行，在按口訣算出地支藏干。不過關於本氣，雜氣、余氣就得自己背了，這個沒有口訣。\n\n這里有個盲點，大家學習陰陽五行的時候，不要把藏干的五行和地支的五行弄混，地支的五行是固定的，如辰土，巳火（聽起來是不是很像死活），而地支藏干的五行是要看本氣、雜氣和余氣的。\n\n關於口訣：\n第一個口訣裡面還包含月令用事。那麼啥是月令呢？月令又有什麼用？\n\n一個人的命格由他的日干和月支所決定。（這裡要弄清什麼是干和支）\n日干又叫日主，也稱為本命元神，**命主，日主代表一個人最根本的本質和本性。**\n月令就是你的月支。**月令直接影響一個人的性格特質。**\n   \n關於命格：(因為月支是地支，所以要注意藏干中的本氣，雜氣和余氣)\n> 關於命格： 關於命格之選定，若日干與月支的組合符合建祿格或月刃格條件，則優先取格。 否則再依月支藏干中的本氣、中氣、餘氣順序，取透干的藏干所代表的十神為格。 若月支藏干全無透干現象，則取本氣所代表的十神為格。 這樣選出的格局稱為「普通格局」。由此您可看出哪個十神是您的性格代表。 \n\n## 十神\n十神\n\n\n","slug":"命理研究","published":0,"date":"2024-01-02T16:09:25.075Z","updated":"2024-01-02T16:09:25.075Z","_id":"clqwm2cgy0020uc7t04s76rn7","comments":1,"layout":"post","photos":[],"link":"","content":"<p>因為大陸的個別一簡字和二簡字改變了很多漢字原有的含義和五行，所以本文以繁體字進行書寫。</p>\n<h2 id=\"何謂四柱八字？\"><a href=\"#何謂四柱八字？\" class=\"headerlink\" title=\"何謂四柱八字？\"></a>何謂四柱八字？</h2><p>八字即年干、年之，月干、月支，日干、日支，時干、時支組成，因為共有八個字，故稱八字。<br>年、月、日、時的干支組成柱，故八字又稱四柱。</p>\n<p>八字的換算方法比較繁瑣，但是是可以通過農曆和公曆進行換算的，簡單說下換算的注意事項。</p>\n<ol>\n<li><p>出生時間不一定要精確到分鐘，原則上是越接近越好；</p>\n</li>\n<li><p>換算時要考慮南北半球和時區的因素；</p>\n</li>\n<li><p>關於換日：古人有子時不算命的說法。因為稍不留意算錯了日子，命格就會大不相同。換日的方式主要有兩種，個人覺得古人是24小時進制的，所以子初換日應該更精準一些。</p>\n<ul>\n<li>子初換日：（23時）</li>\n<li>子正換日：（0時）</li>\n</ul>\n</li>\n<li><p>地支陰陽。（關於地支陰陽的部分比較複雜，後面會單開一節詳述）</p>\n<ul>\n<li>藏干陰陽：以藏干的本氣取陰陽</li>\n</ul>\n<blockquote>\n<p>十二地支地支藏干的口诀是:<br>     子宫壬癸在其中，丑癸辛金己土同；<br>     寅宫甲木兼丙戊，卯宫甲乙木相逢，<br>     辰藏乙戊三分癸，巳中庚金丙戊丛；<br>     午宫丙丁火己土，未宫乙己丁共宗；<br>     申位庚金壬水戊，酉宫庚辛金丰隆；<br>     戌宫辛金及丁戊，亥藏壬甲戊真踪。</p>\n</blockquote>\n<p> <img src=\"http://www.baziguwen.com/upload_files/article/50/1_1318297802_2275391.jpg\" alt=\"地支藏干表\"></p>\n<ul>\n<li>奇偶陰陽：奇數為陽，偶數為陰</li>\n</ul>\n</li>\n<li><p>個別國家要考慮<a href=\"https://zh.wikipedia.org/wiki/%E5%A4%8F%E6%97%B6%E5%88%B6#_%E4%B8%AD%E5%9B%BD%E5%A4%A7%E9%99%86\">夏令時</a>的因素，這個和國家政策有關。例如中國曾在1986年~1991年短暫興起過夏令時。</p>\n</li>\n<li><p>因為八字的換算比較複雜，大家可以使用工具進行換算（注意考慮特殊情況。）<br>這裡額外說下關於月份的問題。雖然一年有12個月，但是并不是與地支一一對應的，很多新手會誤以為是一一對應關係，實則不然，是以節氣進行換算的，這裡可以參考下 <a href=\"https://zh.wikipedia.org/wiki/%E5%9C%B0%E6%94%AF\">wiki</a>。</p>\n</li>\n</ol>\n<h2 id=\"八字、陰陽、五行\"><a href=\"#八字、陰陽、五行\" class=\"headerlink\" title=\"八字、陰陽、五行\"></a>八字、陰陽、五行</h2><p>天干地支不僅有陰陽屬性，還有五行屬性。天干的陰陽屬性遵循奇數為陽，偶數為陰的特性，地支的陰陽分兩種，一派認為遵循奇偶特性，還有一派認為應該以地支藏干為準。（本人傾向於後者）</p>\n<p><strong>地支藏干：</strong><br><em>每個地支包含一個或多個天干</em>，從而包含一種或多種陰陽五行的性質，這個就叫地支藏干。所謂的藏干，就是用天干來記述的方式。<br>每个地支藏干，按照强弱来分可分为“本气”、“杂气”和“余气”，影响分别占5&#x2F;8、1&#x2F;8和2&#x2F;8。（地支的本氣一定會有，雜氣、余氣分情況）</p>\n<p>地支的五行藏干五行口訣除了上述口訣外，還有如下口訣，大家按自己喜好背誦即可。</p>\n<blockquote>\n<p>子中单癸水，丑藏己癸辛，寅藏甲丙戊，卯中乙木藏，辰中戊乙癸，巳内丙戊庚，午中藏丁己，未藏己丁乙，申中庚壬戊，酉内只藏辛，戌中戊辛丁，亥中壬甲藏。</p>\n</blockquote>\n<p>注意：算的時候先算天干的陰陽五行，在按口訣算出地支藏干。不過關於本氣，雜氣、余氣就得自己背了，這個沒有口訣。</p>\n<p>這里有個盲點，大家學習陰陽五行的時候，不要把藏干的五行和地支的五行弄混，地支的五行是固定的，如辰土，巳火（聽起來是不是很像死活），而地支藏干的五行是要看本氣、雜氣和余氣的。</p>\n<p>關於口訣：<br>第一個口訣裡面還包含月令用事。那麼啥是月令呢？月令又有什麼用？</p>\n<p>一個人的命格由他的日干和月支所決定。（這裡要弄清什麼是干和支）<br>日干又叫日主，也稱為本命元神，<strong>命主，日主代表一個人最根本的本質和本性。</strong><br>月令就是你的月支。<strong>月令直接影響一個人的性格特質。</strong></p>\n<p>關於命格：(因為月支是地支，所以要注意藏干中的本氣，雜氣和余氣)</p>\n<blockquote>\n<p>關於命格： 關於命格之選定，若日干與月支的組合符合建祿格或月刃格條件，則優先取格。 否則再依月支藏干中的本氣、中氣、餘氣順序，取透干的藏干所代表的十神為格。 若月支藏干全無透干現象，則取本氣所代表的十神為格。 這樣選出的格局稱為「普通格局」。由此您可看出哪個十神是您的性格代表。 </p>\n</blockquote>\n<h2 id=\"十神\"><a href=\"#十神\" class=\"headerlink\" title=\"十神\"></a>十神</h2><p>十神</p>\n","site":{"data":{"gallery":{"图片名称":{"full_link":"http://miccall.tech/img/twx.jpg","thumb_link":"http://miccall.tech/img/twx.jpg","descr":"图片描述"}},"links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}},"_links":{"三国杀":{"link":"https://hexo.io/zh-cn/docs/front-matter.html","avatar":"http://miccall.tech/img/twx.jpg","descr":"没啥想说的"}}}},"excerpt":"","more":"<p>因為大陸的個別一簡字和二簡字改變了很多漢字原有的含義和五行，所以本文以繁體字進行書寫。</p>\n<h2 id=\"何謂四柱八字？\"><a href=\"#何謂四柱八字？\" class=\"headerlink\" title=\"何謂四柱八字？\"></a>何謂四柱八字？</h2><p>八字即年干、年之，月干、月支，日干、日支，時干、時支組成，因為共有八個字，故稱八字。<br>年、月、日、時的干支組成柱，故八字又稱四柱。</p>\n<p>八字的換算方法比較繁瑣，但是是可以通過農曆和公曆進行換算的，簡單說下換算的注意事項。</p>\n<ol>\n<li><p>出生時間不一定要精確到分鐘，原則上是越接近越好；</p>\n</li>\n<li><p>換算時要考慮南北半球和時區的因素；</p>\n</li>\n<li><p>關於換日：古人有子時不算命的說法。因為稍不留意算錯了日子，命格就會大不相同。換日的方式主要有兩種，個人覺得古人是24小時進制的，所以子初換日應該更精準一些。</p>\n<ul>\n<li>子初換日：（23時）</li>\n<li>子正換日：（0時）</li>\n</ul>\n</li>\n<li><p>地支陰陽。（關於地支陰陽的部分比較複雜，後面會單開一節詳述）</p>\n<ul>\n<li>藏干陰陽：以藏干的本氣取陰陽</li>\n</ul>\n<blockquote>\n<p>十二地支地支藏干的口诀是:<br>     子宫壬癸在其中，丑癸辛金己土同；<br>     寅宫甲木兼丙戊，卯宫甲乙木相逢，<br>     辰藏乙戊三分癸，巳中庚金丙戊丛；<br>     午宫丙丁火己土，未宫乙己丁共宗；<br>     申位庚金壬水戊，酉宫庚辛金丰隆；<br>     戌宫辛金及丁戊，亥藏壬甲戊真踪。</p>\n</blockquote>\n<p> <img src=\"http://www.baziguwen.com/upload_files/article/50/1_1318297802_2275391.jpg\" alt=\"地支藏干表\"></p>\n<ul>\n<li>奇偶陰陽：奇數為陽，偶數為陰</li>\n</ul>\n</li>\n<li><p>個別國家要考慮<a href=\"https://zh.wikipedia.org/wiki/%E5%A4%8F%E6%97%B6%E5%88%B6#_%E4%B8%AD%E5%9B%BD%E5%A4%A7%E9%99%86\">夏令時</a>的因素，這個和國家政策有關。例如中國曾在1986年~1991年短暫興起過夏令時。</p>\n</li>\n<li><p>因為八字的換算比較複雜，大家可以使用工具進行換算（注意考慮特殊情況。）<br>這裡額外說下關於月份的問題。雖然一年有12個月，但是并不是與地支一一對應的，很多新手會誤以為是一一對應關係，實則不然，是以節氣進行換算的，這裡可以參考下 <a href=\"https://zh.wikipedia.org/wiki/%E5%9C%B0%E6%94%AF\">wiki</a>。</p>\n</li>\n</ol>\n<h2 id=\"八字、陰陽、五行\"><a href=\"#八字、陰陽、五行\" class=\"headerlink\" title=\"八字、陰陽、五行\"></a>八字、陰陽、五行</h2><p>天干地支不僅有陰陽屬性，還有五行屬性。天干的陰陽屬性遵循奇數為陽，偶數為陰的特性，地支的陰陽分兩種，一派認為遵循奇偶特性，還有一派認為應該以地支藏干為準。（本人傾向於後者）</p>\n<p><strong>地支藏干：</strong><br><em>每個地支包含一個或多個天干</em>，從而包含一種或多種陰陽五行的性質，這個就叫地支藏干。所謂的藏干，就是用天干來記述的方式。<br>每个地支藏干，按照强弱来分可分为“本气”、“杂气”和“余气”，影响分别占5&#x2F;8、1&#x2F;8和2&#x2F;8。（地支的本氣一定會有，雜氣、余氣分情況）</p>\n<p>地支的五行藏干五行口訣除了上述口訣外，還有如下口訣，大家按自己喜好背誦即可。</p>\n<blockquote>\n<p>子中单癸水，丑藏己癸辛，寅藏甲丙戊，卯中乙木藏，辰中戊乙癸，巳内丙戊庚，午中藏丁己，未藏己丁乙，申中庚壬戊，酉内只藏辛，戌中戊辛丁，亥中壬甲藏。</p>\n</blockquote>\n<p>注意：算的時候先算天干的陰陽五行，在按口訣算出地支藏干。不過關於本氣，雜氣、余氣就得自己背了，這個沒有口訣。</p>\n<p>這里有個盲點，大家學習陰陽五行的時候，不要把藏干的五行和地支的五行弄混，地支的五行是固定的，如辰土，巳火（聽起來是不是很像死活），而地支藏干的五行是要看本氣、雜氣和余氣的。</p>\n<p>關於口訣：<br>第一個口訣裡面還包含月令用事。那麼啥是月令呢？月令又有什麼用？</p>\n<p>一個人的命格由他的日干和月支所決定。（這裡要弄清什麼是干和支）<br>日干又叫日主，也稱為本命元神，<strong>命主，日主代表一個人最根本的本質和本性。</strong><br>月令就是你的月支。<strong>月令直接影響一個人的性格特質。</strong></p>\n<p>關於命格：(因為月支是地支，所以要注意藏干中的本氣，雜氣和余氣)</p>\n<blockquote>\n<p>關於命格： 關於命格之選定，若日干與月支的組合符合建祿格或月刃格條件，則優先取格。 否則再依月支藏干中的本氣、中氣、餘氣順序，取透干的藏干所代表的十神為格。 若月支藏干全無透干現象，則取本氣所代表的十神為格。 這樣選出的格局稱為「普通格局」。由此您可看出哪個十神是您的性格代表。 </p>\n</blockquote>\n<h2 id=\"十神\"><a href=\"#十神\" class=\"headerlink\" title=\"十神\"></a>十神</h2><p>十神</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"clqwlt7st0001uc7tgvtehqje","category_id":"clqwlt7sv0003uc7t42nmgqjx","_id":"clqwlt7sz0008uc7t620q8kl7"},{"post_id":"clqwlt7su0002uc7te8bpdp6a","category_id":"clqwlt7sv0003uc7t42nmgqjx","_id":"clqwlt7sz000auc7t0j5x53cq"},{"post_id":"clqwlt7wl000buc7t67yl86gk","category_id":"clqwlt7sv0003uc7t42nmgqjx","_id":"clqwlt7wm000duc7t1wx66cj3"},{"post_id":"clqwlt7wp000juc7t89sb4dhi","category_id":"clqwlt7sv0003uc7t42nmgqjx","_id":"clqwlt7wq000muc7t9e2jbkm4"},{"post_id":"clqwlt7wn000fuc7t6jm94xq8","category_id":"clqwlt7wo000huc7t7jp0hakx","_id":"clqwlt7wq000nuc7ta2z93ip6"},{"post_id":"clqwlt7wo000guc7t8epc1jfa","category_id":"clqwlt7wq000kuc7tg7rp6yt2","_id":"clqwlt7wr000ruc7t2sqx66dc"},{"post_id":"clqwlt7ws000tuc7tg0i0hxa4","category_id":"clqwlt7sv0003uc7t42nmgqjx","_id":"clqwlt7wv000wuc7td3qphhvr"},{"post_id":"clqwlt7wt000uuc7t74zi9b7e","category_id":"clqwlt7sv0003uc7t42nmgqjx","_id":"clqwlt7wv000yuc7thjbq8kab"},{"post_id":"clqwlt7wt000vuc7t8bi70sbc","category_id":"clqwlt7sv0003uc7t42nmgqjx","_id":"clqwlt7ww000zuc7tg26mdo6l"},{"post_id":"clqwm2cdk0011uc7t0d503k83","category_id":"clqwm2cdm0012uc7tdv8o39e4","_id":"clqwm2cdn0013uc7tb7siadk8"},{"post_id":"clqwm2cgi0016uc7tgqrv2ba2","category_id":"clqwlt7wq000kuc7tg7rp6yt2","_id":"clqwm2cgn001buc7tf2gfdlho"},{"post_id":"clqwm2cgi0017uc7t32xd7iuf","category_id":"clqwm2cdm0012uc7tdv8o39e4","_id":"clqwm2cgo001duc7t4q9x9oa9"},{"post_id":"clqwm2cgq001juc7t23nbf7j6","category_id":"clqwlt7wq000kuc7tg7rp6yt2","_id":"clqwm2cgv001suc7t93awagtf"},{"post_id":"clqwm2cgp001fuc7tbi7wfipi","category_id":"clqwm2cgq001iuc7t9pp062ij","_id":"clqwm2cgw001vuc7thqmd755q"},{"post_id":"clqwm2cgr001luc7tf6xkhxau","category_id":"clqwm2cgu001quc7th0yh6e5c","_id":"clqwm2cgz0021uc7thkfu4qvc"}],"PostTag":[{"post_id":"clqwlt7st0001uc7tgvtehqje","tag_id":"clqwlt7sw0004uc7t2gbw5m95","_id":"clqwlt7sy0007uc7ta7liesgk"},{"post_id":"clqwlt7su0002uc7te8bpdp6a","tag_id":"clqwlt7sx0006uc7t1g8r56q3","_id":"clqwlt7sz0009uc7tdc272ob4"},{"post_id":"clqwlt7wl000buc7t67yl86gk","tag_id":"clqwlt7wm000cuc7t8yf5fq95","_id":"clqwlt7wm000euc7t6jeeht6y"},{"post_id":"clqwlt7wn000fuc7t6jm94xq8","tag_id":"clqwlt7wp000iuc7t893yfw19","_id":"clqwlt7wr000puc7t6qf2g967"},{"post_id":"clqwlt7wn000fuc7t6jm94xq8","tag_id":"clqwlt7wq000luc7tcu084yjy","_id":"clqwlt7wr000quc7t211j0jv8"},{"post_id":"clqwlt7wo000guc7t8epc1jfa","tag_id":"clqwlt7wq000ouc7tg6kog8se","_id":"clqwlt7wr000suc7thnbj0owf"},{"post_id":"clqwlt7wt000vuc7t8bi70sbc","tag_id":"clqwlt7wv000xuc7t5tnm3nt3","_id":"clqwlt7ww0010uc7ta6c4e3tf"},{"post_id":"clqwm2cgi0016uc7tgqrv2ba2","tag_id":"clqwm2cgk0018uc7t5h887kw3","_id":"clqwm2cgr001kuc7tgdu37pco"},{"post_id":"clqwm2cgi0016uc7tgqrv2ba2","tag_id":"clqwm2cgo001euc7t5f121vor","_id":"clqwm2cgs001muc7te0xy7yjh"},{"post_id":"clqwm2cgi0017uc7t32xd7iuf","tag_id":"clqwm2cgq001huc7thymxem93","_id":"clqwm2cgu001puc7tc2uefv59"},{"post_id":"clqwm2cgp001fuc7tbi7wfipi","tag_id":"clqwm2cgs001nuc7t4ibdcarj","_id":"clqwm2cgw001wuc7t2vj6528m"},{"post_id":"clqwm2cgq001juc7t23nbf7j6","tag_id":"clqwm2cgv001tuc7tai23cqhg","_id":"clqwm2ch00022uc7t52yl0irb"},{"post_id":"clqwm2cgq001juc7t23nbf7j6","tag_id":"clqwm2cgy001zuc7thx7lbga3","_id":"clqwm2ch00023uc7tchjg701d"}],"Tag":[{"name":"instrument","_id":"clqwlt7sw0004uc7t2gbw5m95"},{"name":"libimobiledevice","_id":"clqwlt7sx0006uc7t1g8r56q3"},{"name":"网络请求","_id":"clqwlt7wm000cuc7t8yf5fq95"},{"name":"Http 报文","_id":"clqwlt7wp000iuc7t893yfw19"},{"name":"URL","_id":"clqwlt7wq000luc7tcu084yjy"},{"name":"cUrl","_id":"clqwlt7wq000ouc7tg6kog8se"},{"name":"weak&strong","_id":"clqwlt7wv000xuc7t5tnm3nt3"},{"name":"gem","_id":"clqwm2cgk0018uc7t5h887kw3"},{"name":"rvm","_id":"clqwm2cgo001euc7t5f121vor"},{"name":"UITableView","_id":"clqwm2cgq001huc7thymxem93"},{"name":"github","_id":"clqwm2cgs001nuc7t4ibdcarj"},{"name":"tools","_id":"clqwm2cgv001tuc7tai23cqhg"},{"name":"plugins","_id":"clqwm2cgy001zuc7thx7lbga3"}]}}